                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.2 #9293 (MINGW32)
                              4 ; This file was generated Fri Sep 13 12:59:53 2019
                              5 ;--------------------------------------------------------
                              6 	.module game
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _main
                             13 	.globl _game_loop
                             14 	.globl _prepare_scr
                             15 	.globl _game_init
                             16 	.globl _player_frame_selector
                             17 	.globl _flickscreen_do_vertical
                             18 	.globl _flickscreen_do_horizontal
                             19 	.globl _credits
                             20 	.globl _scr_the_end
                             21 	.globl _scr_game_over
                             22 	.globl _title
                             23 	.globl _pres
                             24 	.globl _bat_out
                             25 	.globl _bat_in
                             26 	.globl _hud_update
                             27 	.globl _draw_game_frame
                             28 	.globl _enems_move
                             29 	.globl _enems_load
                             30 	.globl _enems_persistent_update
                             31 	.globl _enems_persistent_load
                             32 	.globl _player_move
                             33 	.globl _bullets_move
                             34 	.globl _player_kill
                             35 	.globl _player_to_pixels
                             36 	.globl _player_render
                             37 	.globl _player_init
                             38 	.globl _cocos_do
                             39 	.globl _cocos_init
                             40 	.globl _hotspots_create
                             41 	.globl _hotspots_paint
                             42 	.globl _hotspots_load
                             43 	.globl _breakable_do_anim
                             44 	.globl _do_update_list_and_wait
                             45 	.globl _update_cycle
                             46 	.globl _pad_read
                             47 	.globl _collide_in
                             48 	.globl _pr_str
                             49 	.globl _draw_scr
                             50 	.globl _map_set
                             51 	.globl _p_t
                             52 	.globl _cls
                             53 	.globl _clear_update_list
                             54 	.globl _unrle
                             55 	.globl _unpack_bg_patterns
                             56 	.globl _memfill
                             57 	.globl _delay
                             58 	.globl _aPLib_depack_VRAM
                             59 	.globl _PSGSFXStop
                             60 	.globl _PSGSFXPlay
                             61 	.globl _PSGStop
                             62 	.globl _PSGPlay
                             63 	.globl _music_pause
                             64 	.globl _SG_doUpdateList
                             65 	.globl _SG_setUpdateList
                             66 	.globl _SG_copySpritestoSAT
                             67 	.globl _SG_resetPauseRequest
                             68 	.globl _SG_queryPauseRequested
                             69 	.globl _SG_getKeysStatus
                             70 	.globl _SG_getStp
                             71 	.globl _SG_addMetaSprite1x1
                             72 	.globl _SG_initSprites
                             73 	.globl _SG_waitForVBlank
                             74 	.globl _SG_setSpriteMode
                             75 	.globl _SG_VDPturnOffFeature
                             76 	.globl _SG_VDPturnOnFeature
                             77 	.globl _bombs_set
                             78 	.globl _en_spr_id
                             79 	.globl _en_spr_x_mod
                             80 	.globl _en_rawv
                             81 	.globl _en_ct
                             82 	.globl _en_status
                             83 	.globl _en_life
                             84 	.globl _en_cttouched
                             85 	.globl _en_flags
                             86 	.globl _en_state
                             87 	.globl _en_facing
                             88 	.globl _en_s
                             89 	.globl _en_my
                             90 	.globl _en_mx
                             91 	.globl _en_y2
                             92 	.globl _en_x2
                             93 	.globl _en_y1
                             94 	.globl _en_x1
                             95 	.globl _en_y
                             96 	.globl _en_x
                             97 	.globl _en_t
                             98 	.globl _flags
                             99 	.globl _lkact
                            100 	.globl _hact
                            101 	.globl _pmayneedrelocation
                            102 	.globl _brky
                            103 	.globl _brkx
                            104 	.globl _brkf
                            105 	.globl _coco_vy
                            106 	.globl _coco_vx
                            107 	.globl _coco_y
                            108 	.globl _coco_x
                            109 	.globl _coco_on
                            110 	.globl _coco_slots_i
                            111 	.globl _coco_slots
                            112 	.globl _pctfr
                            113 	.globl _bmy
                            114 	.globl _bmx
                            115 	.globl _by
                            116 	.globl _bx
                            117 	.globl _bst
                            118 	.globl _b_slots_i
                            119 	.globl _b_slots
                            120 	.globl _oam_index_player
                            121 	.globl _okilled
                            122 	.globl _oammo
                            123 	.globl _oobjs
                            124 	.globl _okeys
                            125 	.globl _olife
                            126 	.globl _flick_override
                            127 	.globl _level_reset
                            128 	.globl _warp_to_level
                            129 	.globl _game_over
                            130 	.globl _win_level
                            131 	.globl _paused
                            132 	.globl _frame_counter
                            133 	.globl _half_life
                            134 	.globl _on_pant
                            135 	.globl _n_pant
                            136 	.globl _c_max_enems
                            137 	.globl _level
                            138 	.globl _first_game
                            139 	.globl _map_buff
                            140 	.globl _fade_delay
                            141 	.globl _fader
                            142 	.globl _update_list
                            143 	.globl _update_index
                            144 	.globl _ntsc_frame
                            145 	.globl _ntsc
                            146 	.globl _c_max_bolts
                            147 	.globl _c_hotspots
                            148 	.globl _c_enems
                            149 	.globl _c_locks
                            150 	.globl _c_map
                            151 	.globl _spr_enems
                            152 	.globl _c_behs
                            153 	.globl _c_ts_tmaps
                            154 	.globl _c_map_size
                            155 	.globl _c_map_h
                            156 	.globl _c_map_w
                            157 	.globl _ft
                            158 	.globl _do_process_breakable
                            159 	.globl _hrt
                            160 	.globl _hry
                            161 	.globl _hrx
                            162 	.globl _coco_it
                            163 	.globl _bi
                            164 	.globl _pfiring
                            165 	.globl _pkilled
                            166 	.globl _pammo
                            167 	.globl _pobjs
                            168 	.globl _pkeys
                            169 	.globl _plife
                            170 	.globl _pcontinues
                            171 	.globl _pnotsafe
                            172 	.globl _pice
                            173 	.globl _pkill
                            174 	.globl _pry_old
                            175 	.globl _prx_old
                            176 	.globl _hith
                            177 	.globl _hitv
                            178 	.globl _pfacingh
                            179 	.globl _pfacingv
                            180 	.globl _pgtmy
                            181 	.globl _pgtmx
                            182 	.globl _phit
                            183 	.globl _pbouncing
                            184 	.globl _pflickering
                            185 	.globl _oppossee
                            186 	.globl _ppossee
                            187 	.globl _pgotten
                            188 	.globl _pctj
                            189 	.globl _pjb
                            190 	.globl _pj
                            191 	.globl _pfacinghlast
                            192 	.globl _b_button
                            193 	.globl _a_button
                            194 	.globl _psprid
                            195 	.globl _pfr
                            196 	.globl _pfacing
                            197 	.globl _pcy
                            198 	.globl _pcx
                            199 	.globl _pry
                            200 	.globl _prx
                            201 	.globl _pvy
                            202 	.globl _pvx
                            203 	.globl _py
                            204 	.globl _px
                            205 	.globl _vertical_engine_type
                            206 	.globl _en_sg_2
                            207 	.globl _en_sg_1
                            208 	.globl __enf_vy
                            209 	.globl __enf_vx
                            210 	.globl __enf_y
                            211 	.globl __enf_x
                            212 	.globl __en_state
                            213 	.globl __en_facing
                            214 	.globl __en_ct
                            215 	.globl __en_my
                            216 	.globl __en_mx
                            217 	.globl __en_y2
                            218 	.globl __en_x2
                            219 	.globl __en_y1
                            220 	.globl __en_x1
                            221 	.globl __en_y
                            222 	.globl __en_x
                            223 	.globl __en_s
                            224 	.globl __en_t
                            225 	.globl _en_rmy
                            226 	.globl _en_rmx
                            227 	.globl _pregotten
                            228 	.globl _en_is_alive
                            229 	.globl _touched
                            230 	.globl _en_spr
                            231 	.globl _en_colly
                            232 	.globl _en_collx
                            233 	.globl _en_fr
                            234 	.globl _en_offs
                            235 	.globl _en_initial
                            236 	.globl _cur_stp
                            237 	.globl _caux
                            238 	.globl _cy2
                            239 	.globl _cy1
                            240 	.globl _cx2
                            241 	.globl _cx1
                            242 	.globl _at2
                            243 	.globl _at1
                            244 	.globl _ticker
                            245 	.globl _rdct
                            246 	.globl _rds
                            247 	.globl _rdm
                            248 	.globl _rdd
                            249 	.globl _rdc
                            250 	.globl _rdb
                            251 	.globl _rda
                            252 	.globl _rdit
                            253 	.globl _rdt
                            254 	.globl _rdy
                            255 	.globl _rdx
                            256 	.globl _gp_addr
                            257 	.globl _gp_ram
                            258 	.globl _gp_tmap
                            259 	.globl _gp_gen
                            260 	.globl _rds16
                            261 	.globl _gpjt
                            262 	.globl _gpit
                            263 	.globl _pad_this_frame
                            264 	.globl _pad0
                            265 	.globl __t
                            266 	.globl __n
                            267 	.globl __y
                            268 	.globl __x
                            269 	.globl _bombs_y
                            270 	.globl _bombs_x
                            271 	.globl _l_music
                            272 	.globl _l_hotspots
                            273 	.globl _l_enems
                            274 	.globl _l_n_bolts
                            275 	.globl _l_locks
                            276 	.globl _l_map
                            277 	.globl _l_spr_enems
                            278 	.globl _l_behs
                            279 	.globl _l_ts_tmaps
                            280 	.globl _l_player_max_enems
                            281 	.globl _l_player_max_objects
                            282 	.globl _l_map_h
                            283 	.globl _l_map_w
                            284 	.globl _l_ini_y
                            285 	.globl _l_ini_x
                            286 	.globl _l_scr_ini
                            287 	.globl _spr_hs
                            288 	.globl _spr_enems0
                            289 	.globl _spr_player
                            290 	.globl _behs2
                            291 	.globl _behs0
                            292 	.globl _jitter
                            293 	.globl _bits
                            294 	.globl _coco_dy
                            295 	.globl _coco_dx
                            296 ;--------------------------------------------------------
                            297 ; special function registers
                            298 ;--------------------------------------------------------
                     00BF   299 _VDPControlPort	=	0x00bf
                     00BF   300 _VDPStatusPort	=	0x00bf
                     00BE   301 _VDPDataPort	=	0x00be
                     007E   302 _VDPVCounterPort	=	0x007e
                     007F   303 _VDPHCounterPort	=	0x007f
                     00DC   304 _IOPortL	=	0x00dc
                     00DD   305 _IOPortH	=	0x00dd
                            306 ;--------------------------------------------------------
                            307 ; ram data
                            308 ;--------------------------------------------------------
                            309 	.area _DATA
   0000                     310 __x::
   0000                     311 	.ds 1
   0001                     312 __y::
   0001                     313 	.ds 1
   0002                     314 __n::
   0002                     315 	.ds 1
   0003                     316 __t::
   0003                     317 	.ds 1
   0004                     318 _pad0::
   0004                     319 	.ds 1
   0005                     320 _pad_this_frame::
   0005                     321 	.ds 1
   0006                     322 _gpit::
   0006                     323 	.ds 1
   0007                     324 _gpjt::
   0007                     325 	.ds 1
   0008                     326 _rds16::
   0008                     327 	.ds 2
   000A                     328 _gp_gen::
   000A                     329 	.ds 2
   000C                     330 _gp_tmap::
   000C                     331 	.ds 2
   000E                     332 _gp_ram::
   000E                     333 	.ds 2
   0010                     334 _gp_addr::
   0010                     335 	.ds 2
   0012                     336 _rdx::
   0012                     337 	.ds 1
   0013                     338 _rdy::
   0013                     339 	.ds 1
   0014                     340 _rdt::
   0014                     341 	.ds 1
   0015                     342 _rdit::
   0015                     343 	.ds 1
   0016                     344 _rda::
   0016                     345 	.ds 1
   0017                     346 _rdb::
   0017                     347 	.ds 1
   0018                     348 _rdc::
   0018                     349 	.ds 1
   0019                     350 _rdd::
   0019                     351 	.ds 1
   001A                     352 _rdm::
   001A                     353 	.ds 1
   001B                     354 _rds::
   001B                     355 	.ds 1
   001C                     356 _rdct::
   001C                     357 	.ds 1
   001D                     358 _ticker::
   001D                     359 	.ds 1
   001E                     360 _at1::
   001E                     361 	.ds 1
   001F                     362 _at2::
   001F                     363 	.ds 1
   0020                     364 _cx1::
   0020                     365 	.ds 1
   0021                     366 _cx2::
   0021                     367 	.ds 1
   0022                     368 _cy1::
   0022                     369 	.ds 1
   0023                     370 _cy2::
   0023                     371 	.ds 1
   0024                     372 _caux::
   0024                     373 	.ds 1
   0025                     374 _cur_stp::
   0025                     375 	.ds 2
   0027                     376 _en_initial::
   0027                     377 	.ds 1
   0028                     378 _en_offs::
   0028                     379 	.ds 1
   0029                     380 _en_fr::
   0029                     381 	.ds 1
   002A                     382 _en_collx::
   002A                     383 	.ds 1
   002B                     384 _en_colly::
   002B                     385 	.ds 1
   002C                     386 _en_spr::
   002C                     387 	.ds 1
   002D                     388 _touched::
   002D                     389 	.ds 1
   002E                     390 _en_is_alive::
   002E                     391 	.ds 1
   002F                     392 _pregotten::
   002F                     393 	.ds 1
   0030                     394 _en_rmx::
   0030                     395 	.ds 3
   0033                     396 _en_rmy::
   0033                     397 	.ds 3
   0036                     398 __en_t::
   0036                     399 	.ds 1
   0037                     400 __en_s::
   0037                     401 	.ds 1
   0038                     402 __en_x::
   0038                     403 	.ds 1
   0039                     404 __en_y::
   0039                     405 	.ds 1
   003A                     406 __en_x1::
   003A                     407 	.ds 1
   003B                     408 __en_y1::
   003B                     409 	.ds 1
   003C                     410 __en_x2::
   003C                     411 	.ds 1
   003D                     412 __en_y2::
   003D                     413 	.ds 1
   003E                     414 __en_mx::
   003E                     415 	.ds 1
   003F                     416 __en_my::
   003F                     417 	.ds 1
   0040                     418 __en_ct::
   0040                     419 	.ds 1
   0041                     420 __en_facing::
   0041                     421 	.ds 1
   0042                     422 __en_state::
   0042                     423 	.ds 1
   0043                     424 __enf_x::
   0043                     425 	.ds 2
   0045                     426 __enf_y::
   0045                     427 	.ds 2
   0047                     428 __enf_vx::
   0047                     429 	.ds 2
   0049                     430 __enf_vy::
   0049                     431 	.ds 2
   004B                     432 _en_sg_1::
   004B                     433 	.ds 1
   004C                     434 _en_sg_2::
   004C                     435 	.ds 1
   004D                     436 _vertical_engine_type::
   004D                     437 	.ds 1
   004E                     438 _px::
   004E                     439 	.ds 2
   0050                     440 _py::
   0050                     441 	.ds 2
   0052                     442 _pvx::
   0052                     443 	.ds 2
   0054                     444 _pvy::
   0054                     445 	.ds 2
   0056                     446 _prx::
   0056                     447 	.ds 1
   0057                     448 _pry::
   0057                     449 	.ds 1
   0058                     450 _pcx::
   0058                     451 	.ds 1
   0059                     452 _pcy::
   0059                     453 	.ds 1
   005A                     454 _pfacing::
   005A                     455 	.ds 1
   005B                     456 _pfr::
   005B                     457 	.ds 1
   005C                     458 _psprid::
   005C                     459 	.ds 1
   005D                     460 _a_button::
   005D                     461 	.ds 1
   005E                     462 _b_button::
   005E                     463 	.ds 1
   005F                     464 _pfacinghlast::
   005F                     465 	.ds 1
   0060                     466 _pj::
   0060                     467 	.ds 1
   0061                     468 _pjb::
   0061                     469 	.ds 1
   0062                     470 _pctj::
   0062                     471 	.ds 1
   0063                     472 _pgotten::
   0063                     473 	.ds 1
   0064                     474 _ppossee::
   0064                     475 	.ds 1
   0065                     476 _oppossee::
   0065                     477 	.ds 1
   0066                     478 _pflickering::
   0066                     479 	.ds 1
   0067                     480 _pbouncing::
   0067                     481 	.ds 1
   0068                     482 _phit::
   0068                     483 	.ds 1
   0069                     484 _pgtmx::
   0069                     485 	.ds 2
   006B                     486 _pgtmy::
   006B                     487 	.ds 2
   006D                     488 _pfacingv::
   006D                     489 	.ds 1
   006E                     490 _pfacingh::
   006E                     491 	.ds 1
   006F                     492 _hitv::
   006F                     493 	.ds 1
   0070                     494 _hith::
   0070                     495 	.ds 1
   0071                     496 _prx_old::
   0071                     497 	.ds 1
   0072                     498 _pry_old::
   0072                     499 	.ds 1
   0073                     500 _pkill::
   0073                     501 	.ds 1
   0074                     502 _pice::
   0074                     503 	.ds 1
   0075                     504 _pnotsafe::
   0075                     505 	.ds 1
   0076                     506 _pcontinues::
   0076                     507 	.ds 1
   0077                     508 _plife::
   0077                     509 	.ds 1
   0078                     510 _pkeys::
   0078                     511 	.ds 1
   0079                     512 _pobjs::
   0079                     513 	.ds 1
   007A                     514 _pammo::
   007A                     515 	.ds 1
   007B                     516 _pkilled::
   007B                     517 	.ds 1
   007C                     518 _pfiring::
   007C                     519 	.ds 1
   007D                     520 _bi::
   007D                     521 	.ds 1
   007E                     522 _coco_it::
   007E                     523 	.ds 1
   007F                     524 _hrx::
   007F                     525 	.ds 1
   0080                     526 _hry::
   0080                     527 	.ds 1
   0081                     528 _hrt::
   0081                     529 	.ds 1
   0082                     530 _do_process_breakable::
   0082                     531 	.ds 1
   0083                     532 _ft::
   0083                     533 	.ds 1
   0084                     534 _c_map_w::
   0084                     535 	.ds 1
   0085                     536 _c_map_h::
   0085                     537 	.ds 1
   0086                     538 _c_map_size::
   0086                     539 	.ds 1
   0087                     540 _c_ts_tmaps::
   0087                     541 	.ds 2
   0089                     542 _c_behs::
   0089                     543 	.ds 2
   008B                     544 _spr_enems::
   008B                     545 	.ds 2
   008D                     546 _c_map::
   008D                     547 	.ds 2
   008F                     548 _c_locks::
   008F                     549 	.ds 2
   0091                     550 _c_enems::
   0091                     551 	.ds 2
   0093                     552 _c_hotspots::
   0093                     553 	.ds 2
   0095                     554 _c_max_bolts::
   0095                     555 	.ds 1
   0096                     556 _ntsc::
   0096                     557 	.ds 1
   0097                     558 _ntsc_frame::
   0097                     559 	.ds 1
   0098                     560 _update_index::
   0098                     561 	.ds 1
   0099                     562 _update_list::
   0099                     563 	.ds 96
   00F9                     564 _fader::
   00F9                     565 	.ds 1
   00FA                     566 _fade_delay::
   00FA                     567 	.ds 1
   00FB                     568 _map_buff::
   00FB                     569 	.ds 192
   01BB                     570 _first_game::
   01BB                     571 	.ds 1
   01BC                     572 _level::
   01BC                     573 	.ds 1
   01BD                     574 _c_max_enems::
   01BD                     575 	.ds 1
   01BE                     576 _n_pant::
   01BE                     577 	.ds 1
   01BF                     578 _on_pant::
   01BF                     579 	.ds 1
   01C0                     580 _half_life::
   01C0                     581 	.ds 1
   01C1                     582 _frame_counter::
   01C1                     583 	.ds 1
   01C2                     584 _paused::
   01C2                     585 	.ds 1
   01C3                     586 _win_level::
   01C3                     587 	.ds 1
   01C4                     588 _game_over::
   01C4                     589 	.ds 1
   01C5                     590 _warp_to_level::
   01C5                     591 	.ds 1
   01C6                     592 _level_reset::
   01C6                     593 	.ds 1
   01C7                     594 _flick_override::
   01C7                     595 	.ds 1
   01C8                     596 _olife::
   01C8                     597 	.ds 1
   01C9                     598 _okeys::
   01C9                     599 	.ds 1
   01CA                     600 _oobjs::
   01CA                     601 	.ds 1
   01CB                     602 _oammo::
   01CB                     603 	.ds 1
   01CC                     604 _okilled::
   01CC                     605 	.ds 1
   01CD                     606 _oam_index_player::
   01CD                     607 	.ds 1
   01CE                     608 _b_slots::
   01CE                     609 	.ds 4
   01D2                     610 _b_slots_i::
   01D2                     611 	.ds 1
   01D3                     612 _bst::
   01D3                     613 	.ds 4
   01D7                     614 _bx::
   01D7                     615 	.ds 4
   01DB                     616 _by::
   01DB                     617 	.ds 4
   01DF                     618 _bmx::
   01DF                     619 	.ds 4
   01E3                     620 _bmy::
   01E3                     621 	.ds 4
   01E7                     622 _pctfr::
   01E7                     623 	.ds 1
   01E8                     624 _coco_slots::
   01E8                     625 	.ds 4
   01EC                     626 _coco_slots_i::
   01EC                     627 	.ds 1
   01ED                     628 _coco_on::
   01ED                     629 	.ds 4
   01F1                     630 _coco_x::
   01F1                     631 	.ds 8
   01F9                     632 _coco_y::
   01F9                     633 	.ds 8
   0201                     634 _coco_vx::
   0201                     635 	.ds 8
   0209                     636 _coco_vy::
   0209                     637 	.ds 8
   0211                     638 _brkf::
   0211                     639 	.ds 4
   0215                     640 _brkx::
   0215                     641 	.ds 4
   0219                     642 _brky::
   0219                     643 	.ds 4
   021D                     644 _pmayneedrelocation::
   021D                     645 	.ds 1
   021E                     646 _hact::
   021E                     647 	.ds 24
   0236                     648 _lkact::
   0236                     649 	.ds 16
   0246                     650 _flags::
   0246                     651 	.ds 16
   0256                     652 _en_t::
   0256                     653 	.ds 3
   0259                     654 _en_x::
   0259                     655 	.ds 3
   025C                     656 _en_y::
   025C                     657 	.ds 3
   025F                     658 _en_x1::
   025F                     659 	.ds 3
   0262                     660 _en_y1::
   0262                     661 	.ds 3
   0265                     662 _en_x2::
   0265                     663 	.ds 3
   0268                     664 _en_y2::
   0268                     665 	.ds 3
   026B                     666 _en_mx::
   026B                     667 	.ds 3
   026E                     668 _en_my::
   026E                     669 	.ds 3
   0271                     670 _en_s::
   0271                     671 	.ds 3
   0274                     672 _en_facing::
   0274                     673 	.ds 3
   0277                     674 _en_state::
   0277                     675 	.ds 3
   027A                     676 _en_flags::
   027A                     677 	.ds 3
   027D                     678 _en_cttouched::
   027D                     679 	.ds 3
   0280                     680 _en_life::
   0280                     681 	.ds 3
   0283                     682 _en_status::
   0283                     683 	.ds 3
   0286                     684 _en_ct::
   0286                     685 	.ds 3
   0289                     686 _en_rawv::
   0289                     687 	.ds 3
   028C                     688 _en_spr_x_mod::
   028C                     689 	.ds 1
   028D                     690 _en_spr_id::
   028D                     691 	.ds 3
   0290                     692 _bombs_set::
   0290                     693 	.ds 1
                            694 ;--------------------------------------------------------
                            695 ; ram data
                            696 ;--------------------------------------------------------
                            697 	.area _INITIALIZED
                            698 ;--------------------------------------------------------
                            699 ; absolute external ram data
                            700 ;--------------------------------------------------------
                            701 	.area _DABS (ABS)
                            702 ;--------------------------------------------------------
                            703 ; global & static initialisations
                            704 ;--------------------------------------------------------
                            705 	.area _HOME
                            706 	.area _GSINIT
                            707 	.area _GSFINAL
                            708 	.area _GSINIT
                            709 ;--------------------------------------------------------
                            710 ; Home
                            711 ;--------------------------------------------------------
                            712 	.area _HOME
                            713 	.area _HOME
                            714 ;--------------------------------------------------------
                            715 ; code
                            716 ;--------------------------------------------------------
                            717 	.area _CODE
                            718 ;./engine/hotspots.h:7: void hotspots_load (void) {
                            719 ;	---------------------------------
                            720 ; Function hotspots_load
                            721 ; ---------------------------------
   0000                     722 _hotspots_load::
                            723 ;./engine/hotspots.h:9: gp_gen = (unsigned char *) c_hotspots;
   0000 2Ar93r00      [16]  724 	ld	hl,(_c_hotspots)
   0003 22r0Ar00      [16]  725 	ld	(_gp_gen),hl
                            726 ;./engine/hotspots.h:11: for (gpit = 0; gpit < MAP_SIZE; gpit ++) {
   0006 21r06r00      [10]  727 	ld	hl,#_gpit + 0
   0009 36 00         [10]  728 	ld	(hl), #0x00
   000B 11r1Er02      [10]  729 	ld	de,#_hact+0
   000E                     730 00102$:
                            731 ;./engine/hotspots.h:16: hact [gpit] = 1;
   000E 2Ar06r00      [16]  732 	ld	hl,(_gpit)
   0011 26 00         [ 7]  733 	ld	h,#0x00
   0013 19            [11]  734 	add	hl,de
   0014 36 01         [10]  735 	ld	(hl),#0x01
                            736 ;./engine/hotspots.h:11: for (gpit = 0; gpit < MAP_SIZE; gpit ++) {
   0016 21r06r00      [10]  737 	ld	hl, #_gpit+0
   0019 34            [11]  738 	inc	(hl)
   001A 3Ar06r00      [13]  739 	ld	a,(#_gpit + 0)
   001D D6 18         [ 7]  740 	sub	a, #0x18
   001F 38 ED         [12]  741 	jr	C,00102$
   0021 C9            [10]  742 	ret
   0022                     743 _coco_dx:
   0022 00 FF               744 	.dw #0xFF00
   0024 00 00               745 	.dw #0x0000
   0026 00 01               746 	.dw #0x0100
   0028 00 00               747 	.dw #0x0000
   002A                     748 _coco_dy:
   002A 00 00               749 	.dw #0x0000
   002C 00 FF               750 	.dw #0xFF00
   002E 00 00               751 	.dw #0x0000
   0030 00 01               752 	.dw #0x0100
   0032                     753 _bits:
   0032 01                  754 	.db #0x01	; 1
   0033 02                  755 	.db #0x02	; 2
   0034 04                  756 	.db #0x04	; 4
   0035 08                  757 	.db #0x08	; 8
   0036 10                  758 	.db #0x10	; 16
   0037 20                  759 	.db #0x20	; 32
   0038 40                  760 	.db #0x40	; 64
   0039 80                  761 	.db #0x80	; 128
   003A                     762 _jitter:
   003A 00                  763 	.db #0x00	; 0
   003B 01                  764 	.db #0x01	; 1
   003C 01                  765 	.db #0x01	; 1
   003D 00                  766 	.db #0x00	; 0
   003E 00                  767 	.db #0x00	; 0
   003F 01                  768 	.db #0x01	; 1
   0040 00                  769 	.db #0x00	; 0
   0041 01                  770 	.db #0x01	; 1
   0042 01                  771 	.db #0x01	; 1
   0043 00                  772 	.db #0x00	; 0
   0044 00                  773 	.db #0x00	; 0
   0045 00                  774 	.db #0x00	; 0
   0046 01                  775 	.db #0x01	; 1
   0047 00                  776 	.db #0x00	; 0
   0048 01                  777 	.db #0x01	; 1
   0049 01                  778 	.db #0x01	; 1
   004A                     779 _behs0:
   004A 00                  780 	.db #0x00	; 0
   004B 00                  781 	.db #0x00	; 0
   004C 04                  782 	.db #0x04	; 4
   004D 08                  783 	.db #0x08	; 8
   004E 08                  784 	.db #0x08	; 8
   004F 08                  785 	.db #0x08	; 8
   0050 08                  786 	.db #0x08	; 8
   0051 04                  787 	.db #0x04	; 4
   0052 11                  788 	.db #0x11	; 17
   0053 04                  789 	.db #0x04	; 4
   0054 08                  790 	.db #0x08	; 8
   0055 08                  791 	.db #0x08	; 8
   0056 08                  792 	.db #0x08	; 8
   0057 08                  793 	.db #0x08	; 8
   0058 0B                  794 	.db #0x0B	; 11
   0059 0A                  795 	.db #0x0A	; 10
   005A 08                  796 	.db #0x08	; 8
   005B 08                  797 	.db #0x08	; 8
   005C 08                  798 	.db #0x08	; 8
   005D 08                  799 	.db #0x08	; 8
   005E 08                  800 	.db #0x08	; 8
   005F 08                  801 	.db #0x08	; 8
   0060 04                  802 	.db #0x04	; 4
   0061 04                  803 	.db #0x04	; 4
   0062 08                  804 	.db #0x08	; 8
   0063 00                  805 	.db #0x00	; 0
   0064 00                  806 	.db #0x00	; 0
   0065 00                  807 	.db #0x00	; 0
   0066 01                  808 	.db #0x01	; 1
   0067 00                  809 	.db #0x00	; 0
   0068 00                  810 	.db #0x00	; 0
   0069 00                  811 	.db #0x00	; 0
   006A                     812 _behs2:
   006A 00                  813 	.db #0x00	; 0
   006B 08                  814 	.db #0x08	; 8
   006C 00                  815 	.db #0x00	; 0
   006D 04                  816 	.db #0x04	; 4
   006E 01                  817 	.db #0x01	; 1
   006F 04                  818 	.db #0x04	; 4
   0070 08                  819 	.db #0x08	; 8
   0071 04                  820 	.db #0x04	; 4
   0072 11                  821 	.db #0x11	; 17
   0073 04                  822 	.db #0x04	; 4
   0074 08                  823 	.db #0x08	; 8
   0075 08                  824 	.db #0x08	; 8
   0076 08                  825 	.db #0x08	; 8
   0077 08                  826 	.db #0x08	; 8
   0078 0B                  827 	.db #0x0B	; 11
   0079 0A                  828 	.db #0x0A	; 10
   007A 08                  829 	.db #0x08	; 8
   007B 08                  830 	.db #0x08	; 8
   007C 08                  831 	.db #0x08	; 8
   007D 08                  832 	.db #0x08	; 8
   007E 08                  833 	.db #0x08	; 8
   007F 08                  834 	.db #0x08	; 8
   0080 08                  835 	.db #0x08	; 8
   0081 08                  836 	.db #0x08	; 8
   0082 08                  837 	.db #0x08	; 8
   0083 00                  838 	.db #0x00	; 0
   0084 00                  839 	.db #0x00	; 0
   0085 00                  840 	.db #0x00	; 0
   0086 01                  841 	.db #0x01	; 1
   0087 00                  842 	.db #0x00	; 0
   0088 00                  843 	.db #0x00	; 0
   0089 00                  844 	.db #0x00	; 0
   008A                     845 _spr_player:
   008Ar00r00               846 	.dw _ss_pl_00
   008Cr00r00               847 	.dw _ss_pl_01
   008Er00r00               848 	.dw _ss_pl_02
   0090r00r00               849 	.dw _ss_pl_03
   0092r00r00               850 	.dw _ss_pl_04
   0094r00r00               851 	.dw _ss_pl_05
   0096r00r00               852 	.dw _ss_pl_06
   0098r00r00               853 	.dw _ss_pl_07
   009A                     854 _spr_enems0:
   009Ar00r00               855 	.dw _ss_en_00
   009Cr00r00               856 	.dw _ss_en_01
   009E 00 00               857 	.dw #0x0000
   00A0 00 00               858 	.dw #0x0000
   00A2r00r00               859 	.dw _ss_en_00
   00A4r00r00               860 	.dw _ss_en_01
   00A6 00 00               861 	.dw #0x0000
   00A8 00 00               862 	.dw #0x0000
   00AAr00r00               863 	.dw _ss_en_02
   00ACr00r00               864 	.dw _ss_en_03
   00AE 00 00               865 	.dw #0x0000
   00B0 00 00               866 	.dw #0x0000
   00B2r00r00               867 	.dw _ss_en_02
   00B4r00r00               868 	.dw _ss_en_03
   00B6 00 00               869 	.dw #0x0000
   00B8 00 00               870 	.dw #0x0000
   00BAr00r00               871 	.dw _ss_en_04
   00BCr00r00               872 	.dw _ss_en_05
   00BE 00 00               873 	.dw #0x0000
   00C0 00 00               874 	.dw #0x0000
   00C2r00r00               875 	.dw _ss_en_04
   00C4r00r00               876 	.dw _ss_en_05
   00C6 00 00               877 	.dw #0x0000
   00C8 00 00               878 	.dw #0x0000
   00CAr00r00               879 	.dw _ss_en_06
   00CCr00r00               880 	.dw _ss_en_07
   00CE 00 00               881 	.dw #0x0000
   00D0 00 00               882 	.dw #0x0000
   00D2r00r00               883 	.dw _ss_en_06
   00D4r00r00               884 	.dw _ss_en_07
   00D6 00 00               885 	.dw #0x0000
   00D8 00 00               886 	.dw #0x0000
   00DAr00r00               887 	.dw _ss_en_08
   00DCr00r00               888 	.dw _ss_en_09
   00DE 00 00               889 	.dw #0x0000
   00E0 00 00               890 	.dw #0x0000
   00E2r00r00               891 	.dw _ss_en_08
   00E4r00r00               892 	.dw _ss_en_09
   00E6 00 00               893 	.dw #0x0000
   00E8 00 00               894 	.dw #0x0000
   00EAr00r00               895 	.dw _ss_it_00
   00ECr00r00               896 	.dw _ss_ss_00
   00EEr00r00               897 	.dw _ss_ss_01
   00F0r00r00               898 	.dw _ss_ss_02
   00F2r00r00               899 	.dw _ss_ss_03
   00F4                     900 _spr_hs:
   00F4 00 00               901 	.dw #0x0000
   00F6r00r00               902 	.dw _ss_it_01
   00F8r00r00               903 	.dw _ss_it_02
   00FAr00r00               904 	.dw _ss_it_03
   00FCr00r00               905 	.dw _ss_it_04
   00FE                     906 _l_scr_ini:
   00FE 17                  907 	.db #0x17	; 23
   00FF 17                  908 	.db #0x17	; 23
   0100 17                  909 	.db #0x17	; 23
   0101                     910 _l_ini_x:
   0101 0C                  911 	.db #0x0C	; 12
   0102 0C                  912 	.db #0x0C	; 12
   0103 07                  913 	.db #0x07	; 7
   0104                     914 _l_ini_y:
   0104 09                  915 	.db #0x09	; 9
   0105 09                  916 	.db #0x09	; 9
   0106 0A                  917 	.db #0x0A	; 10
   0107                     918 _l_map_w:
   0107 01                  919 	.db #0x01	; 1
   0108 01                  920 	.db #0x01	; 1
   0109 01                  921 	.db #0x01	; 1
   010A                     922 _l_map_h:
   010A 18                  923 	.db #0x18	; 24
   010B 18                  924 	.db #0x18	; 24
   010C 18                  925 	.db #0x18	; 24
   010D                     926 _l_player_max_objects:
   010D 05                  927 	.db #0x05	; 5
   010E 05                  928 	.db #0x05	; 5
   010F 05                  929 	.db #0x05	; 5
   0110                     930 _l_player_max_enems:
   0110 1E                  931 	.db #0x1E	; 30
   0111 0B                  932 	.db #0x0B	; 11
   0112 0D                  933 	.db #0x0D	; 13
   0113                     934 _l_ts_tmaps:
   0113r00r00               935 	.dw _ts0_tmaps
   0115r00r00               936 	.dw _ts1_tmaps
   0117r00r00               937 	.dw _ts2_tmaps
   0119                     938 _l_behs:
   0119r4Ar00               939 	.dw _behs0
   011Br4Ar00               940 	.dw _behs0
   011Dr6Ar00               941 	.dw _behs2
   011F                     942 _l_spr_enems:
   011Fr9Ar00               943 	.dw _spr_enems0
   0121r9Ar00               944 	.dw _spr_enems0
   0123r9Ar00               945 	.dw _spr_enems0
   0125                     946 _l_map:
   0125r00r00               947 	.dw _map_0
   0127r00r00               948 	.dw _map_1
   0129r00r00               949 	.dw _map_2
   012B                     950 _l_locks:
   012Br00r00               951 	.dw _map_0_locks
   012Dr00r00               952 	.dw _map_1_locks
   012Fr00r00               953 	.dw _map_2_locks
   0131                     954 _l_n_bolts:
   0131 07                  955 	.db #0x07	; 7
   0132 09                  956 	.db #0x09	; 9
   0133 08                  957 	.db #0x08	; 8
   0134                     958 _l_enems:
   0134r00r00               959 	.dw _enems_0
   0136r00r00               960 	.dw _enems_1
   0138r00r00               961 	.dw _enems_2
   013A                     962 _l_hotspots:
   013Ar00r00               963 	.dw _hotspots_0
   013Cr00r00               964 	.dw _hotspots_1
   013Er00r00               965 	.dw _hotspots_2
   0140                     966 _l_music:
   0140r00r00               967 	.dw _m_n_stagea_psg
   0142r00r00               968 	.dw _m_n_stageb_psg
   0144r00r00               969 	.dw _m_n_stagec_psg
   0146                     970 _bombs_x:
   0146 04                  971 	.db #0x04	; 4
   0147 04                  972 	.db #0x04	; 4
   0148 07                  973 	.db #0x07	; 7
   0149 0A                  974 	.db #0x0A	; 10
   014A 0A                  975 	.db #0x0A	; 10
   014B                     976 _bombs_y:
   014B 05                  977 	.db #0x05	; 5
   014C 03                  978 	.db #0x03	; 3
   014D 02                  979 	.db #0x02	; 2
   014E 03                  980 	.db #0x03	; 3
   014F 05                  981 	.db #0x05	; 5
                            982 ;./engine/hotspots.h:20: void hotspots_paint (void) {
                            983 ;	---------------------------------
                            984 ; Function hotspots_paint
                            985 ; ---------------------------------
   0150                     986 _hotspots_paint::
                            987 ;./engine/hotspots.h:30: rda = hrt;
   0150 3Ar81r00      [13]  988 	ld	a,(#_hrt + 0)
   0153 32r16r00      [13]  989 	ld	(#_rda + 0),a
                            990 ;./engine/hotspots.h:38: spr_hs [rda]
   0156 11rF4r00      [10]  991 	ld	de,#_spr_hs+0
   0159 FD 21r16r00   [14]  992 	ld	iy,#_rda
   015D FD 6E 00      [19]  993 	ld	l,0 (iy)
   0160 26 00         [ 7]  994 	ld	h,#0x00
   0162 29            [11]  995 	add	hl, hl
   0163 19            [11]  996 	add	hl,de
   0164 5E            [ 7]  997 	ld	e,(hl)
   0165 23            [ 6]  998 	inc	hl
   0166 56            [ 7]  999 	ld	d,(hl)
                           1000 ;./engine/hotspots.h:37: hrx, hry + SPRITE_ADJUST, 
   0167 3Ar80r00      [13] 1001 	ld	a,(#_hry + 0)
   016A C6 F7         [ 7] 1002 	add	a, #0xF7
   016C 67            [ 4] 1003 	ld	h,a
   016D D5            [11] 1004 	push	de
   016E E5            [11] 1005 	push	hl
   016F 33            [ 6] 1006 	inc	sp
   0170 3Ar7Fr00      [13] 1007 	ld	a,(_hrx)
   0173 F5            [11] 1008 	push	af
   0174 33            [ 6] 1009 	inc	sp
   0175 CDr00r00      [17] 1010 	call	_SG_addMetaSprite1x1
   0178 F1            [10] 1011 	pop	af
   0179 F1            [10] 1012 	pop	af
   017A C9            [10] 1013 	ret
                           1014 ;./engine/hotspots.h:42: void hotspots_create (void) {
                           1015 ;	---------------------------------
                           1016 ; Function hotspots_create
                           1017 ; ---------------------------------
   017B                    1018 _hotspots_create::
                           1019 ;./engine/hotspots.h:54: gp_gen = (unsigned char *) (c_hotspots + (n_pant << 1));
   017B FD 21rBEr01   [14] 1020 	ld	iy,#_n_pant
   017F FD 6E 00      [19] 1021 	ld	l,0 (iy)
   0182 26 00         [ 7] 1022 	ld	h,#0x00
   0184 29            [11] 1023 	add	hl, hl
   0185 55            [ 4] 1024 	ld	d,l
   0186 5C            [ 4] 1025 	ld	e,h
   0187 21r0Ar00      [10] 1026 	ld	hl,#_gp_gen
   018A 3Ar93r00      [13] 1027 	ld	a,(#_c_hotspots + 0)
   018D 82            [ 4] 1028 	add	a, d
   018E 77            [ 7] 1029 	ld	(hl),a
   018F 3Ar94r00      [13] 1030 	ld	a,(#_c_hotspots + 1)
   0192 8B            [ 4] 1031 	adc	a, e
   0193 23            [ 6] 1032 	inc	hl
   0194 77            [ 7] 1033 	ld	(hl),a
                           1034 ;./engine/hotspots.h:55: hrt = *gp_gen ++; rda = *gp_gen; 
   0195 2Ar0Ar00      [16] 1035 	ld	hl,(_gp_gen)
   0198 7E            [ 7] 1036 	ld	a,(hl)
   0199 32r81r00      [13] 1037 	ld	(#_hrt + 0),a
   019C 21r0Ar00      [10] 1038 	ld	hl, #_gp_gen+0
   019F 34            [11] 1039 	inc	(hl)
   01A0 20 04         [12] 1040 	jr	NZ,00115$
   01A2 21r0Br00      [10] 1041 	ld	hl, #_gp_gen+1
   01A5 34            [11] 1042 	inc	(hl)
   01A6                    1043 00115$:
   01A6 2Ar0Ar00      [16] 1044 	ld	hl,(_gp_gen)
   01A9 7E            [ 7] 1045 	ld	a,(hl)
   01AA 32r16r00      [13] 1046 	ld	(#_rda + 0),a
                           1047 ;./engine/hotspots.h:56: if (hrt && hact [n_pant]) {
   01AD 3Ar81r00      [13] 1048 	ld	a,(#_hrt + 0)
   01B0 B7            [ 4] 1049 	or	a, a
   01B1 28 22         [12] 1050 	jr	Z,00102$
   01B3 11r1Er02      [10] 1051 	ld	de,#_hact+0
   01B6 2ArBEr01      [16] 1052 	ld	hl,(_n_pant)
   01B9 26 00         [ 7] 1053 	ld	h,#0x00
   01BB 19            [11] 1054 	add	hl,de
   01BC 7E            [ 7] 1055 	ld	a,(hl)
   01BD B7            [ 4] 1056 	or	a, a
   01BE 28 15         [12] 1057 	jr	Z,00102$
                           1058 ;./engine/hotspots.h:57: hry = rda & 0xf0; hrx = rda << 4;
   01C0 3Ar16r00      [13] 1059 	ld	a,(#_rda + 0)
   01C3 E6 F0         [ 7] 1060 	and	a, #0xF0
   01C5 32r80r00      [13] 1061 	ld	(#_hry + 0),a
   01C8 3Ar16r00      [13] 1062 	ld	a,(#_rda + 0)
   01CB 07            [ 4] 1063 	rlca
   01CC 07            [ 4] 1064 	rlca
   01CD 07            [ 4] 1065 	rlca
   01CE 07            [ 4] 1066 	rlca
   01CF E6 F0         [ 7] 1067 	and	a,#0xF0
   01D1 32r7Fr00      [13] 1068 	ld	(#_hrx + 0),a
   01D4 C9            [10] 1069 	ret
   01D5                    1070 00102$:
                           1071 ;./engine/hotspots.h:58: } else hrt = 0;
   01D5 21r81r00      [10] 1072 	ld	hl,#_hrt + 0
   01D8 36 00         [10] 1073 	ld	(hl), #0x00
   01DA C9            [10] 1074 	ret
                           1075 ;./engine/../my/game_frame.h:7: void draw_game_frame (void) {
                           1076 ;	---------------------------------
                           1077 ; Function draw_game_frame
                           1078 ; ---------------------------------
   01DB                    1079 _draw_game_frame::
                           1080 ;./engine/../my/game_frame.h:8: gp_gen = frame_rle; unrle ();
   01DB 21r00r00      [10] 1081 	ld	hl,#_frame_rle+0
   01DE 22r0Ar00      [16] 1082 	ld	(_gp_gen),hl
   01E1 C3r00r00      [10] 1083 	jp  _unrle
                           1084 ;./engine/frame.h:9: void hud_update (void) {
                           1085 ;	---------------------------------
                           1086 ; Function hud_update
                           1087 ; ---------------------------------
   01E4                    1088 _hud_update::
                           1089 ;./engine/frame.h:19: if (oobjs != pobjs) {
   01E4 3ArCAr01      [13] 1090 	ld	a,(#_oobjs + 0)
   01E7 FD 21r79r00   [14] 1091 	ld	iy,#_pobjs
   01EB FD 96 00      [19] 1092 	sub	a, 0 (iy)
   01EE 28 19         [12] 1093 	jr	Z,00102$
                           1094 ;./engine/frame.h:20: oobjs = pobjs;
   01F0 21r79r00      [10] 1095 	ld	hl,#_pobjs + 0
   01F3 56            [ 7] 1096 	ld	d, (hl)
   01F4 21rCAr01      [10] 1097 	ld	hl,#_oobjs + 0
   01F7 72            [ 7] 1098 	ld	(hl), d
                           1099 ;./engine/frame.h:21: _x = OBJECTS_X; _y = OBJECTS_Y; 
   01F8 21r00r00      [10] 1100 	ld	hl,#__x + 0
   01FB 36 1B         [10] 1101 	ld	(hl), #0x1B
   01FD 21r01r00      [10] 1102 	ld	hl,#__y + 0
   0200 36 00         [10] 1103 	ld	(hl), #0x00
                           1104 ;./engine/frame.h:25: _n = pobjs; 
   0202 21r02r00      [10] 1105 	ld	hl,#__n + 0
   0205 72            [ 7] 1106 	ld	(hl), d
                           1107 ;./engine/frame.h:27: p_t ();
   0206 CDr00r00      [17] 1108 	call	_p_t
   0209                    1109 00102$:
                           1110 ;./engine/frame.h:32: if (okeys != pkeys) {
   0209 3ArC9r01      [13] 1111 	ld	a,(#_okeys + 0)
   020C FD 21r78r00   [14] 1112 	ld	iy,#_pkeys
   0210 FD 96 00      [19] 1113 	sub	a, 0 (iy)
   0213 28 19         [12] 1114 	jr	Z,00104$
                           1115 ;./engine/frame.h:33: okeys = pkeys;
   0215 21r78r00      [10] 1116 	ld	hl,#_pkeys + 0
   0218 56            [ 7] 1117 	ld	d, (hl)
   0219 21rC9r01      [10] 1118 	ld	hl,#_okeys + 0
   021C 72            [ 7] 1119 	ld	(hl), d
                           1120 ;./engine/frame.h:34: _x = KEYS_X; _y = KEYS_Y; _n = pkeys; p_t ();
   021D 21r00r00      [10] 1121 	ld	hl,#__x + 0
   0220 36 14         [10] 1122 	ld	(hl), #0x14
   0222 21r01r00      [10] 1123 	ld	hl,#__y + 0
   0225 36 00         [10] 1124 	ld	(hl), #0x00
   0227 21r02r00      [10] 1125 	ld	hl,#__n + 0
   022A 72            [ 7] 1126 	ld	(hl), d
   022B CDr00r00      [17] 1127 	call	_p_t
   022E                    1128 00104$:
                           1129 ;./engine/frame.h:39: if (olife != plife) {
   022E 3ArC8r01      [13] 1130 	ld	a,(#_olife + 0)
   0231 FD 21r77r00   [14] 1131 	ld	iy,#_plife
   0235 FD 96 00      [19] 1132 	sub	a, 0 (iy)
   0238 28 19         [12] 1133 	jr	Z,00106$
                           1134 ;./engine/frame.h:40: olife = plife;
   023A 21r77r00      [10] 1135 	ld	hl,#_plife + 0
   023D 56            [ 7] 1136 	ld	d, (hl)
   023E 21rC8r01      [10] 1137 	ld	hl,#_olife + 0
   0241 72            [ 7] 1138 	ld	(hl), d
                           1139 ;./engine/frame.h:41: _x = LIFE_X; _y = LIFE_Y; _n = plife; p_t ();
   0242 21r00r00      [10] 1140 	ld	hl,#__x + 0
   0245 36 05         [10] 1141 	ld	(hl), #0x05
   0247 21r01r00      [10] 1142 	ld	hl,#__y + 0
   024A 36 00         [10] 1143 	ld	(hl), #0x00
   024C 21r02r00      [10] 1144 	ld	hl,#__n + 0
   024F 72            [ 7] 1145 	ld	(hl), d
   0250 CDr00r00      [17] 1146 	call	_p_t
   0253                    1147 00106$:
                           1148 ;./engine/frame.h:46: if (oammo != pammo) {
   0253 3ArCBr01      [13] 1149 	ld	a,(#_oammo + 0)
   0256 FD 21r7Ar00   [14] 1150 	ld	iy,#_pammo
   025A FD 96 00      [19] 1151 	sub	a, 0 (iy)
   025D C8            [11] 1152 	ret	Z
                           1153 ;./engine/frame.h:47: oammo = pammo;
   025E 21r7Ar00      [10] 1154 	ld	hl,#_pammo + 0
   0261 56            [ 7] 1155 	ld	d, (hl)
   0262 21rCBr01      [10] 1156 	ld	hl,#_oammo + 0
   0265 72            [ 7] 1157 	ld	(hl), d
                           1158 ;./engine/frame.h:48: _x = AMMO_X; _y = AMMO_Y; _n = pammo; p_t ();
   0266 21r00r00      [10] 1159 	ld	hl,#__x + 0
   0269 36 0C         [10] 1160 	ld	(hl), #0x0C
   026B 21r01r00      [10] 1161 	ld	hl,#__y + 0
   026E 36 00         [10] 1162 	ld	(hl), #0x00
   0270 21r02r00      [10] 1163 	ld	hl,#__n + 0
   0273 72            [ 7] 1164 	ld	(hl), d
   0274 C3r00r00      [10] 1165 	jp  _p_t
                           1166 ;./my/pres.h:6: void bat_in (void) {
                           1167 ;	---------------------------------
                           1168 ; Function bat_in
                           1169 ; ---------------------------------
   0277                    1170 _bat_in::
                           1171 ;./my/pres.h:7: SG_displayOn ();
   0277 21 40 01      [10] 1172 	ld	hl,#0x0140
   027A E5            [11] 1173 	push	hl
   027B CDr00r00      [17] 1174 	call	_SG_VDPturnOnFeature
   027E F1            [10] 1175 	pop	af
                           1176 ;./my/pres.h:8: while (SG_getKeysStatus ());
   027F                    1177 00101$:
   027F CDr00r00      [17] 1178 	call	_SG_getKeysStatus
   0282 7D            [ 4] 1179 	ld	a,l
   0283 B7            [ 4] 1180 	or	a, a
   0284 20 F9         [12] 1181 	jr	NZ,00101$
   0286 C9            [10] 1182 	ret
                           1183 ;./my/pres.h:11: void bat_out (void) {
                           1184 ;	---------------------------------
                           1185 ; Function bat_out
                           1186 ; ---------------------------------
   0287                    1187 _bat_out::
                           1188 ;./my/pres.h:12: PSGStop ();
   0287 CDr00r00      [17] 1189 	call	_PSGStop
                           1190 ;./my/pres.h:13: SG_displayOff ();
   028A 21 40 01      [10] 1191 	ld	hl,#0x0140
   028D E5            [11] 1192 	push	hl
   028E CDr00r00      [17] 1193 	call	_SG_VDPturnOffFeature
   0291 F1            [10] 1194 	pop	af
                           1195 ;./my/pres.h:14: SG_initSprites ();
   0292 CDr00r00      [17] 1196 	call	_SG_initSprites
                           1197 ;./my/pres.h:15: SG_copySpritestoSAT ();	
   0295 C3r00r00      [10] 1198 	jp  _SG_copySpritestoSAT
                           1199 ;./my/pres.h:18: void pres (void (*func) (void), unsigned char *music) {
                           1200 ;	---------------------------------
                           1201 ; Function pres
                           1202 ; ---------------------------------
   0298                    1203 _pres::
                           1204 ;./my/pres.h:19: cls ();
   0298 CDr00r00      [17] 1205 	call	_cls
                           1206 ;./my/pres.h:20: (*func) ();
   029B C1            [10] 1207 	pop	bc
   029C E1            [10] 1208 	pop	hl
   029D E5            [11] 1209 	push	hl
   029E C5            [11] 1210 	push	bc
   029F CDr00r00      [17] 1211 	call	___sdcc_call_hl
                           1212 ;./my/pres.h:21: bat_in ();
   02A2 CDr77r02      [17] 1213 	call	_bat_in
                           1214 ;./my/pres.h:22: if (music) PSGPlay (music);
   02A5 FD 21 04 00   [14] 1215 	ld	iy,#4
   02A9 FD 39         [15] 1216 	add	iy,sp
   02AB FD 7E 01      [19] 1217 	ld	a,1 (iy)
   02AE FD B6 00      [19] 1218 	or	a,0 (iy)
   02B1 28 0B         [12] 1219 	jr	Z,00106$
   02B3 FD 6E 00      [19] 1220 	ld	l,0 (iy)
   02B6 FD 66 01      [19] 1221 	ld	h,1 (iy)
   02B9 E5            [11] 1222 	push	hl
   02BA CDr00r00      [17] 1223 	call	_PSGPlay
   02BD F1            [10] 1224 	pop	af
                           1225 ;./my/pres.h:23: while (1) {
   02BE                    1226 00106$:
                           1227 ;./my/pres.h:24: pad_read ();
   02BE CDr00r00      [17] 1228 	call	_pad_read
                           1229 ;./my/pres.h:25: if (pad_this_frame & (PAD_A|PAD_B|PAD_START)) break;
   02C1 3Ar05r00      [13] 1230 	ld	a,(#_pad_this_frame + 0)
   02C4 E6 30         [ 7] 1231 	and	a, #0x30
   02C6 28 F6         [12] 1232 	jr	Z,00106$
                           1233 ;./my/pres.h:27: bat_out ();
   02C8 C3r87r02      [10] 1234 	jp  _bat_out
                           1235 ;./my/pres.h:30: void title (void) {	
                           1236 ;	---------------------------------
                           1237 ; Function title
                           1238 ; ---------------------------------
   02CB                    1239 _title::
                           1240 ;./my/pres.h:31: gp_gen = title_rle; unrle ();
   02CB 21r00r00      [10] 1241 	ld	hl,#_title_rle+0
   02CE 22r0Ar00      [16] 1242 	ld	(_gp_gen),hl
   02D1 CDr00r00      [17] 1243 	call	_unrle
                           1244 ;./my/pres.h:33: _x = 5; _y = 23; pr_str ("@ 2018 THE MOJON TWINS");
   02D4 21r00r00      [10] 1245 	ld	hl,#__x + 0
   02D7 36 05         [10] 1246 	ld	(hl), #0x05
   02D9 21r01r00      [10] 1247 	ld	hl,#__y + 0
   02DC 36 17         [10] 1248 	ld	(hl), #0x17
   02DE 21r7Cr03      [10] 1249 	ld	hl,#___str_0
   02E1 E5            [11] 1250 	push	hl
   02E2 CDr00r00      [17] 1251 	call	_pr_str
   02E5 F1            [10] 1252 	pop	af
                           1253 ;./my/pres.h:35: bat_in ();
   02E6 CDr77r02      [17] 1254 	call	_bat_in
                           1255 ;./my/pres.h:37: PSGPlay (MUSIC_TITLE);
   02E9 21r00r00      [10] 1256 	ld	hl,#_m_n_title_psg
   02EC E5            [11] 1257 	push	hl
   02ED CDr00r00      [17] 1258 	call	_PSGPlay
   02F0 F1            [10] 1259 	pop	af
                           1260 ;./my/pres.h:38: while (1) {
   02F1                    1261 00115$:
                           1262 ;./my/pres.h:39: update_cycle ();
   02F1 CDr00r00      [17] 1263 	call	_update_cycle
                           1264 ;./my/pres.h:40: SG_addMetaSprite1x1 (80, 108 + (level << 4), ss_pl_00);
   02F4 21r00r00      [10] 1265 	ld	hl,#_ss_pl_00
   02F7 3ArBCr01      [13] 1266 	ld	a,(#_level + 0)
   02FA 07            [ 4] 1267 	rlca
   02FB 07            [ 4] 1268 	rlca
   02FC 07            [ 4] 1269 	rlca
   02FD 07            [ 4] 1270 	rlca
   02FE E6 F0         [ 7] 1271 	and	a,#0xF0
   0300 C6 6C         [ 7] 1272 	add	a, #0x6C
   0302 E5            [11] 1273 	push	hl
   0303 57            [ 4] 1274 	ld	d,a
   0304 1E 50         [ 7] 1275 	ld	e,#0x50
   0306 D5            [11] 1276 	push	de
   0307 CDr00r00      [17] 1277 	call	_SG_addMetaSprite1x1
   030A F1            [10] 1278 	pop	af
   030B F1            [10] 1279 	pop	af
                           1280 ;./my/pres.h:41: pad_read ();
   030C CDr00r00      [17] 1281 	call	_pad_read
                           1282 ;./my/pres.h:42: rda = level;
   030F 3ArBCr01      [13] 1283 	ld	a,(#_level + 0)
   0312 32r16r00      [13] 1284 	ld	(#_rda + 0),a
                           1285 ;./my/pres.h:43: if (pad_this_frame & PAD_DOWN) {
   0315 21r05r00      [10] 1286 	ld	hl,#_pad_this_frame+0
   0318 CB 4E         [12] 1287 	bit	1, (hl)
   031A 28 10         [12] 1288 	jr	Z,00104$
                           1289 ;./my/pres.h:44: ++ level; if (level == 3) level = 0;
   031C 21rBCr01      [10] 1290 	ld	hl, #_level+0
   031F 34            [11] 1291 	inc	(hl)
   0320 3ArBCr01      [13] 1292 	ld	a,(#_level + 0)
   0323 D6 03         [ 7] 1293 	sub	a, #0x03
   0325 20 05         [12] 1294 	jr	NZ,00104$
   0327 21rBCr01      [10] 1295 	ld	hl,#_level + 0
   032A 36 00         [10] 1296 	ld	(hl), #0x00
   032C                    1297 00104$:
                           1298 ;./my/pres.h:46: if (pad_this_frame & PAD_UP) {
   032C 21r05r00      [10] 1299 	ld	hl,#_pad_this_frame+0
   032F CB 46         [12] 1300 	bit	0, (hl)
   0331 28 11         [12] 1301 	jr	Z,00109$
                           1302 ;./my/pres.h:47: if (level) -- level; else level = 2;
   0333 3ArBCr01      [13] 1303 	ld	a,(#_level + 0)
   0336 B7            [ 4] 1304 	or	a, a
   0337 28 06         [12] 1305 	jr	Z,00106$
   0339 21rBCr01      [10] 1306 	ld	hl, #_level+0
   033C 35            [11] 1307 	dec	(hl)
   033D 18 05         [12] 1308 	jr	00109$
   033F                    1309 00106$:
   033F 21rBCr01      [10] 1310 	ld	hl,#_level + 0
   0342 36 02         [10] 1311 	ld	(hl), #0x02
   0344                    1312 00109$:
                           1313 ;./my/pres.h:49: if (level != rda) PSGSFXPlay (SFX_USE, 1);
   0344 3ArBCr01      [13] 1314 	ld	a,(#_level + 0)
   0347 FD 21r16r00   [14] 1315 	ld	iy,#_rda
   034B FD 96 00      [19] 1316 	sub	a, 0 (iy)
   034E 28 0D         [12] 1317 	jr	Z,00111$
   0350 11r00r00      [10] 1318 	ld	de,#_s_03_use2_psg
   0353 3E 01         [ 7] 1319 	ld	a,#0x01
   0355 F5            [11] 1320 	push	af
   0356 33            [ 6] 1321 	inc	sp
   0357 D5            [11] 1322 	push	de
   0358 CDr00r00      [17] 1323 	call	_PSGSFXPlay
   035B F1            [10] 1324 	pop	af
   035C 33            [ 6] 1325 	inc	sp
   035D                    1326 00111$:
                           1327 ;./my/pres.h:50: if (pad_this_frame & PAD_1) break;
   035D 21r05r00      [10] 1328 	ld	hl,#_pad_this_frame+0
   0360 CB 66         [12] 1329 	bit	4, (hl)
   0362 28 8D         [12] 1330 	jr	Z,00115$
                           1331 ;./my/pres.h:53: PSGSFXPlay (SFX_START, 1); delay (20);
   0364 11r00r00      [10] 1332 	ld	de,#_s_00_start2_psg+0
   0367 3E 01         [ 7] 1333 	ld	a,#0x01
   0369 F5            [11] 1334 	push	af
   036A 33            [ 6] 1335 	inc	sp
   036B D5            [11] 1336 	push	de
   036C CDr00r00      [17] 1337 	call	_PSGSFXPlay
   036F F1            [10] 1338 	pop	af
   0370 33            [ 6] 1339 	inc	sp
   0371 3E 14         [ 7] 1340 	ld	a,#0x14
   0373 F5            [11] 1341 	push	af
   0374 33            [ 6] 1342 	inc	sp
   0375 CDr00r00      [17] 1343 	call	_delay
   0378 33            [ 6] 1344 	inc	sp
                           1345 ;./my/pres.h:55: bat_out ();
   0379 C3r87r02      [10] 1346 	jp  _bat_out
   037C                    1347 ___str_0:
   037C 40 20 32 30 31 38  1348 	.ascii "@ 2018 THE MOJON TWINS"
        20 54 48 45 20 4D
        4F 4A 4F 4E 20 54
        57 49 4E 53
   0392 00                 1349 	.db 0x00
                           1350 ;./my/pres.h:58: void scr_game_over (void) {
                           1351 ;	---------------------------------
                           1352 ; Function scr_game_over
                           1353 ; ---------------------------------
   0393                    1354 _scr_game_over::
                           1355 ;./my/pres.h:59: gp_gen = cuts_rle; unrle ();
   0393 21r00r00      [10] 1356 	ld	hl,#_cuts_rle+0
   0396 22r0Ar00      [16] 1357 	ld	(_gp_gen),hl
   0399 CDr00r00      [17] 1358 	call	_unrle
                           1359 ;./my/pres.h:60: _x = 10; _y = 8; pr_str ("GAME OVER!");
   039C 21r00r00      [10] 1360 	ld	hl,#__x + 0
   039F 36 0A         [10] 1361 	ld	(hl), #0x0A
   03A1 21r01r00      [10] 1362 	ld	hl,#__y + 0
   03A4 36 08         [10] 1363 	ld	(hl), #0x08
   03A6 21rE5r03      [10] 1364 	ld	hl,#___str_1
   03A9 E5            [11] 1365 	push	hl
   03AA CDr00r00      [17] 1366 	call	_pr_str
   03AD F1            [10] 1367 	pop	af
                           1368 ;./my/pres.h:61: _x =  4; _y = 10; pr_str ("NICE TRY, BUT NO BANANA!");
   03AE 21r00r00      [10] 1369 	ld	hl,#__x + 0
   03B1 36 04         [10] 1370 	ld	(hl), #0x04
   03B3 21r01r00      [10] 1371 	ld	hl,#__y + 0
   03B6 36 0A         [10] 1372 	ld	(hl), #0x0A
   03B8 21rF0r03      [10] 1373 	ld	hl,#___str_2
   03BB E5            [11] 1374 	push	hl
   03BC CDr00r00      [17] 1375 	call	_pr_str
   03BF F1            [10] 1376 	pop	af
                           1377 ;./my/pres.h:62: _x =  5; _y = 12; pr_str ("DO IT BETTER NEXT TIME");
   03C0 21r00r00      [10] 1378 	ld	hl,#__x + 0
   03C3 36 05         [10] 1379 	ld	(hl), #0x05
   03C5 21r01r00      [10] 1380 	ld	hl,#__y + 0
   03C8 36 0C         [10] 1381 	ld	(hl), #0x0C
   03CA 21r09r04      [10] 1382 	ld	hl,#___str_3
   03CD E5            [11] 1383 	push	hl
   03CE CDr00r00      [17] 1384 	call	_pr_str
   03D1 F1            [10] 1385 	pop	af
                           1386 ;./my/pres.h:63: _x =  9; _y = 14; pr_str ("MISSION FAILED");
   03D2 21r00r00      [10] 1387 	ld	hl,#__x + 0
   03D5 36 09         [10] 1388 	ld	(hl), #0x09
   03D7 21r01r00      [10] 1389 	ld	hl,#__y + 0
   03DA 36 0E         [10] 1390 	ld	(hl), #0x0E
   03DC 21r20r04      [10] 1391 	ld	hl,#___str_4
   03DF E5            [11] 1392 	push	hl
   03E0 CDr00r00      [17] 1393 	call	_pr_str
   03E3 F1            [10] 1394 	pop	af
   03E4 C9            [10] 1395 	ret
   03E5                    1396 ___str_1:
   03E5 47 41 4D 45 20 4F  1397 	.ascii "GAME OVER!"
        56 45 52 21
   03EF 00                 1398 	.db 0x00
   03F0                    1399 ___str_2:
   03F0 4E 49 43 45 20 54  1400 	.ascii "NICE TRY, BUT NO BANANA!"
        52 59 2C 20 42 55
        54 20 4E 4F 20 42
        41 4E 41 4E 41 21
   0408 00                 1401 	.db 0x00
   0409                    1402 ___str_3:
   0409 44 4F 20 49 54 20  1403 	.ascii "DO IT BETTER NEXT TIME"
        42 45 54 54 45 52
        20 4E 45 58 54 20
        54 49 4D 45
   041F 00                 1404 	.db 0x00
   0420                    1405 ___str_4:
   0420 4D 49 53 53 49 4F  1406 	.ascii "MISSION FAILED"
        4E 20 46 41 49 4C
        45 44
   042E 00                 1407 	.db 0x00
                           1408 ;./my/pres.h:66: void scr_the_end (void) {
                           1409 ;	---------------------------------
                           1410 ; Function scr_the_end
                           1411 ; ---------------------------------
   042F                    1412 _scr_the_end::
                           1413 ;./my/pres.h:67: gp_gen = cuts_rle; unrle ();
   042F 21r00r00      [10] 1414 	ld	hl,#_cuts_rle+0
   0432 22r0Ar00      [16] 1415 	ld	(_gp_gen),hl
   0435 CDr00r00      [17] 1416 	call	_unrle
                           1417 ;./my/pres.h:68: _x = 9; _y = 8; pr_str ("CONGRATULATIONS!");
   0438 21r00r00      [10] 1418 	ld	hl,#__x + 0
   043B 36 09         [10] 1419 	ld	(hl), #0x09
   043D 21r01r00      [10] 1420 	ld	hl,#__y + 0
   0440 36 08         [10] 1421 	ld	(hl), #0x08
   0442 21r81r04      [10] 1422 	ld	hl,#___str_5
   0445 E5            [11] 1423 	push	hl
   0446 CDr00r00      [17] 1424 	call	_pr_str
   0449 F1            [10] 1425 	pop	af
                           1426 ;./my/pres.h:69: _x = 2; _y = 10; pr_str ("YOU MANAGED TO SET THE BOMBS");
   044A 21r00r00      [10] 1427 	ld	hl,#__x + 0
   044D 36 02         [10] 1428 	ld	(hl), #0x02
   044F 21r01r00      [10] 1429 	ld	hl,#__y + 0
   0452 36 0A         [10] 1430 	ld	(hl), #0x0A
   0454 21r92r04      [10] 1431 	ld	hl,#___str_6
   0457 E5            [11] 1432 	push	hl
   0458 CDr00r00      [17] 1433 	call	_pr_str
   045B F1            [10] 1434 	pop	af
                           1435 ;./my/pres.h:70: _x = 4; _y = 12; pr_str ("AND DESTROY THE COMPUTER");
   045C 21r00r00      [10] 1436 	ld	hl,#__x + 0
   045F 36 04         [10] 1437 	ld	(hl), #0x04
   0461 21r01r00      [10] 1438 	ld	hl,#__y + 0
   0464 36 0C         [10] 1439 	ld	(hl), #0x0C
   0466 21rAFr04      [10] 1440 	ld	hl,#___str_7
   0469 E5            [11] 1441 	push	hl
   046A CDr00r00      [17] 1442 	call	_pr_str
   046D F1            [10] 1443 	pop	af
                           1444 ;./my/pres.h:71: _x = 5; _y = 14; pr_str ("MISSION ACCOMPLISHED!!");	
   046E 21r00r00      [10] 1445 	ld	hl,#__x + 0
   0471 36 05         [10] 1446 	ld	(hl), #0x05
   0473 21r01r00      [10] 1447 	ld	hl,#__y + 0
   0476 36 0E         [10] 1448 	ld	(hl), #0x0E
   0478 21rC8r04      [10] 1449 	ld	hl,#___str_8
   047B E5            [11] 1450 	push	hl
   047C CDr00r00      [17] 1451 	call	_pr_str
   047F F1            [10] 1452 	pop	af
   0480 C9            [10] 1453 	ret
   0481                    1454 ___str_5:
   0481 43 4F 4E 47 52 41  1455 	.ascii "CONGRATULATIONS!"
        54 55 4C 41 54 49
        4F 4E 53 21
   0491 00                 1456 	.db 0x00
   0492                    1457 ___str_6:
   0492 59 4F 55 20 4D 41  1458 	.ascii "YOU MANAGED TO SET THE BOMBS"
        4E 41 47 45 44 20
        54 4F 20 53 45 54
        20 54 48 45 20 42
        4F 4D 42 53
   04AE 00                 1459 	.db 0x00
   04AF                    1460 ___str_7:
   04AF 41 4E 44 20 44 45  1461 	.ascii "AND DESTROY THE COMPUTER"
        53 54 52 4F 59 20
        54 48 45 20 43 4F
        4D 50 55 54 45 52
   04C7 00                 1462 	.db 0x00
   04C8                    1463 ___str_8:
   04C8 4D 49 53 53 49 4F  1464 	.ascii "MISSION ACCOMPLISHED!!"
        4E 20 41 43 43 4F
        4D 50 4C 49 53 48
        45 44 21 21
   04DE 00                 1465 	.db 0x00
                           1466 ;./my/pres.h:74: void credits (void) {
                           1467 ;	---------------------------------
                           1468 ; Function credits
                           1469 ; ---------------------------------
   04DF                    1470 _credits::
                           1471 ;./my/pres.h:75: cls ();
   04DF CDr00r00      [17] 1472 	call	_cls
                           1473 ;./my/pres.h:77: _x = 0; _y = 0; if (ntsc) pr_str ("NTSC"); else pr_str ("PAL");
   04E2 21r00r00      [10] 1474 	ld	hl,#__x + 0
   04E5 36 00         [10] 1475 	ld	(hl), #0x00
   04E7 21r01r00      [10] 1476 	ld	hl,#__y + 0
   04EA 36 00         [10] 1477 	ld	(hl), #0x00
   04EC 3Ar96r00      [13] 1478 	ld	a,(#_ntsc + 0)
   04EF B7            [ 4] 1479 	or	a, a
   04F0 28 0A         [12] 1480 	jr	Z,00102$
   04F2 21r56r05      [10] 1481 	ld	hl,#___str_9
   04F5 E5            [11] 1482 	push	hl
   04F6 CDr00r00      [17] 1483 	call	_pr_str
   04F9 F1            [10] 1484 	pop	af
   04FA 18 08         [12] 1485 	jr	00103$
   04FC                    1486 00102$:
   04FC 21r5Br05      [10] 1487 	ld	hl,#___str_10
   04FF E5            [11] 1488 	push	hl
   0500 CDr00r00      [17] 1489 	call	_pr_str
   0503 F1            [10] 1490 	pop	af
   0504                    1491 00103$:
                           1492 ;./my/pres.h:79: rds16 = 0; rdy = 240;
   0504 21 00 00      [10] 1493 	ld	hl,#0x0000
   0507 22r08r00      [16] 1494 	ld	(_rds16),hl
   050A 21r13r00      [10] 1495 	ld	hl,#_rdy + 0
   050D 36 F0         [10] 1496 	ld	(hl), #0xF0
                           1497 ;./my/pres.h:80: _x = 0; _y = 18; 
   050F 21r00r00      [10] 1498 	ld	hl,#__x + 0
   0512 36 00         [10] 1499 	ld	(hl), #0x00
   0514 21r01r00      [10] 1500 	ld	hl,#__y + 0
   0517 36 12         [10] 1501 	ld	(hl), #0x12
                           1502 ;./my/pres.h:81: pr_str ("   SGT. HELMET - TRAINING DAY%%         ORIGINAL GAME:%     @ 2013 THE MOJON TWINS%       REPROGRAMMED GAME:%     @ 2018 THE MOJON TWINS");
   0519 21r5Fr05      [10] 1503 	ld	hl,#___str_11+0
   051C E5            [11] 1504 	push	hl
   051D CDr00r00      [17] 1505 	call	_pr_str
                           1506 ;./my/pres.h:83: SG_displayOn ();
   0520 21 40 01      [10] 1507 	ld	hl, #0x0140
   0523 E3            [19] 1508 	ex	(sp),hl
   0524 CDr00r00      [17] 1509 	call	_SG_VDPturnOnFeature
   0527 F1            [10] 1510 	pop	af
                           1511 ;./my/pres.h:85: while (!(SG_getKeysStatus () & PAD_START) && rds16 < 300) {
   0528                    1512 00105$:
   0528 CDr00r00      [17] 1513 	call	_SG_getKeysStatus
   052B CB 65         [ 8] 1514 	bit	4, l
   052D 20 1E         [12] 1515 	jr	NZ,00107$
   052F 3Ar08r00      [13] 1516 	ld	a,(#_rds16 + 0)
   0532 D6 2C         [ 7] 1517 	sub	a, #0x2C
   0534 3Ar09r00      [13] 1518 	ld	a,(#_rds16 + 1)
   0537 17            [ 4] 1519 	rla
   0538 3F            [ 4] 1520 	ccf
   0539 1F            [ 4] 1521 	rra
   053A DE 81         [ 7] 1522 	sbc	a, #0x81
   053C 30 0F         [12] 1523 	jr	NC,00107$
                           1524 ;./my/pres.h:88: update_cycle ();
   053E CDr00r00      [17] 1525 	call	_update_cycle
                           1526 ;./my/pres.h:89: rds16 ++;
   0541 21r08r00      [10] 1527 	ld	hl, #_rds16+0
   0544 34            [11] 1528 	inc	(hl)
   0545 20 E1         [12] 1529 	jr	NZ,00105$
   0547 21r09r00      [10] 1530 	ld	hl, #_rds16+1
   054A 34            [11] 1531 	inc	(hl)
   054B 18 DB         [12] 1532 	jr	00105$
   054D                    1533 00107$:
                           1534 ;./my/pres.h:92: SG_displayOff ();
   054D 21 40 01      [10] 1535 	ld	hl,#0x0140
   0550 E5            [11] 1536 	push	hl
   0551 CDr00r00      [17] 1537 	call	_SG_VDPturnOffFeature
   0554 F1            [10] 1538 	pop	af
   0555 C9            [10] 1539 	ret
   0556                    1540 ___str_9:
   0556 4E 54 53 43        1541 	.ascii "NTSC"
   055A 00                 1542 	.db 0x00
   055B                    1543 ___str_10:
   055B 50 41 4C           1544 	.ascii "PAL"
   055E 00                 1545 	.db 0x00
   055F                    1546 ___str_11:
   055F 20 20 20 53 47 54  1547 	.ascii "   SGT. HELMET - TRAINING DAY%%         ORIGINAL GAME:%     "
        2E 20 48 45 4C 4D
        45 54 20 2D 20 54
        52 41 49 4E 49 4E
        47 20 44 41 59 25
        25 20 20 20 20 20
        20 20 20 20 4F 52
        49 47 49 4E 41 4C
        20 47 41 4D 45 3A
        25 20 20 20 20 20
   059B 40 20 32 30 31 33  1548 	.ascii "@ 2013 THE MOJON TWINS%       REPROGRAMMED GAME:%     @ 2018"
        20 54 48 45 20 4D
        4F 4A 4F 4E 20 54
        57 49 4E 53 25 20
        20 20 20 20 20 20
        52 45 50 52 4F 47
        52 41 4D 4D 45 44
        20 47 41 4D 45 3A
        25 20 20 20 20 20
        40 20 32 30 31 38
   05D7 20 54 48 45 20 4D  1549 	.ascii " THE MOJON TWINS"
        4F 4A 4F 4E 20 54
        57 49 4E 53
   05E7 00                 1550 	.db 0x00
                           1551 ;./mainloop/flickscreen.h:7: void flickscreen_do_horizontal (void) {
                           1552 ;	---------------------------------
                           1553 ; Function flickscreen_do_horizontal
                           1554 ; ---------------------------------
   05E8                    1555 _flickscreen_do_horizontal::
                           1556 ;./mainloop/flickscreen.h:8: if (prx == 4 && 
   05E8 3Ar56r00      [13] 1557 	ld	a,(#_prx + 0)
   05EB D6 04         [ 7] 1558 	sub	a, #0x04
   05ED 20 12         [12] 1559 	jr	NZ,00105$
                           1560 ;./mainloop/flickscreen.h:14: ) {
   05EF 3Ar53r00      [13] 1561 	ld	a,(#_pvx + 1)
   05F2 CB 7F         [ 8] 1562 	bit	7,a
   05F4 28 0B         [12] 1563 	jr	Z,00105$
                           1564 ;./mainloop/flickscreen.h:15: -- n_pant;
   05F6 21rBEr01      [10] 1565 	ld	hl, #_n_pant+0
   05F9 35            [11] 1566 	dec	(hl)
                           1567 ;./mainloop/flickscreen.h:16: px = 244 << FIXBITS;
   05FA 21 00 3D      [10] 1568 	ld	hl,#0x3D00
   05FD 22r4Er00      [16] 1569 	ld	(_px),hl
   0600 C9            [10] 1570 	ret
   0601                    1571 00105$:
                           1572 ;./mainloop/flickscreen.h:17: } else if (prx == 244 && 
   0601 3Ar56r00      [13] 1573 	ld	a,(#_prx + 0)
   0604 D6 F4         [ 7] 1574 	sub	a, #0xF4
   0606 C0            [11] 1575 	ret	NZ
                           1576 ;./mainloop/flickscreen.h:23: ) {
   0607 AF            [ 4] 1577 	xor	a, a
   0608 FD 21r52r00   [14] 1578 	ld	iy,#_pvx
   060C FD BE 00      [19] 1579 	cp	a, 0 (iy)
   060F FD 21r52r00   [14] 1580 	ld	iy,#_pvx
   0613 FD 9E 01      [19] 1581 	sbc	a, 1 (iy)
   0616 E2r1Br06      [10] 1582 	jp	PO, 00130$
   0619 EE 80         [ 7] 1583 	xor	a, #0x80
   061B                    1584 00130$:
   061B F0            [11] 1585 	ret	P
                           1586 ;./mainloop/flickscreen.h:24: ++ n_pant;
   061C 21rBEr01      [10] 1587 	ld	hl, #_n_pant+0
   061F 34            [11] 1588 	inc	(hl)
                           1589 ;./mainloop/flickscreen.h:25: px = 4 << FIXBITS;
   0620 21 00 01      [10] 1590 	ld	hl,#0x0100
   0623 22r4Er00      [16] 1591 	ld	(_px),hl
   0626 C9            [10] 1592 	ret
                           1593 ;./mainloop/flickscreen.h:29: void flickscreen_do_vertical (void) {
                           1594 ;	---------------------------------
                           1595 ; Function flickscreen_do_vertical
                           1596 ; ---------------------------------
   0627                    1597 _flickscreen_do_vertical::
                           1598 ;./mainloop/flickscreen.h:32: if (pry <= 16 && pvy < 0) {
   0627 3E 10         [ 7] 1599 	ld	a,#0x10
   0629 FD 21r57r00   [14] 1600 	ld	iy,#_pry
   062D FD 96 00      [19] 1601 	sub	a, 0 (iy)
   0630 38 1D         [12] 1602 	jr	C,00105$
   0632 3Ar55r00      [13] 1603 	ld	a,(#_pvy + 1)
   0635 CB 7F         [ 8] 1604 	bit	7,a
   0637 28 16         [12] 1605 	jr	Z,00105$
                           1606 ;./mainloop/flickscreen.h:33: n_pant -= c_map_w;
   0639 21r84r00      [10] 1607 	ld	hl,#_c_map_w
   063C D5            [11] 1608 	push	de
   063D FD 21rBEr01   [14] 1609 	ld	iy,#_n_pant
   0641 FD E5         [15] 1610 	push	iy
   0643 D1            [10] 1611 	pop	de
   0644 1A            [ 7] 1612 	ld	a,(de)
   0645 96            [ 7] 1613 	sub	a, (hl)
   0646 12            [ 7] 1614 	ld	(de),a
   0647 D1            [10] 1615 	pop	de
                           1616 ;./mainloop/flickscreen.h:34: py = 192 << FIXBITS;
   0648 21 00 30      [10] 1617 	ld	hl,#0x3000
   064B 22r50r00      [16] 1618 	ld	(_py),hl
   064E C9            [10] 1619 	ret
   064F                    1620 00105$:
                           1621 ;./mainloop/flickscreen.h:35: } else if (pry >= 192 && pvy > 0) {
   064F 3Ar57r00      [13] 1622 	ld	a,(#_pry + 0)
   0652 D6 C0         [ 7] 1623 	sub	a, #0xC0
   0654 D8            [11] 1624 	ret	C
   0655 AF            [ 4] 1625 	xor	a, a
   0656 FD 21r54r00   [14] 1626 	ld	iy,#_pvy
   065A FD BE 00      [19] 1627 	cp	a, 0 (iy)
   065D FD 21r54r00   [14] 1628 	ld	iy,#_pvy
   0661 FD 9E 01      [19] 1629 	sbc	a, 1 (iy)
   0664 E2r69r06      [10] 1630 	jp	PO, 00126$
   0667 EE 80         [ 7] 1631 	xor	a, #0x80
   0669                    1632 00126$:
   0669 F0            [11] 1633 	ret	P
                           1634 ;./mainloop/flickscreen.h:36: n_pant += c_map_w;
   066A 21r84r00      [10] 1635 	ld	hl,#_c_map_w
   066D D5            [11] 1636 	push	de
   066E FD 21rBEr01   [14] 1637 	ld	iy,#_n_pant
   0672 FD E5         [15] 1638 	push	iy
   0674 D1            [10] 1639 	pop	de
   0675 1A            [ 7] 1640 	ld	a,(de)
   0676 86            [ 7] 1641 	add	a, (hl)
   0677 12            [ 7] 1642 	ld	(de),a
   0678 D1            [10] 1643 	pop	de
                           1644 ;./mainloop/flickscreen.h:37: py = 16 << FIXBITS;
   0679 21 00 04      [10] 1645 	ld	hl,#0x0400
   067C 22r50r00      [16] 1646 	ld	(_py),hl
   067F C9            [10] 1647 	ret
                           1648 ;./mainloop.h:6: void player_frame_selector (void) {
                           1649 ;	---------------------------------
                           1650 ; Function player_frame_selector
                           1651 ; ---------------------------------
   0680                    1652 _player_frame_selector::
                           1653 ;./my/player_frame_selector.h:15: if (pvx != 0 || pvy != 0) {
   0680 3Ar53r00      [13] 1654 	ld	a,(#_pvx + 1)
   0683 21r52r00      [10] 1655 	ld	hl,#_pvx + 0
   0686 B6            [ 7] 1656 	or	a,(hl)
   0687 20 08         [12] 1657 	jr	NZ,00103$
   0689 3Ar55r00      [13] 1658 	ld	a,(#_pvy + 1)
   068C 21r54r00      [10] 1659 	ld	hl,#_pvy + 0
   068F B6            [ 7] 1660 	or	a,(hl)
   0690 C8            [11] 1661 	ret	Z
   0691                    1662 00103$:
                           1663 ;./my/player_frame_selector.h:16: ++ pctfr;
   0691 21rE7r01      [10] 1664 	ld	hl, #_pctfr+0
   0694 34            [11] 1665 	inc	(hl)
                           1666 ;./my/player_frame_selector.h:17: if (pctfr == 4) {
   0695 3ArE7r01      [13] 1667 	ld	a,(#_pctfr + 0)
   0698 D6 04         [ 7] 1668 	sub	a, #0x04
   069A C0            [11] 1669 	ret	NZ
                           1670 ;./my/player_frame_selector.h:18: pctfr = 0;
   069B 21rE7r01      [10] 1671 	ld	hl,#_pctfr + 0
   069E 36 00         [10] 1672 	ld	(hl), #0x00
                           1673 ;./my/player_frame_selector.h:19: pfr = !pfr;
   06A0 3Ar5Br00      [13] 1674 	ld	a,(#_pfr + 0)
   06A3 D6 01         [ 7] 1675 	sub	a,#0x01
   06A5 3E 00         [ 7] 1676 	ld	a,#0x00
   06A7 17            [ 4] 1677 	rla
   06A8 32r5Br00      [13] 1678 	ld	(#_pfr + 0),a
                           1679 ;./my/player_frame_selector.h:20: psprid = pfacing + pfr;
   06AB 21r5Br00      [10] 1680 	ld	hl,#_pfr
   06AE D5            [11] 1681 	push	de
   06AF FD 21r5Cr00   [14] 1682 	ld	iy,#_psprid
   06B3 FD E5         [15] 1683 	push	iy
   06B5 D1            [10] 1684 	pop	de
   06B6 3Ar5Ar00      [13] 1685 	ld	a,(#_pfacing + 0)
   06B9 86            [ 7] 1686 	add	a, (hl)
   06BA 12            [ 7] 1687 	ld	(de),a
   06BB D1            [10] 1688 	pop	de
   06BC C9            [10] 1689 	ret
                           1690 ;./mainloop.h:10: void game_init (void) {
                           1691 ;	---------------------------------
                           1692 ; Function game_init
                           1693 ; ---------------------------------
   06BD                    1694 _game_init::
                           1695 ;./mainloop.h:12: win_level = game_over = 0;
   06BD 21rC4r01      [10] 1696 	ld	hl,#_game_over + 0
   06C0 36 00         [10] 1697 	ld	(hl), #0x00
   06C2 21rC3r01      [10] 1698 	ld	hl,#_win_level + 0
   06C5 36 00         [10] 1699 	ld	(hl), #0x00
                           1700 ;./mainloop/asset_setup.h:9: c_ts_tmaps = 	l_ts_tmaps [level];
   06C7 FD 21rBCr01   [14] 1701 	ld	iy,#_level
   06CB FD 6E 00      [19] 1702 	ld	l,0 (iy)
   06CE 26 00         [ 7] 1703 	ld	h,#0x00
   06D0 29            [11] 1704 	add	hl, hl
   06D1 EB            [ 4] 1705 	ex	de,hl
   06D2 21r13r01      [10] 1706 	ld	hl,#_l_ts_tmaps
   06D5 19            [11] 1707 	add	hl,de
   06D6 7E            [ 7] 1708 	ld	a,(hl)
   06D7 FD 21r87r00   [14] 1709 	ld	iy,#_c_ts_tmaps
   06DB FD 77 00      [19] 1710 	ld	0 (iy),a
   06DE 23            [ 6] 1711 	inc	hl
   06DF 7E            [ 7] 1712 	ld	a,(hl)
   06E0 32r88r00      [13] 1713 	ld	(#_c_ts_tmaps + 1),a
                           1714 ;./mainloop/asset_setup.h:10: c_behs = 		l_behs [level];
   06E3 21r19r01      [10] 1715 	ld	hl,#_l_behs
   06E6 19            [11] 1716 	add	hl,de
   06E7 7E            [ 7] 1717 	ld	a,(hl)
   06E8 FD 21r89r00   [14] 1718 	ld	iy,#_c_behs
   06EC FD 77 00      [19] 1719 	ld	0 (iy),a
   06EF 23            [ 6] 1720 	inc	hl
   06F0 7E            [ 7] 1721 	ld	a,(hl)
   06F1 32r8Ar00      [13] 1722 	ld	(#_c_behs + 1),a
                           1723 ;./mainloop/asset_setup.h:11: spr_enems = 	l_spr_enems [level];
   06F4 21r1Fr01      [10] 1724 	ld	hl,#_l_spr_enems
   06F7 19            [11] 1725 	add	hl,de
   06F8 7E            [ 7] 1726 	ld	a,(hl)
   06F9 FD 21r8Br00   [14] 1727 	ld	iy,#_spr_enems
   06FD FD 77 00      [19] 1728 	ld	0 (iy),a
   0700 23            [ 6] 1729 	inc	hl
   0701 7E            [ 7] 1730 	ld	a,(hl)
   0702 32r8Cr00      [13] 1731 	ld	(#_spr_enems + 1),a
                           1732 ;./mainloop/asset_setup.h:13: c_map = 		l_map [level];
   0705 21r25r01      [10] 1733 	ld	hl,#_l_map
   0708 19            [11] 1734 	add	hl,de
   0709 7E            [ 7] 1735 	ld	a,(hl)
   070A FD 21r8Dr00   [14] 1736 	ld	iy,#_c_map
   070E FD 77 00      [19] 1737 	ld	0 (iy),a
   0711 23            [ 6] 1738 	inc	hl
   0712 7E            [ 7] 1739 	ld	a,(hl)
   0713 32r8Er00      [13] 1740 	ld	(#_c_map + 1),a
                           1741 ;./mainloop/asset_setup.h:23: c_locks = 	l_locks [level];
   0716 21r2Br01      [10] 1742 	ld	hl,#_l_locks
   0719 19            [11] 1743 	add	hl,de
   071A 7E            [ 7] 1744 	ld	a,(hl)
   071B FD 21r8Fr00   [14] 1745 	ld	iy,#_c_locks
   071F FD 77 00      [19] 1746 	ld	0 (iy),a
   0722 23            [ 6] 1747 	inc	hl
   0723 7E            [ 7] 1748 	ld	a,(hl)
   0724 FD 21r8Fr00   [14] 1749 	ld	iy,#_c_locks
   0728 FD 77 01      [19] 1750 	ld	1 (iy),a
                           1751 ;./mainloop/asset_setup.h:25: l_n_bolts [level];
   072B 3ArBCr01      [13] 1752 	ld	a,(#_level + 0)
   072E C6r31         [ 7] 1753 	add	a, #<(_l_n_bolts)
   0730 4F            [ 4] 1754 	ld	c,a
   0731 3E 00         [ 7] 1755 	ld	a,#0x00
   0733 CEs01         [ 7] 1756 	adc	a, #>(_l_n_bolts)
   0735 47            [ 4] 1757 	ld	b,a
   0736 0A            [ 7] 1758 	ld	a,(bc)
   0737 32r95r00      [13] 1759 	ld	(#_c_max_bolts + 0),a
                           1760 ;./mainloop/asset_setup.h:28: c_enems = 		l_enems [level];
   073A 21r34r01      [10] 1761 	ld	hl,#_l_enems
   073D 19            [11] 1762 	add	hl,de
   073E 7E            [ 7] 1763 	ld	a,(hl)
   073F FD 21r91r00   [14] 1764 	ld	iy,#_c_enems
   0743 FD 77 00      [19] 1765 	ld	0 (iy),a
   0746 23            [ 6] 1766 	inc	hl
   0747 7E            [ 7] 1767 	ld	a,(hl)
   0748 32r92r00      [13] 1768 	ld	(#_c_enems + 1),a
                           1769 ;./mainloop/asset_setup.h:29: c_hotspots = 	l_hotspots [level];	
   074B 21r3Ar01      [10] 1770 	ld	hl,#_l_hotspots
   074E 19            [11] 1771 	add	hl,de
   074F 7E            [ 7] 1772 	ld	a,(hl)
   0750 FD 21r93r00   [14] 1773 	ld	iy,#_c_hotspots
   0754 FD 77 00      [19] 1774 	ld	0 (iy),a
   0757 23            [ 6] 1775 	inc	hl
   0758 7E            [ 7] 1776 	ld	a,(hl)
   0759 32r94r00      [13] 1777 	ld	(#_c_hotspots + 1),a
                           1778 ;./mainloop/asset_setup.h:31: c_max_enems = 	l_player_max_enems [level];
   075C 11r10r01      [10] 1779 	ld	de,#_l_player_max_enems+0
   075F 2ArBCr01      [16] 1780 	ld	hl,(_level)
   0762 26 00         [ 7] 1781 	ld	h,#0x00
   0764 19            [11] 1782 	add	hl,de
   0765 7E            [ 7] 1783 	ld	a,(hl)
   0766 32rBDr01      [13] 1784 	ld	(#_c_max_enems + 0),a
                           1785 ;./mainloop/asset_setup.h:33: c_map_w = 		l_map_w [level];
   0769 11r07r01      [10] 1786 	ld	de,#_l_map_w+0
   076C 2ArBCr01      [16] 1787 	ld	hl,(_level)
   076F 26 00         [ 7] 1788 	ld	h,#0x00
   0771 19            [11] 1789 	add	hl,de
   0772 7E            [ 7] 1790 	ld	a,(hl)
   0773 32r84r00      [13] 1791 	ld	(#_c_map_w + 0),a
                           1792 ;./mainloop/asset_setup.h:34: c_map_h = 		l_map_h [level];
   0776 11r0Ar01      [10] 1793 	ld	de,#_l_map_h+0
   0779 2ArBCr01      [16] 1794 	ld	hl,(_level)
   077C 26 00         [ 7] 1795 	ld	h,#0x00
   077E 19            [11] 1796 	add	hl,de
   077F 7E            [ 7] 1797 	ld	a,(hl)
                           1798 ;./mainloop/asset_setup.h:84: rda = c_map_h; c_map_size = 0; while (rda --) c_map_size += c_map_w;
   0780 32r85r00      [13] 1799 	ld	(#_c_map_h + 0),a
   0783 32r16r00      [13] 1800 	ld	(#_rda + 0),a
   0786 21r86r00      [10] 1801 	ld	hl,#_c_map_size + 0
   0789 36 00         [10] 1802 	ld	(hl), #0x00
   078B                    1803 00101$:
   078B 21r16r00      [10] 1804 	ld	hl,#_rda + 0
   078E 56            [ 7] 1805 	ld	d, (hl)
   078F 21r16r00      [10] 1806 	ld	hl, #_rda+0
   0792 35            [11] 1807 	dec	(hl)
   0793 7A            [ 4] 1808 	ld	a,d
   0794 B7            [ 4] 1809 	or	a, a
   0795 28 11         [12] 1810 	jr	Z,00103$
   0797 21r84r00      [10] 1811 	ld	hl,#_c_map_w
   079A D5            [11] 1812 	push	de
   079B FD 21r86r00   [14] 1813 	ld	iy,#_c_map_size
   079F FD E5         [15] 1814 	push	iy
   07A1 D1            [10] 1815 	pop	de
   07A2 1A            [ 7] 1816 	ld	a,(de)
   07A3 86            [ 7] 1817 	add	a, (hl)
   07A4 12            [ 7] 1818 	ld	(de),a
   07A5 D1            [10] 1819 	pop	de
   07A6 18 E3         [12] 1820 	jr	00101$
   07A8                    1821 00103$:
                           1822 ;./mainloop.h:20: cls ();
   07A8 CDr00r00      [17] 1823 	call	_cls
                           1824 ;./mainloop.h:22: draw_game_frame ();
   07AB CDrDBr01      [17] 1825 	call	_draw_game_frame
                           1826 ;./mainloop.h:25: hotspots_load ();
   07AE CDr00r00      [17] 1827 	call	_hotspots_load
                           1828 ;./mainloop.h:28: memfill (lkact, 1, c_max_bolts);
   07B1 21r95r00      [10] 1829 	ld	hl,#_c_max_bolts + 0
   07B4 4E            [ 7] 1830 	ld	c, (hl)
   07B5 06 00         [ 7] 1831 	ld	b,#0x00
   07B7 11r36r02      [10] 1832 	ld	de,#_lkact
   07BA C5            [11] 1833 	push	bc
   07BB 3E 01         [ 7] 1834 	ld	a,#0x01
   07BD F5            [11] 1835 	push	af
   07BE 33            [ 6] 1836 	inc	sp
   07BF D5            [11] 1837 	push	de
   07C0 CDr00r00      [17] 1838 	call	_memfill
   07C3 F1            [10] 1839 	pop	af
   07C4 F1            [10] 1840 	pop	af
   07C5 33            [ 6] 1841 	inc	sp
                           1842 ;./mainloop.h:31: if (!warp_to_level)	{
   07C6 3ArC5r01      [13] 1843 	ld	a,(#_warp_to_level + 0)
   07C9 B7            [ 4] 1844 	or	a, a
   07CA 20 43         [12] 1845 	jr	NZ,00105$
                           1846 ;./mainloop.h:32: n_pant = SCR_INI;
   07CC 11rFEr00      [10] 1847 	ld	de,#_l_scr_ini+0
   07CF 2ArBCr01      [16] 1848 	ld	hl,(_level)
   07D2 26 00         [ 7] 1849 	ld	h,#0x00
   07D4 19            [11] 1850 	add	hl,de
   07D5 7E            [ 7] 1851 	ld	a,(hl)
   07D6 32rBEr01      [13] 1852 	ld	(#_n_pant + 0),a
                           1853 ;./mainloop.h:33: px = (4 + (PLAYER_INI_X << 4)) << FIXBITS;
   07D9 11r01r01      [10] 1854 	ld	de,#_l_ini_x+0
   07DC 2ArBCr01      [16] 1855 	ld	hl,(_level)
   07DF 26 00         [ 7] 1856 	ld	h,#0x00
   07E1 19            [11] 1857 	add	hl,de
   07E2 6E            [ 7] 1858 	ld	l,(hl)
   07E3 26 00         [ 7] 1859 	ld	h,#0x00
   07E5 29            [11] 1860 	add	hl, hl
   07E6 29            [11] 1861 	add	hl, hl
   07E7 29            [11] 1862 	add	hl, hl
   07E8 29            [11] 1863 	add	hl, hl
   07E9 01 04 00      [10] 1864 	ld	bc,#0x0004
   07EC 09            [11] 1865 	add	hl,bc
   07ED 29            [11] 1866 	add	hl, hl
   07EE 29            [11] 1867 	add	hl, hl
   07EF 29            [11] 1868 	add	hl, hl
   07F0 29            [11] 1869 	add	hl, hl
   07F1 29            [11] 1870 	add	hl, hl
   07F2 29            [11] 1871 	add	hl, hl
   07F3 22r4Er00      [16] 1872 	ld	(_px),hl
                           1873 ;./mainloop.h:34: py = (PLAYER_INI_Y << 4) << FIXBITS;
   07F6 11r04r01      [10] 1874 	ld	de,#_l_ini_y+0
   07F9 2ArBCr01      [16] 1875 	ld	hl,(_level)
   07FC 26 00         [ 7] 1876 	ld	h,#0x00
   07FE 19            [11] 1877 	add	hl,de
   07FF 6E            [ 7] 1878 	ld	l,(hl)
   0800 26 00         [ 7] 1879 	ld	h,#0x00
   0802 29            [11] 1880 	add	hl, hl
   0803 29            [11] 1881 	add	hl, hl
   0804 29            [11] 1882 	add	hl, hl
   0805 29            [11] 1883 	add	hl, hl
   0806 29            [11] 1884 	add	hl, hl
   0807 29            [11] 1885 	add	hl, hl
   0808 29            [11] 1886 	add	hl, hl
   0809 29            [11] 1887 	add	hl, hl
   080A 29            [11] 1888 	add	hl, hl
   080B 29            [11] 1889 	add	hl, hl
   080C 22r50r00      [16] 1890 	ld	(_py),hl
   080F                    1891 00105$:
                           1892 ;./mainloop.h:36: player_to_pixels ();
   080F CDr00r00      [17] 1893 	call	_player_to_pixels
                           1894 ;./mainloop.h:37: player_init ();
   0812 CDr00r00      [17] 1895 	call	_player_init
                           1896 ;./mainloop.h:40: enems_persistent_load ();
   0815 CDr00r00      [17] 1897 	call	_enems_persistent_load
                           1898 ;./mainloop.h:48: pobjs = 0;
   0818 21r79r00      [10] 1899 	ld	hl,#_pobjs + 0
   081B 36 00         [10] 1900 	ld	(hl), #0x00
                           1901 ;./mainloop.h:56: pkeys = 0;
   081D 21r78r00      [10] 1902 	ld	hl,#_pkeys + 0
   0820 36 00         [10] 1903 	ld	(hl), #0x00
                           1904 ;./mainloop.h:119: half_life = 0;
   0822 21rC0r01      [10] 1905 	ld	hl,#_half_life + 0
   0825 36 00         [10] 1906 	ld	(hl), #0x00
                           1907 ;./mainloop.h:120: frame_counter = 0;
   0827 21rC1r01      [10] 1908 	ld	hl,#_frame_counter + 0
   082A 36 00         [10] 1909 	ld	(hl), #0x00
                           1910 ;./mainloop.h:121: olife = oammo = oobjs = okeys = 0xff;
   082C 21rC9r01      [10] 1911 	ld	hl,#_okeys + 0
   082F 36 FF         [10] 1912 	ld	(hl), #0xFF
   0831 21rCAr01      [10] 1913 	ld	hl,#_oobjs + 0
   0834 36 FF         [10] 1914 	ld	(hl), #0xFF
   0836 21rCBr01      [10] 1915 	ld	hl,#_oammo + 0
   0839 36 FF         [10] 1916 	ld	(hl), #0xFF
   083B 21rC8r01      [10] 1917 	ld	hl,#_olife + 0
   083E 36 FF         [10] 1918 	ld	(hl), #0xFF
                           1919 ;./mainloop.h:122: okilled = 0xff;
   0840 21rCCr01      [10] 1920 	ld	hl,#_okilled + 0
   0843 36 FF         [10] 1921 	ld	(hl), #0xFF
                           1922 ;./my/extra_inits.h:7: bombs_set = 0;
   0845 21r90r02      [10] 1923 	ld	hl,#_bombs_set + 0
   0848 36 00         [10] 1924 	ld	(hl), #0x00
   084A C9            [10] 1925 	ret
                           1926 ;./mainloop.h:137: void prepare_scr (void) {
                           1927 ;	---------------------------------
                           1928 ; Function prepare_scr
                           1929 ; ---------------------------------
   084B                    1930 _prepare_scr::
                           1931 ;./mainloop.h:138: if (!ft) {
   084B 3Ar83r00      [13] 1932 	ld	a,(#_ft + 0)
   084E B7            [ 4] 1933 	or	a, a
   084F 20 08         [12] 1934 	jr	NZ,00102$
                           1935 ;./mainloop.h:139: HW_displayOff ();
   0851 21 40 01      [10] 1936 	ld	hl,#0x0140
   0854 E5            [11] 1937 	push	hl
   0855 CDr00r00      [17] 1938 	call	_SG_VDPturnOffFeature
   0858 F1            [10] 1939 	pop	af
   0859                    1940 00102$:
                           1941 ;./mainloop.h:159: ft = 0;
   0859 FD 21r83r00   [14] 1942 	ld	iy,#_ft
   085D FD 36 00 00   [19] 1943 	ld	0 (iy),#0x00
                           1944 ;./mainloop.h:161: update_list [update_index] = 0xff;
   0861 3Ar98r00      [13] 1945 	ld	a,(#_update_index + 0)
   0864 C6r99         [ 7] 1946 	add	a, #<(_update_list)
   0866 6F            [ 4] 1947 	ld	l, a
   0867 3E 00         [ 7] 1948 	ld	a, #0x00
   0869 CEs00         [ 7] 1949 	adc	a, #>(_update_list)
   086B 67            [ 4] 1950 	ld	h, a
   086C 36 FF         [10] 1951 	ld	(hl),#0xFF
                           1952 ;./mainloop.h:162: HW_doUpdateList ();
   086E CDr00r00      [17] 1953 	call	_SG_doUpdateList
                           1954 ;./mainloop.h:163: clear_update_list ();
   0871 CDr00r00      [17] 1955 	call	_clear_update_list
                           1956 ;./mainloop.h:172: enems_persistent_update ();
   0874 CDr00r00      [17] 1957 	call	_enems_persistent_update
                           1958 ;./mainloop.h:175: enems_load ();
   0877 CDr00r00      [17] 1959 	call	_enems_load
                           1960 ;./mainloop.h:176: hotspots_create ();	
   087A CDr7Br01      [17] 1961 	call	_hotspots_create
                           1962 ;./mainloop.h:179: cocos_init ();
   087D CDr00r00      [17] 1963 	call	_cocos_init
                           1964 ;./mainloop.h:214: draw_scr ();
   0880 CDr00r00      [17] 1965 	call	_draw_scr
                           1966 ;./mainloop.h:217: do_process_breakable = 0;
   0883 21r82r00      [10] 1967 	ld	hl,#_do_process_breakable + 0
   0886 36 00         [10] 1968 	ld	(hl), #0x00
                           1969 ;./mainloop.h:218: gpit = BREAKABLE_MAX; while (gpit --) brkf [gpit] = 0;
   0888 21r06r00      [10] 1970 	ld	hl,#_gpit + 0
   088B 36 04         [10] 1971 	ld	(hl), #0x04
   088D 11r11r02      [10] 1972 	ld	de,#_brkf+0
   0890                    1973 00103$:
   0890 21r06r00      [10] 1974 	ld	hl,#_gpit + 0
   0893 46            [ 7] 1975 	ld	b, (hl)
   0894 21r06r00      [10] 1976 	ld	hl, #_gpit+0
   0897 35            [11] 1977 	dec	(hl)
   0898 78            [ 4] 1978 	ld	a,b
   0899 B7            [ 4] 1979 	or	a, a
   089A 28 0A         [12] 1980 	jr	Z,00105$
   089C 2Ar06r00      [16] 1981 	ld	hl,(_gpit)
   089F 26 00         [ 7] 1982 	ld	h,#0x00
   08A1 19            [11] 1983 	add	hl,de
   08A2 36 00         [10] 1984 	ld	(hl),#0x00
   08A4 18 EA         [12] 1985 	jr	00103$
   08A6                    1986 00105$:
                           1987 ;./mainloop.h:231: for (gpit = 0; gpit < MAX_BULLETS; gpit ++) {
   08A6 21r06r00      [10] 1988 	ld	hl,#_gpit + 0
   08A9 36 00         [10] 1989 	ld	(hl), #0x00
   08AB 11rD3r01      [10] 1990 	ld	de,#_bst+0
   08AE                    1991 00122$:
                           1992 ;./mainloop.h:232: b_slots [gpit] = gpit; 
   08AE 3ErCE         [ 7] 1993 	ld	a,#<(_b_slots)
   08B0 21r06r00      [10] 1994 	ld	hl,#_gpit
   08B3 86            [ 7] 1995 	add	a, (hl)
   08B4 4F            [ 4] 1996 	ld	c,a
   08B5 3Es01         [ 7] 1997 	ld	a,#>(_b_slots)
   08B7 CE 00         [ 7] 1998 	adc	a, #0x00
   08B9 47            [ 4] 1999 	ld	b,a
   08BA 3Ar06r00      [13] 2000 	ld	a,(#_gpit + 0)
   08BD 02            [ 7] 2001 	ld	(bc),a
                           2002 ;./mainloop.h:233: bst [gpit] = 0;
   08BE 2Ar06r00      [16] 2003 	ld	hl,(_gpit)
   08C1 26 00         [ 7] 2004 	ld	h,#0x00
   08C3 19            [11] 2005 	add	hl,de
   08C4 36 00         [10] 2006 	ld	(hl),#0x00
                           2007 ;./mainloop.h:231: for (gpit = 0; gpit < MAX_BULLETS; gpit ++) {
   08C6 21r06r00      [10] 2008 	ld	hl, #_gpit+0
   08C9 34            [11] 2009 	inc	(hl)
   08CA 3Ar06r00      [13] 2010 	ld	a,(#_gpit + 0)
   08CD D6 04         [ 7] 2011 	sub	a, #0x04
   08CF 38 DD         [12] 2012 	jr	C,00122$
                           2013 ;./mainloop.h:235: b_slots_i = MAX_BULLETS;
   08D1 21rD2r01      [10] 2014 	ld	hl,#_b_slots_i + 0
   08D4 36 04         [10] 2015 	ld	(hl), #0x04
                           2016 ;./mainloop.h:253: HW_initSprites ();
   08D6 CDr00r00      [17] 2017 	call	_SG_initSprites
                           2018 ;./my/on_entering_screen.h:8: if (n_pant == 0) {
   08D9 3ArBEr01      [13] 2019 	ld	a,(#_n_pant + 0)
   08DC B7            [ 4] 2020 	or	a, a
   08DD C2r7Er09      [10] 2021 	jp	NZ,00116$
                           2022 ;./my/on_entering_screen.h:10: do_update_list_and_wait ();
   08E0 CDr00r00      [17] 2023 	call	_do_update_list_and_wait
                           2024 ;./my/on_entering_screen.h:13: clear_update_list ();
   08E3 CDr00r00      [17] 2025 	call	_clear_update_list
                           2026 ;./my/on_entering_screen.h:14: rdx = 6; rdy = 4; rdt = 16; gpit = 6; while (gpit --) {
   08E6 21r12r00      [10] 2027 	ld	hl,#_rdx + 0
   08E9 36 06         [10] 2028 	ld	(hl), #0x06
   08EB 21r13r00      [10] 2029 	ld	hl,#_rdy + 0
   08EE 36 04         [10] 2030 	ld	(hl), #0x04
   08F0 21r14r00      [10] 2031 	ld	hl,#_rdt + 0
   08F3 36 10         [10] 2032 	ld	(hl), #0x10
   08F5 21r06r00      [10] 2033 	ld	hl,#_gpit + 0
   08F8 36 06         [10] 2034 	ld	(hl), #0x06
   08FA                    2035 00109$:
   08FA 21r06r00      [10] 2036 	ld	hl,#_gpit + 0
   08FD 56            [ 7] 2037 	ld	d, (hl)
   08FE 21r06r00      [10] 2038 	ld	hl, #_gpit+0
   0901 35            [11] 2039 	dec	(hl)
   0902 7A            [ 4] 2040 	ld	a,d
   0903 B7            [ 4] 2041 	or	a, a
   0904 28 2F         [12] 2042 	jr	Z,00111$
                           2043 ;./my/on_entering_screen.h:15: _x = rdx; _y = rdy; _t = rdt; map_set ();
   0906 3Ar12r00      [13] 2044 	ld	a,(#_rdx + 0)
   0909 32r00r00      [13] 2045 	ld	(#__x + 0),a
   090C 3Ar13r00      [13] 2046 	ld	a,(#_rdy + 0)
   090F 32r01r00      [13] 2047 	ld	(#__y + 0),a
   0912 3Ar14r00      [13] 2048 	ld	a,(#_rdt + 0)
   0915 32r03r00      [13] 2049 	ld	(#__t + 0),a
   0918 CDr00r00      [17] 2050 	call	_map_set
                           2051 ;./my/on_entering_screen.h:16: rdt ++; rdx ++; if (rdx == 9) { rdx = 6; rdy ++; }
   091B 21r14r00      [10] 2052 	ld	hl, #_rdt+0
   091E 34            [11] 2053 	inc	(hl)
   091F 21r12r00      [10] 2054 	ld	hl, #_rdx+0
   0922 34            [11] 2055 	inc	(hl)
   0923 3Ar12r00      [13] 2056 	ld	a,(#_rdx + 0)
   0926 D6 09         [ 7] 2057 	sub	a, #0x09
   0928 20 D0         [12] 2058 	jr	NZ,00109$
   092A 21r12r00      [10] 2059 	ld	hl,#_rdx + 0
   092D 36 06         [10] 2060 	ld	(hl), #0x06
   092F 21r13r00      [10] 2061 	ld	hl, #_rdy+0
   0932 34            [11] 2062 	inc	(hl)
   0933 18 C5         [12] 2063 	jr	00109$
   0935                    2064 00111$:
                           2065 ;./my/on_entering_screen.h:20: if (bombs_set) {
   0935 3Ar90r02      [13] 2066 	ld	a,(#_bombs_set + 0)
   0938 B7            [ 4] 2067 	or	a, a
   0939 28 3D         [12] 2068 	jr	Z,00114$
                           2069 ;./my/on_entering_screen.h:21: do_update_list_and_wait ();
   093B CDr00r00      [17] 2070 	call	_do_update_list_and_wait
                           2071 ;./my/on_entering_screen.h:22: clear_update_list ();
   093E CDr00r00      [17] 2072 	call	_clear_update_list
                           2073 ;./my/on_entering_screen.h:23: for (gpit = 0; gpit < 5; gpit ++) {
   0941 21r06r00      [10] 2074 	ld	hl,#_gpit + 0
   0944 36 00         [10] 2075 	ld	(hl), #0x00
   0946 11r4Br01      [10] 2076 	ld	de,#_bombs_y+0
   0949                    2077 00124$:
                           2078 ;./my/on_entering_screen.h:24: _x = bombs_x [gpit]; _y = bombs_y [gpit]; _t = 24; map_set ();
   0949 3Er46         [ 7] 2079 	ld	a,#<(_bombs_x)
   094B 21r06r00      [10] 2080 	ld	hl,#_gpit
   094E 86            [ 7] 2081 	add	a, (hl)
   094F 4F            [ 4] 2082 	ld	c,a
   0950 3Es01         [ 7] 2083 	ld	a,#>(_bombs_x)
   0952 CE 00         [ 7] 2084 	adc	a, #0x00
   0954 47            [ 4] 2085 	ld	b,a
   0955 0A            [ 7] 2086 	ld	a,(bc)
   0956 32r00r00      [13] 2087 	ld	(#__x + 0),a
   0959 2Ar06r00      [16] 2088 	ld	hl,(_gpit)
   095C 26 00         [ 7] 2089 	ld	h,#0x00
   095E 19            [11] 2090 	add	hl,de
   095F 7E            [ 7] 2091 	ld	a,(hl)
   0960 32r01r00      [13] 2092 	ld	(#__y + 0),a
   0963 21r03r00      [10] 2093 	ld	hl,#__t + 0
   0966 36 18         [10] 2094 	ld	(hl), #0x18
   0968 D5            [11] 2095 	push	de
   0969 CDr00r00      [17] 2096 	call	_map_set
   096C D1            [10] 2097 	pop	de
                           2098 ;./my/on_entering_screen.h:23: for (gpit = 0; gpit < 5; gpit ++) {
   096D 21r06r00      [10] 2099 	ld	hl, #_gpit+0
   0970 34            [11] 2100 	inc	(hl)
   0971 3Ar06r00      [13] 2101 	ld	a,(#_gpit + 0)
   0974 D6 05         [ 7] 2102 	sub	a, #0x05
   0976 38 D1         [12] 2103 	jr	C,00124$
   0978                    2104 00114$:
                           2105 ;./my/on_entering_screen.h:28: do_update_list_and_wait ();
   0978 CDr00r00      [17] 2106 	call	_do_update_list_and_wait
                           2107 ;./my/on_entering_screen.h:29: clear_update_list ();
   097B CDr00r00      [17] 2108 	call	_clear_update_list
   097E                    2109 00116$:
                           2110 ;./mainloop.h:270: gpit = 3; while (gpit --) en_spr_id [gpit] = en_s [gpit];
   097E 21r06r00      [10] 2111 	ld	hl,#_gpit + 0
   0981 36 03         [10] 2112 	ld	(hl), #0x03
   0983                    2113 00117$:
   0983 21r06r00      [10] 2114 	ld	hl,#_gpit + 0
   0986 5E            [ 7] 2115 	ld	e, (hl)
   0987 21r06r00      [10] 2116 	ld	hl, #_gpit+0
   098A 35            [11] 2117 	dec	(hl)
   098B 7B            [ 4] 2118 	ld	a,e
   098C B7            [ 4] 2119 	or	a, a
   098D 28 1E         [12] 2120 	jr	Z,00119$
   098F 3Er8D         [ 7] 2121 	ld	a,#<(_en_spr_id)
   0991 21r06r00      [10] 2122 	ld	hl,#_gpit
   0994 86            [ 7] 2123 	add	a, (hl)
   0995 5F            [ 4] 2124 	ld	e,a
   0996 3Es02         [ 7] 2125 	ld	a,#>(_en_spr_id)
   0998 CE 00         [ 7] 2126 	adc	a, #0x00
   099A 57            [ 4] 2127 	ld	d,a
   099B FD 21r71r02   [14] 2128 	ld	iy,#_en_s
   099F ED 4Br06r00   [20] 2129 	ld	bc,(_gpit)
   09A3 06 00         [ 7] 2130 	ld	b,#0x00
   09A5 FD 09         [15] 2131 	add	iy, bc
   09A7 FD 7E 00      [19] 2132 	ld	a, 0 (iy)
   09AA 12            [ 7] 2133 	ld	(de),a
   09AB 18 D6         [12] 2134 	jr	00117$
   09AD                    2135 00119$:
                           2136 ;./mainloop.h:272: prx = px >> FIXBITS; pry = py >> FIXBITS;
   09AD 2Ar4Er00      [16] 2137 	ld	hl,(_px)
   09B0 CB 2C         [ 8] 2138 	sra	h
   09B2 CB 1D         [ 8] 2139 	rr	l
   09B4 CB 2C         [ 8] 2140 	sra	h
   09B6 CB 1D         [ 8] 2141 	rr	l
   09B8 CB 2C         [ 8] 2142 	sra	h
   09BA CB 1D         [ 8] 2143 	rr	l
   09BC CB 2C         [ 8] 2144 	sra	h
   09BE CB 1D         [ 8] 2145 	rr	l
   09C0 CB 2C         [ 8] 2146 	sra	h
   09C2 CB 1D         [ 8] 2147 	rr	l
   09C4 CB 2C         [ 8] 2148 	sra	h
   09C6 CB 1D         [ 8] 2149 	rr	l
   09C8 FD 21r56r00   [14] 2150 	ld	iy,#_prx
   09CC FD 75 00      [19] 2151 	ld	0 (iy),l
   09CF 2Ar50r00      [16] 2152 	ld	hl,(_py)
   09D2 CB 2C         [ 8] 2153 	sra	h
   09D4 CB 1D         [ 8] 2154 	rr	l
   09D6 CB 2C         [ 8] 2155 	sra	h
   09D8 CB 1D         [ 8] 2156 	rr	l
   09DA CB 2C         [ 8] 2157 	sra	h
   09DC CB 1D         [ 8] 2158 	rr	l
   09DE CB 2C         [ 8] 2159 	sra	h
   09E0 CB 1D         [ 8] 2160 	rr	l
   09E2 CB 2C         [ 8] 2161 	sra	h
   09E4 CB 1D         [ 8] 2162 	rr	l
   09E6 CB 2C         [ 8] 2163 	sra	h
   09E8 CB 1D         [ 8] 2164 	rr	l
   09EA FD 21r57r00   [14] 2165 	ld	iy,#_pry
   09EE FD 75 00      [19] 2166 	ld	0 (iy),l
                           2167 ;./mainloop.h:277: player_move ();
   09F1 CDr00r00      [17] 2168 	call	_player_move
                           2169 ;./mainloop.h:278: player_frame_selector ();
   09F4 CDr80r06      [17] 2170 	call	_player_frame_selector
                           2171 ;./mainloop.h:280: enems_move ();
   09F7 CDr00r00      [17] 2172 	call	_enems_move
                           2173 ;./mainloop.h:282: if (hrt) hotspots_paint ();
   09FA 3Ar81r00      [13] 2174 	ld	a,(#_hrt + 0)
   09FD B7            [ 4] 2175 	or	a, a
   09FE 28 03         [12] 2176 	jr	Z,00121$
   0A00 CDr50r01      [17] 2177 	call	_hotspots_paint
   0A03                    2178 00121$:
                           2179 ;./mainloop.h:297: hud_update ();
   0A03 CDrE4r01      [17] 2180 	call	_hud_update
                           2181 ;./mainloop.h:298: HW_copySpritestoSAT ();
   0A06 CDr00r00      [17] 2182 	call	_SG_copySpritestoSAT
                           2183 ;./mainloop.h:299: update_list [update_index] = 0xff;
   0A09 3Ar98r00      [13] 2184 	ld	a,(#_update_index + 0)
   0A0C C6r99         [ 7] 2185 	add	a, #<(_update_list)
   0A0E 6F            [ 4] 2186 	ld	l, a
   0A0F 3E 00         [ 7] 2187 	ld	a, #0x00
   0A11 CEs00         [ 7] 2188 	adc	a, #>(_update_list)
   0A13 67            [ 4] 2189 	ld	h, a
   0A14 36 FF         [10] 2190 	ld	(hl),#0xFF
                           2191 ;./mainloop.h:300: HW_doUpdateList ();
   0A16 CDr00r00      [17] 2192 	call	_SG_doUpdateList
                           2193 ;./mainloop.h:301: clear_update_list ();	
   0A19 CDr00r00      [17] 2194 	call	_clear_update_list
                           2195 ;./mainloop.h:302: HW_displayOn ();
   0A1C 21 40 01      [10] 2196 	ld	hl,#0x0140
   0A1F E5            [11] 2197 	push	hl
   0A20 CDr00r00      [17] 2198 	call	_SG_VDPturnOnFeature
   0A23 F1            [10] 2199 	pop	af
                           2200 ;./mainloop.h:304: pad0 = 0;
   0A24 21r04r00      [10] 2201 	ld	hl,#_pad0 + 0
   0A27 36 00         [10] 2202 	ld	(hl), #0x00
   0A29 C9            [10] 2203 	ret
                           2204 ;./mainloop.h:307: void game_loop (void) {
                           2205 ;	---------------------------------
                           2206 ; Function game_loop
                           2207 ; ---------------------------------
   0A2A                    2208 _game_loop::
                           2209 ;./mainloop.h:308: clear_update_list ();
   0A2A CDr00r00      [17] 2210 	call	_clear_update_list
                           2211 ;./mainloop.h:310: on_pant = 99; ft = 1; fade_delay = 1;
   0A2D 21rBFr01      [10] 2212 	ld	hl,#_on_pant + 0
   0A30 36 63         [10] 2213 	ld	(hl), #0x63
   0A32 21r83r00      [10] 2214 	ld	hl,#_ft + 0
   0A35 36 01         [10] 2215 	ld	(hl), #0x01
   0A37 21rFAr00      [10] 2216 	ld	hl,#_fade_delay + 0
   0A3A 36 01         [10] 2217 	ld	(hl), #0x01
                           2218 ;./mainloop.h:323: ntsc_frame = level_reset = warp_to_level = 0; 
   0A3C 21rC5r01      [10] 2219 	ld	hl,#_warp_to_level + 0
   0A3F 36 00         [10] 2220 	ld	(hl), #0x00
   0A41 21rC6r01      [10] 2221 	ld	hl,#_level_reset + 0
   0A44 36 00         [10] 2222 	ld	(hl), #0x00
   0A46 21r97r00      [10] 2223 	ld	hl,#_ntsc_frame + 0
   0A49 36 00         [10] 2224 	ld	(hl), #0x00
                           2225 ;./mainloop.h:324: ticker = 50;
   0A4B 21r1Dr00      [10] 2226 	ld	hl,#_ticker + 0
   0A4E 36 32         [10] 2227 	ld	(hl), #0x32
                           2228 ;./mainloop.h:327: PSGPlay (l_music [level]);
   0A50 FD 21rBCr01   [14] 2229 	ld	iy,#_level
   0A54 FD 6E 00      [19] 2230 	ld	l,0 (iy)
   0A57 26 00         [ 7] 2231 	ld	h,#0x00
   0A59 29            [11] 2232 	add	hl, hl
   0A5A 11r40r01      [10] 2233 	ld	de,#_l_music
   0A5D 19            [11] 2234 	add	hl,de
   0A5E 5E            [ 7] 2235 	ld	e,(hl)
   0A5F 23            [ 6] 2236 	inc	hl
   0A60 56            [ 7] 2237 	ld	d,(hl)
   0A61 D5            [11] 2238 	push	de
   0A62 CDr00r00      [17] 2239 	call	_PSGPlay
   0A65 F1            [10] 2240 	pop	af
                           2241 ;./mainloop.h:332: paused = 0; HW_resetPauseRequest ();
   0A66 21rC2r01      [10] 2242 	ld	hl,#_paused + 0
   0A69 36 00         [10] 2243 	ld	(hl), #0x00
   0A6B CDr00r00      [17] 2244 	call	_SG_resetPauseRequest
                           2245 ;./mainloop.h:334: while (1) {
   0A6E                    2246 00159$:
                           2247 ;./mainloop.h:341: hud_update ();
   0A6E CDrE4r01      [17] 2248 	call	_hud_update
                           2249 ;./mainloop.h:345: if (pkill) player_kill ();
   0A71 3Ar73r00      [13] 2250 	ld	a,(#_pkill + 0)
   0A74 B7            [ 4] 2251 	or	a, a
   0A75 28 03         [12] 2252 	jr	Z,00102$
   0A77 CDr00r00      [17] 2253 	call	_player_kill
   0A7A                    2254 00102$:
                           2255 ;./mainloop.h:346: if (game_over || level_reset) break;			
   0A7A 3ArC4r01      [13] 2256 	ld	a,(#_game_over + 0)
   0A7D B7            [ 4] 2257 	or	a, a
   0A7E C2r2Fr0D      [10] 2258 	jp	NZ,00160$
   0A81 3ArC6r01      [13] 2259 	ld	a,(#_level_reset + 0)
   0A84 B7            [ 4] 2260 	or	a, a
   0A85 C2r2Fr0D      [10] 2261 	jp	NZ,00160$
                           2262 ;./mainloop.h:352: flick_override = 0;
   0A88 21rC7r01      [10] 2263 	ld	hl,#_flick_override + 0
   0A8B 36 00         [10] 2264 	ld	(hl), #0x00
                           2265 ;./mainloop.h:355: flickscreen_do_horizontal ();
   0A8D CDrE8r05      [17] 2266 	call	_flickscreen_do_horizontal
                           2267 ;./mainloop.h:356: flickscreen_do_vertical ();
   0A90 CDr27r06      [17] 2268 	call	_flickscreen_do_vertical
                           2269 ;./mainloop.h:362: if (on_pant != n_pant) {
   0A93 3ArBFr01      [13] 2270 	ld	a,(#_on_pant + 0)
   0A96 FD 21rBEr01   [14] 2271 	ld	iy,#_n_pant
   0A9A FD 96 00      [19] 2272 	sub	a, 0 (iy)
   0A9D 28 09         [12] 2273 	jr	Z,00109$
                           2274 ;./mainloop.h:363: prepare_scr ();
   0A9F CDr4Br08      [17] 2275 	call	_prepare_scr
                           2276 ;./mainloop.h:364: on_pant = n_pant;
   0AA2 3ArBEr01      [13] 2277 	ld	a,(#_n_pant + 0)
   0AA5 32rBFr01      [13] 2278 	ld	(#_on_pant + 0),a
   0AA8                    2279 00109$:
                           2280 ;./mainloop.h:383: HW_waitForVBlank ();
   0AA8 CDr00r00      [17] 2281 	call	_SG_waitForVBlank
                           2282 ;./mainloop.h:384: HW_copySpritestoSAT ();
   0AAB CDr00r00      [17] 2283 	call	_SG_copySpritestoSAT
                           2284 ;./mainloop.h:385: update_list [update_index] = 0xff;
   0AAE 3Er99         [ 7] 2285 	ld	a,#<(_update_list)
   0AB0 21r98r00      [10] 2286 	ld	hl,#_update_index
   0AB3 86            [ 7] 2287 	add	a, (hl)
   0AB4 6F            [ 4] 2288 	ld	l, a
   0AB5 3Es00         [ 7] 2289 	ld	a, #>(_update_list)
   0AB7 CE 00         [ 7] 2290 	adc	a, #0x00
   0AB9 67            [ 4] 2291 	ld	h, a
   0ABA 36 FF         [10] 2292 	ld	(hl),#0xFF
                           2293 ;./mainloop.h:386: HW_doUpdateList ();
   0ABC CDr00r00      [17] 2294 	call	_SG_doUpdateList
                           2295 ;./mainloop.h:387: clear_update_list ();
   0ABF CDr00r00      [17] 2296 	call	_clear_update_list
                           2297 ;./mainloop.h:391: pad_read ();
   0AC2 CDr00r00      [17] 2298 	call	_pad_read
                           2299 ;./mainloop.h:392: a_button = (pad_this_frame & PAD_A);
   0AC5 3Ar05r00      [13] 2300 	ld	a,(#_pad_this_frame + 0)
   0AC8 E6 20         [ 7] 2301 	and	a, #0x20
   0ACA 32r5Dr00      [13] 2302 	ld	(#_a_button + 0),a
                           2303 ;./mainloop.h:393: b_button = (pad_this_frame & PAD_B);
   0ACD 3Ar05r00      [13] 2304 	ld	a,(#_pad_this_frame + 0)
   0AD0 E6 10         [ 7] 2305 	and	a, #0x10
   0AD2 32r5Er00      [13] 2306 	ld	(#_b_button + 0),a
                           2307 ;./mainloop.h:397: ntsc_frame ++; if (ntsc_frame == 6) ntsc_frame = 0;
   0AD5 21r97r00      [10] 2308 	ld	hl, #_ntsc_frame+0
   0AD8 34            [11] 2309 	inc	(hl)
   0AD9 3Ar97r00      [13] 2310 	ld	a,(#_ntsc_frame + 0)
   0ADC D6 06         [ 7] 2311 	sub	a, #0x06
   0ADE 20 05         [12] 2312 	jr	NZ,00111$
   0AE0 21r97r00      [10] 2313 	ld	hl,#_ntsc_frame + 0
   0AE3 36 00         [10] 2314 	ld	(hl), #0x00
   0AE5                    2315 00111$:
                           2316 ;./mainloop.h:399: if (paused == 0 && (ntsc == 0 || ntsc_frame)) {
   0AE5 3ArC2r01      [13] 2317 	ld	a,(#_paused + 0)
   0AE8 B7            [ 4] 2318 	or	a, a
   0AE9 C2r07r0D      [10] 2319 	jp	NZ,00151$
   0AEC 3Ar96r00      [13] 2320 	ld	a,(#_ntsc + 0)
   0AEF B7            [ 4] 2321 	or	a, a
   0AF0 28 07         [12] 2322 	jr	Z,00150$
   0AF2 3Ar97r00      [13] 2323 	ld	a,(#_ntsc_frame + 0)
   0AF5 B7            [ 4] 2324 	or	a, a
   0AF6 CAr07r0D      [10] 2325 	jp	Z,00151$
   0AF9                    2326 00150$:
                           2327 ;./mainloop.h:400: HW_initSprites ();
   0AF9 CDr00r00      [17] 2328 	call	_SG_initSprites
                           2329 ;./mainloop.h:403: if (ticker) -- ticker; else ticker = 50;
   0AFC 3Ar1Dr00      [13] 2330 	ld	a,(#_ticker + 0)
   0AFF B7            [ 4] 2331 	or	a, a
   0B00 28 06         [12] 2332 	jr	Z,00113$
   0B02 21r1Dr00      [10] 2333 	ld	hl, #_ticker+0
   0B05 35            [11] 2334 	dec	(hl)
   0B06 18 05         [12] 2335 	jr	00114$
   0B08                    2336 00113$:
   0B08 21r1Dr00      [10] 2337 	ld	hl,#_ticker + 0
   0B0B 36 32         [10] 2338 	ld	(hl), #0x32
   0B0D                    2339 00114$:
                           2340 ;./mainloop.h:404: half_life ^= 1;
   0B0D 3ArC0r01      [13] 2341 	ld	a,(#_half_life + 0)
   0B10 EE 01         [ 7] 2342 	xor	a, #0x01
   0B12 32rC0r01      [13] 2343 	ld	(#_half_life + 0),a
                           2344 ;./mainloop.h:405: ++ frame_counter;
   0B15 21rC1r01      [10] 2345 	ld	hl, #_frame_counter+0
   0B18 34            [11] 2346 	inc	(hl)
                           2347 ;./mainloop/hotspots.h:6: if (hrt) {
   0B19 3Ar81r00      [13] 2348 	ld	a,(#_hrt + 0)
   0B1C B7            [ 4] 2349 	or	a, a
   0B1D CAr12r0C      [10] 2350 	jp	Z,00128$
                           2351 ;./mainloop/hotspots.h:7: if (collide_in (prx + 4, pry + 8, hrx, hry)) {
   0B20 3Ar57r00      [13] 2352 	ld	a,(#_pry + 0)
   0B23 C6 08         [ 7] 2353 	add	a, #0x08
   0B25 47            [ 4] 2354 	ld	b,a
   0B26 21r56r00      [10] 2355 	ld	hl,#_prx + 0
   0B29 56            [ 7] 2356 	ld	d, (hl)
   0B2A 14            [ 4] 2357 	inc	d
   0B2B 14            [ 4] 2358 	inc	d
   0B2C 14            [ 4] 2359 	inc	d
   0B2D 14            [ 4] 2360 	inc	d
   0B2E 3Ar80r00      [13] 2361 	ld	a,(_hry)
   0B31 F5            [11] 2362 	push	af
   0B32 33            [ 6] 2363 	inc	sp
   0B33 3Ar7Fr00      [13] 2364 	ld	a,(_hrx)
   0B36 F5            [11] 2365 	push	af
   0B37 33            [ 6] 2366 	inc	sp
   0B38 4A            [ 4] 2367 	ld	c, d
   0B39 C5            [11] 2368 	push	bc
   0B3A CDr00r00      [17] 2369 	call	_collide_in
   0B3D F1            [10] 2370 	pop	af
   0B3E F1            [10] 2371 	pop	af
   0B3F 7D            [ 4] 2372 	ld	a,l
   0B40 B7            [ 4] 2373 	or	a, a
   0B41 CAr12r0C      [10] 2374 	jp	Z,00128$
                           2375 ;./mainloop/hotspots.h:128: gp_gen = 0; rdm = 1;
   0B44 21 00 00      [10] 2376 	ld	hl,#0x0000
   0B47 22r0Ar00      [16] 2377 	ld	(_gp_gen),hl
   0B4A 21r1Ar00      [10] 2378 	ld	hl,#_rdm + 0
   0B4D 36 01         [10] 2379 	ld	(hl), #0x01
                           2380 ;./mainloop/hotspots.h:129: switch (hrt) {
   0B4F 3Ar81r00      [13] 2381 	ld	a,(#_hrt + 0)
   0B52 D6 01         [ 7] 2382 	sub	a, #0x01
   0B54 DArE7r0B      [10] 2383 	jp	C,00122$
   0B57 3E 04         [ 7] 2384 	ld	a,#0x04
   0B59 FD 21r81r00   [14] 2385 	ld	iy,#_hrt
   0B5D FD 96 00      [19] 2386 	sub	a, 0 (iy)
   0B60 DArE7r0B      [10] 2387 	jp	C,00122$
   0B63 FD 21r81r00   [14] 2388 	ld	iy,#_hrt
   0B67 FD 5E 00      [19] 2389 	ld	e,0 (iy)
   0B6A 1D            [ 4] 2390 	dec	e
   0B6B 16 00         [ 7] 2391 	ld	d,#0x00
   0B6D 21r73r0B      [10] 2392 	ld	hl,#00293$
   0B70 19            [11] 2393 	add	hl,de
   0B71 19            [11] 2394 	add	hl,de
                           2395 ;./mainloop/hotspots.h:131: case HOTSPOT_TYPE_OBJECT:
   0B72 E9            [ 4] 2396 	jp	(hl)
   0B73                    2397 00293$:
   0B73 18 06         [12] 2398 	jr	00115$
   0B75 18 14         [12] 2399 	jr	00116$
   0B77 18 22         [12] 2400 	jr	00117$
   0B79 18 35         [12] 2401 	jr	00118$
   0B7B                    2402 00115$:
                           2403 ;./mainloop/hotspots.h:145: ++ pobjs;
   0B7B 21r79r00      [10] 2404 	ld	hl, #_pobjs+0
   0B7E 34            [11] 2405 	inc	(hl)
                           2406 ;./mainloop/hotspots.h:146: gp_gen = SFX_OBJECT;
   0B7F 21r0Ar00      [10] 2407 	ld	hl,#_gp_gen + 0
   0B82 36r00         [10] 2408 	ld	(hl), #<(_s_02_object2_psg)
   0B84 21r0Br00      [10] 2409 	ld	hl,#_gp_gen + 1
   0B87 36s00         [10] 2410 	ld	(hl), #>(_s_02_object2_psg)
                           2411 ;./mainloop/hotspots.h:148: break;
   0B89 18 5C         [12] 2412 	jr	00122$
                           2413 ;./mainloop/hotspots.h:151: case HOTSPOT_TYPE_KEYS:
   0B8B                    2414 00116$:
                           2415 ;./mainloop/hotspots.h:152: ++ pkeys;
   0B8B 21r78r00      [10] 2416 	ld	hl, #_pkeys+0
   0B8E 34            [11] 2417 	inc	(hl)
                           2418 ;./mainloop/hotspots.h:153: gp_gen = SFX_OBJECT;
   0B8F 21r0Ar00      [10] 2419 	ld	hl,#_gp_gen + 0
   0B92 36r00         [10] 2420 	ld	(hl), #<(_s_02_object2_psg)
   0B94 21r0Br00      [10] 2421 	ld	hl,#_gp_gen + 1
   0B97 36s00         [10] 2422 	ld	(hl), #>(_s_02_object2_psg)
                           2423 ;./mainloop/hotspots.h:154: break;
   0B99 18 4C         [12] 2424 	jr	00122$
                           2425 ;./mainloop/hotspots.h:156: case HOTSPOT_TYPE_REFILL:
   0B9B                    2426 00117$:
                           2427 ;./mainloop/hotspots.h:157: plife += PLAYER_REFILL;
   0B9B 21r77r00      [10] 2428 	ld	hl, #_plife+0
   0B9E 34            [11] 2429 	inc	(hl)
                           2430 ;./mainloop/hotspots.h:161: gp_gen = SFX_USE;
   0B9F 21r0Ar00      [10] 2431 	ld	hl,#_gp_gen + 0
   0BA2 36r00         [10] 2432 	ld	(hl), #<(_s_03_use2_psg)
   0BA4 21r0Br00      [10] 2433 	ld	hl,#_gp_gen + 1
   0BA7 36s00         [10] 2434 	ld	(hl), #>(_s_03_use2_psg)
                           2435 ;./mainloop/hotspots.h:162: rdm = 2;
   0BA9 21r1Ar00      [10] 2436 	ld	hl,#_rdm + 0
   0BAC 36 02         [10] 2437 	ld	(hl), #0x02
                           2438 ;./mainloop/hotspots.h:163: break;
   0BAE 18 37         [12] 2439 	jr	00122$
                           2440 ;./mainloop/hotspots.h:165: case HOTSPOT_TYPE_AMMO:
   0BB0                    2441 00118$:
                           2442 ;./mainloop/hotspots.h:166: gp_gen = SFX_OBJECT;
   0BB0 21r0Ar00      [10] 2443 	ld	hl,#_gp_gen + 0
   0BB3 36r00         [10] 2444 	ld	(hl), #<(_s_02_object2_psg)
   0BB5 21r0Br00      [10] 2445 	ld	hl,#_gp_gen + 1
   0BB8 36s00         [10] 2446 	ld	(hl), #>(_s_02_object2_psg)
                           2447 ;./mainloop/hotspots.h:167: if (MAX_AMMO - pammo > AMMO_REFILL)
   0BBA FD 21r7Ar00   [14] 2448 	ld	iy,#_pammo
   0BBE FD 66 00      [19] 2449 	ld	h,0 (iy)
   0BC1 2E 00         [ 7] 2450 	ld	l,#0x00
   0BC3 3E 63         [ 7] 2451 	ld	a,#0x63
   0BC5 94            [ 4] 2452 	sub	a, h
   0BC6 67            [ 4] 2453 	ld	h,a
   0BC7 3E 00         [ 7] 2454 	ld	a,#0x00
   0BC9 9D            [ 4] 2455 	sbc	a, l
   0BCA 6F            [ 4] 2456 	ld	l,a
   0BCB 3E 32         [ 7] 2457 	ld	a,#0x32
   0BCD BC            [ 4] 2458 	cp	a, h
   0BCE 3E 00         [ 7] 2459 	ld	a,#0x00
   0BD0 9D            [ 4] 2460 	sbc	a, l
   0BD1 E2rD6r0B      [10] 2461 	jp	PO, 00294$
   0BD4 EE 80         [ 7] 2462 	xor	a, #0x80
   0BD6                    2463 00294$:
   0BD6 F2rE2r0B      [10] 2464 	jp	P,00120$
                           2465 ;./mainloop/hotspots.h:168: pammo += AMMO_REFILL;
   0BD9 21r7Ar00      [10] 2466 	ld	hl,#_pammo
   0BDC 7E            [ 7] 2467 	ld	a,(hl)
   0BDD C6 32         [ 7] 2468 	add	a, #0x32
   0BDF 77            [ 7] 2469 	ld	(hl),a
   0BE0 18 05         [12] 2470 	jr	00122$
   0BE2                    2471 00120$:
                           2472 ;./mainloop/hotspots.h:170: pammo = MAX_AMMO;
   0BE2 21r7Ar00      [10] 2473 	ld	hl,#_pammo + 0
   0BE5 36 63         [10] 2474 	ld	(hl), #0x63
                           2475 ;./mainloop/hotspots.h:192: }
   0BE7                    2476 00122$:
                           2477 ;./mainloop/hotspots.h:193: if (gp_gen) {
   0BE7 3Ar0Br00      [13] 2478 	ld	a,(#_gp_gen + 1)
   0BEA 21r0Ar00      [10] 2479 	ld	hl,#_gp_gen + 0
   0BED B6            [ 7] 2480 	or	a,(hl)
   0BEE 28 22         [12] 2481 	jr	Z,00128$
                           2482 ;./mainloop/hotspots.h:194: PSGSFXPlay (gp_gen, rdm);
   0BF0 ED 5Br0Ar00   [20] 2483 	ld	de,(_gp_gen)
   0BF4 3Ar1Ar00      [13] 2484 	ld	a,(_rdm)
   0BF7 F5            [11] 2485 	push	af
   0BF8 33            [ 6] 2486 	inc	sp
   0BF9 D5            [11] 2487 	push	de
   0BFA CDr00r00      [17] 2488 	call	_PSGSFXPlay
   0BFD F1            [10] 2489 	pop	af
   0BFE 33            [ 6] 2490 	inc	sp
                           2491 ;./mainloop/hotspots.h:195: hrt = 0;
   0BFF 21r81r00      [10] 2492 	ld	hl,#_hrt + 0
   0C02 36 00         [10] 2493 	ld	(hl), #0x00
                           2494 ;./mainloop/hotspots.h:196: hact [n_pant] = 0;
   0C04 3Er1E         [ 7] 2495 	ld	a,#<(_hact)
   0C06 21rBEr01      [10] 2496 	ld	hl,#_n_pant
   0C09 86            [ 7] 2497 	add	a, (hl)
   0C0A 5F            [ 4] 2498 	ld	e,a
   0C0B 3Es02         [ 7] 2499 	ld	a,#>(_hact)
   0C0D CE 00         [ 7] 2500 	adc	a, #0x00
   0C0F 57            [ 4] 2501 	ld	d,a
   0C10 AF            [ 4] 2502 	xor	a, a
   0C11 12            [ 7] 2503 	ld	(de),a
   0C12                    2504 00128$:
                           2505 ;./mainloop.h:425: if (!warp_to_level) {
   0C12 3ArC5r01      [13] 2506 	ld	a,(#_warp_to_level + 0)
   0C15 B7            [ 4] 2507 	or	a, a
   0C16 20 06         [12] 2508 	jr	NZ,00130$
                           2509 ;./mainloop.h:426: player_move ();
   0C18 CDr00r00      [17] 2510 	call	_player_move
                           2511 ;./mainloop.h:427: player_frame_selector ();
   0C1B CDr80r06      [17] 2512 	call	_player_frame_selector
   0C1E                    2513 00130$:
                           2514 ;./my/extra_checks.h:14: if (n_pant == 23 && bombs_set) {
   0C1E 3ArBEr01      [13] 2515 	ld	a,(#_n_pant + 0)
   0C21 D6 17         [ 7] 2516 	sub	a, #0x17
   0C23 20 23         [12] 2517 	jr	NZ,00132$
   0C25 3Ar90r02      [13] 2518 	ld	a,(#_bombs_set + 0)
   0C28 B7            [ 4] 2519 	or	a, a
   0C29 28 1D         [12] 2520 	jr	Z,00132$
                           2521 ;./my/extra_checks.h:15: update_cycle ();
   0C2B CDr00r00      [17] 2522 	call	_update_cycle
                           2523 ;./my/extra_checks.h:16: PSGSFXPlay (SFX_FANFARE, 2);
   0C2E 11r00r00      [10] 2524 	ld	de,#_s_19_fanfare2_psg
   0C31 3E 02         [ 7] 2525 	ld	a,#0x02
   0C33 F5            [11] 2526 	push	af
   0C34 33            [ 6] 2527 	inc	sp
   0C35 D5            [11] 2528 	push	de
   0C36 CDr00r00      [17] 2529 	call	_PSGSFXPlay
   0C39 F1            [10] 2530 	pop	af
   0C3A 33            [ 6] 2531 	inc	sp
                           2532 ;./my/extra_checks.h:17: delay (120);
   0C3B 3E 78         [ 7] 2533 	ld	a,#0x78
   0C3D F5            [11] 2534 	push	af
   0C3E 33            [ 6] 2535 	inc	sp
   0C3F CDr00r00      [17] 2536 	call	_delay
   0C42 33            [ 6] 2537 	inc	sp
                           2538 ;./my/extra_checks.h:18: win_level = 1;
   0C43 21rC3r01      [10] 2539 	ld	hl,#_win_level + 0
   0C46 36 01         [10] 2540 	ld	(hl), #0x01
   0C48                    2541 00132$:
                           2542 ;./mainloop/win_level_condition.h:10: win_level
   0C48 3ArC3r01      [13] 2543 	ld	a,(#_win_level + 0)
   0C4B B7            [ 4] 2544 	or	a, a
   0C4C 28 0E         [12] 2545 	jr	Z,00135$
                           2546 ;./mainloop/win_level_condition.h:23: PSGStop ();
   0C4E CDr00r00      [17] 2547 	call	_PSGStop
                           2548 ;./mainloop/win_level_condition.h:24: delay (50);
   0C51 3E 32         [ 7] 2549 	ld	a,#0x32
   0C53 F5            [11] 2550 	push	af
   0C54 33            [ 6] 2551 	inc	sp
   0C55 CDr00r00      [17] 2552 	call	_delay
   0C58 33            [ 6] 2553 	inc	sp
                           2554 ;./mainloop/win_level_condition.h:25: break;
   0C59 C3r2Fr0D      [10] 2555 	jp	00160$
   0C5C                    2556 00135$:
                           2557 ;./mainloop.h:453: bullets_move ();
   0C5C CDr00r00      [17] 2558 	call	_bullets_move
                           2559 ;./mainloop.h:459: cocos_do ();
   0C5F CDr00r00      [17] 2560 	call	_cocos_do
                           2561 ;./mainloop.h:464: cur_stp = HW_getStp (); 
   0C62 CDr00r00      [17] 2562 	call	_SG_getStp
   0C65 22r25r00      [16] 2563 	ld	(_cur_stp),hl
                           2564 ;./mainloop.h:465: if (!warp_to_level)	player_render ();
   0C68 3ArC5r01      [13] 2565 	ld	a,(#_warp_to_level + 0)
   0C6B B7            [ 4] 2566 	or	a, a
   0C6C 20 03         [12] 2567 	jr	NZ,00137$
   0C6E CDr00r00      [17] 2568 	call	_player_render
   0C71                    2569 00137$:
                           2570 ;./mainloop.h:469: enems_move ();
   0C71 CDr00r00      [17] 2571 	call	_enems_move
                           2572 ;./mainloop.h:473: if (warp_to_level) {
   0C74 3ArC5r01      [13] 2573 	ld	a,(#_warp_to_level + 0)
   0C77 B7            [ 4] 2574 	or	a, a
   0C78 28 09         [12] 2575 	jr	Z,00139$
                           2576 ;./mainloop.h:474: update_cycle (); PSGStop (); break;
   0C7A CDr00r00      [17] 2577 	call	_update_cycle
   0C7D CDr00r00      [17] 2578 	call	_PSGStop
   0C80 C3r2Fr0D      [10] 2579 	jp	00160$
   0C83                    2580 00139$:
                           2581 ;./mainloop.h:485: if (hrt) hotspots_paint ();
   0C83 3Ar81r00      [13] 2582 	ld	a,(#_hrt + 0)
   0C86 B7            [ 4] 2583 	or	a, a
   0C87 28 03         [12] 2584 	jr	Z,00141$
   0C89 CDr50r01      [17] 2585 	call	_hotspots_paint
   0C8C                    2586 00141$:
                           2587 ;./mainloop.h:496: if (do_process_breakable) breakable_do_anim ();
   0C8C 3Ar82r00      [13] 2588 	ld	a,(#_do_process_breakable + 0)
   0C8F B7            [ 4] 2589 	or	a, a
   0C90 28 03         [12] 2590 	jr	Z,00143$
   0C92 CDr00r00      [17] 2591 	call	_breakable_do_anim
   0C95                    2592 00143$:
                           2593 ;./my/extra_routines.h:7: if (pobjs == 5 && n_pant == 0 && bombs_set == 0 && pry < 128) {
   0C95 3Ar79r00      [13] 2594 	ld	a,(#_pobjs + 0)
   0C98 D6 05         [ 7] 2595 	sub	a, #0x05
   0C9A 20 6B         [12] 2596 	jr	NZ,00151$
   0C9C 3ArBEr01      [13] 2597 	ld	a,(#_n_pant + 0)
   0C9F B7            [ 4] 2598 	or	a, a
   0CA0 20 65         [12] 2599 	jr	NZ,00151$
   0CA2 3Ar90r02      [13] 2600 	ld	a,(#_bombs_set + 0)
   0CA5 B7            [ 4] 2601 	or	a, a
   0CA6 20 5F         [12] 2602 	jr	NZ,00151$
   0CA8 3Ar57r00      [13] 2603 	ld	a,(#_pry + 0)
   0CAB D6 80         [ 7] 2604 	sub	a, #0x80
   0CAD 30 58         [12] 2605 	jr	NC,00151$
                           2606 ;./my/extra_routines.h:8: for (gpit = 0; gpit < 5; gpit ++) {
   0CAF 21r06r00      [10] 2607 	ld	hl,#_gpit + 0
   0CB2 36 00         [10] 2608 	ld	(hl), #0x00
   0CB4                    2609 00161$:
                           2610 ;./my/extra_routines.h:9: _x = bombs_x [gpit]; _y = bombs_y [gpit]; _t = 24; map_set ();	
   0CB4 3Er46         [ 7] 2611 	ld	a,#<(_bombs_x)
   0CB6 21r06r00      [10] 2612 	ld	hl,#_gpit
   0CB9 86            [ 7] 2613 	add	a, (hl)
   0CBA 5F            [ 4] 2614 	ld	e,a
   0CBB 3Es01         [ 7] 2615 	ld	a,#>(_bombs_x)
   0CBD CE 00         [ 7] 2616 	adc	a, #0x00
   0CBF 57            [ 4] 2617 	ld	d,a
   0CC0 1A            [ 7] 2618 	ld	a,(de)
   0CC1 32r00r00      [13] 2619 	ld	(#__x + 0),a
   0CC4 3Er4B         [ 7] 2620 	ld	a,#<(_bombs_y)
   0CC6 21r06r00      [10] 2621 	ld	hl,#_gpit
   0CC9 86            [ 7] 2622 	add	a, (hl)
   0CCA 5F            [ 4] 2623 	ld	e,a
   0CCB 3Es01         [ 7] 2624 	ld	a,#>(_bombs_y)
   0CCD CE 00         [ 7] 2625 	adc	a, #0x00
   0CCF 57            [ 4] 2626 	ld	d,a
   0CD0 1A            [ 7] 2627 	ld	a,(de)
   0CD1 32r01r00      [13] 2628 	ld	(#__y + 0),a
   0CD4 21r03r00      [10] 2629 	ld	hl,#__t + 0
   0CD7 36 18         [10] 2630 	ld	(hl), #0x18
   0CD9 CDr00r00      [17] 2631 	call	_map_set
                           2632 ;./my/extra_routines.h:10: do_update_list_and_wait (); 
   0CDC CDr00r00      [17] 2633 	call	_do_update_list_and_wait
                           2634 ;./my/extra_routines.h:11: clear_update_list (); 
   0CDF CDr00r00      [17] 2635 	call	_clear_update_list
                           2636 ;./my/extra_routines.h:12: PSGSFXPlay (SFX_HITTER, 3); 
   0CE2 11r00r00      [10] 2637 	ld	de,#_s_14_hitter3_psg
   0CE5 3E 03         [ 7] 2638 	ld	a,#0x03
   0CE7 F5            [11] 2639 	push	af
   0CE8 33            [ 6] 2640 	inc	sp
   0CE9 D5            [11] 2641 	push	de
   0CEA CDr00r00      [17] 2642 	call	_PSGSFXPlay
   0CED F1            [10] 2643 	pop	af
   0CEE 33            [ 6] 2644 	inc	sp
                           2645 ;./my/extra_routines.h:13: delay (20); 
   0CEF 3E 14         [ 7] 2646 	ld	a,#0x14
   0CF1 F5            [11] 2647 	push	af
   0CF2 33            [ 6] 2648 	inc	sp
   0CF3 CDr00r00      [17] 2649 	call	_delay
   0CF6 33            [ 6] 2650 	inc	sp
                           2651 ;./my/extra_routines.h:8: for (gpit = 0; gpit < 5; gpit ++) {
   0CF7 21r06r00      [10] 2652 	ld	hl, #_gpit+0
   0CFA 34            [11] 2653 	inc	(hl)
   0CFB 3Ar06r00      [13] 2654 	ld	a,(#_gpit + 0)
   0CFE D6 05         [ 7] 2655 	sub	a, #0x05
   0D00 38 B2         [12] 2656 	jr	C,00161$
                           2657 ;./my/extra_routines.h:16: bombs_set = 1;
   0D02 21r90r02      [10] 2658 	ld	hl,#_bombs_set + 0
   0D05 36 01         [10] 2659 	ld	(hl), #0x01
   0D07                    2660 00151$:
                           2661 ;./mainloop/cheat.h:5: if ((pad0 & (PAD_B|PAD_SELECT|PAD_UP)) == (PAD_B|PAD_SELECT|PAD_UP)) break;
   0D07 3Ar04r00      [13] 2662 	ld	a,(#_pad0 + 0)
   0D0A E6 31         [ 7] 2663 	and	a, #0x31
   0D0C D6 31         [ 7] 2664 	sub	a, #0x31
   0D0E 28 1F         [12] 2665 	jr	Z,00160$
   0D10 CDr00r00      [17] 2666 	call	_SG_queryPauseRequested
   0D13 CB 45         [ 8] 2667 	bit	0,l
   0D15 CAr6Er0A      [10] 2668 	jp	Z,00159$
                           2669 ;./mainloop/pause.h:6: HW_resetPauseRequest ();
   0D18 CDr00r00      [17] 2670 	call	_SG_resetPauseRequest
                           2671 ;./mainloop/pause.h:7: paused ^= 1;
   0D1B 3ArC2r01      [13] 2672 	ld	a,(#_paused + 0)
   0D1E EE 01         [ 7] 2673 	xor	a, #0x01
   0D20 32rC2r01      [13] 2674 	ld	(#_paused + 0),a
                           2675 ;./mainloop/pause.h:8: music_pause (paused);
   0D23 3ArC2r01      [13] 2676 	ld	a,(_paused)
   0D26 F5            [11] 2677 	push	af
   0D27 33            [ 6] 2678 	inc	sp
   0D28 CDr00r00      [17] 2679 	call	_music_pause
   0D2B 33            [ 6] 2680 	inc	sp
   0D2C C3r6Er0A      [10] 2681 	jp	00159$
   0D2F                    2682 00160$:
                           2683 ;./mainloop.h:529: PSGStop ();
   0D2F CDr00r00      [17] 2684 	call	_PSGStop
                           2685 ;./mainloop.h:530: PSGSFXStop ();
   0D32 CDr00r00      [17] 2686 	call	_PSGSFXStop
                           2687 ;./mainloop.h:531: HW_displayOff ();
   0D35 21 40 01      [10] 2688 	ld	hl,#0x0140
   0D38 E5            [11] 2689 	push	hl
   0D39 CDr00r00      [17] 2690 	call	_SG_VDPturnOffFeature
   0D3C F1            [10] 2691 	pop	af
                           2692 ;./mainloop.h:532: HW_initSprites ();
   0D3D CDr00r00      [17] 2693 	call	_SG_initSprites
                           2694 ;./mainloop.h:533: HW_copySpritestoSAT ();	
   0D40 C3r00r00      [10] 2695 	jp  _SG_copySpritestoSAT
                           2696 ;./game.c:143: void main(void) {
                           2697 ;	---------------------------------
                           2698 ; Function main
                           2699 ; ---------------------------------
   0D43                    2700 _main::
                           2701 ;./game.c:144: HW_displayOff ();
   0D43 21 40 01      [10] 2702 	ld	hl,#0x0140
   0D46 E5            [11] 2703 	push	hl
   0D47 CDr00r00      [17] 2704 	call	_SG_VDPturnOffFeature
                           2705 ;./game.c:145: HW_setSpriteMode (SG_SPRITEMODE_LARGE);
   0D4A 26 01         [ 7] 2706 	ld	h,#0x01
   0D4C E3            [19] 2707 	ex	(sp),hl
   0D4D 33            [ 6] 2708 	inc	sp
   0D4E CDr00r00      [17] 2709 	call	_SG_setSpriteMode
   0D51 33            [ 6] 2710 	inc	sp
                           2711 ;./game.c:146: HW_setUpdateList (update_list);
   0D52 21r99r00      [10] 2712 	ld	hl,#_update_list
   0D55 E5            [11] 2713 	push	hl
   0D56 CDr00r00      [17] 2714 	call	_SG_setUpdateList
   0D59 F1            [10] 2715 	pop	af
                           2716 ;./game.c:147: first_game = 1;
   0D5A 21rBBr01      [10] 2717 	ld	hl,#_first_game + 0
   0D5D 36 01         [10] 2718 	ld	(hl), #0x01
                           2719 ;./game.c:152: ntsc = 1;
   0D5F 21r96r00      [10] 2720 	ld	hl,#_ntsc + 0
   0D62 36 01         [10] 2721 	ld	(hl), #0x01
                           2722 ;./game.c:156: unpack_bg_patterns (tsFONT_patterns_c, tsFONT_colours_c, 0, 7);
   0D64 11r00r00      [10] 2723 	ld	de,#_tsFONT_patterns_c
   0D67 3E 07         [ 7] 2724 	ld	a,#0x07
   0D69 F5            [11] 2725 	push	af
   0D6A 33            [ 6] 2726 	inc	sp
   0D6B 21 00 00      [10] 2727 	ld	hl,#0x0000
   0D6E E5            [11] 2728 	push	hl
   0D6F 21r00r00      [10] 2729 	ld	hl,#_tsFONT_colours_c
   0D72 E5            [11] 2730 	push	hl
   0D73 D5            [11] 2731 	push	de
   0D74 CDr00r00      [17] 2732 	call	_unpack_bg_patterns
   0D77 21 07 00      [10] 2733 	ld	hl,#7
   0D7A 39            [11] 2734 	add	hl,sp
   0D7B F9            [ 6] 2735 	ld	sp,hl
                           2736 ;./game.c:158: credits ();
   0D7C CDrDFr04      [17] 2737 	call	_credits
                           2738 ;./game.c:161: unpack_bg_patterns (tsALL_patterns_c, tsALL_colours_c, 64*8, 7);
   0D7F 11r00r00      [10] 2739 	ld	de,#_tsALL_patterns_c
   0D82 3E 07         [ 7] 2740 	ld	a,#0x07
   0D84 F5            [11] 2741 	push	af
   0D85 33            [ 6] 2742 	inc	sp
   0D86 21 00 02      [10] 2743 	ld	hl,#0x0200
   0D89 E5            [11] 2744 	push	hl
   0D8A 21r00r00      [10] 2745 	ld	hl,#_tsALL_colours_c
   0D8D E5            [11] 2746 	push	hl
   0D8E D5            [11] 2747 	push	de
   0D8F CDr00r00      [17] 2748 	call	_unpack_bg_patterns
   0D92 21 07 00      [10] 2749 	ld	hl,#7
   0D95 39            [11] 2750 	add	hl,sp
   0D96 F9            [ 6] 2751 	ld	sp,hl
                           2752 ;./game.c:162: aPLib_depack_VRAM (SGT_BASE, ssALL_patterns_c);
   0D97 21r00r00      [10] 2753 	ld	hl,#_ssALL_patterns_c
   0D9A E5            [11] 2754 	push	hl
   0D9B 21 00 38      [10] 2755 	ld	hl,#0x3800
   0D9E E5            [11] 2756 	push	hl
   0D9F CDr00r00      [17] 2757 	call	_aPLib_depack_VRAM
   0DA2 F1            [10] 2758 	pop	af
   0DA3 F1            [10] 2759 	pop	af
                           2760 ;./game.c:164: while (1) {	
   0DA4                    2761 00108$:
                           2762 ;./game.c:165: title ();
   0DA4 CDrCBr02      [17] 2763 	call	_title
                           2764 ;./game.c:168: plife = PLAYER_LIFE;
   0DA7 21r77r00      [10] 2765 	ld	hl,#_plife + 0
   0DAA 36 0F         [10] 2766 	ld	(hl), #0x0F
                           2767 ;./game.c:173: game_init (); 
   0DAC CDrBDr06      [17] 2768 	call	_game_init
                           2769 ;./game.c:174: game_loop ();
   0DAF CDr2Ar0A      [17] 2770 	call	_game_loop
                           2771 ;./game.c:176: if (game_over) {
   0DB2 3ArC4r01      [13] 2772 	ld	a,(#_game_over + 0)
   0DB5 B7            [ 4] 2773 	or	a, a
   0DB6 28 0F         [12] 2774 	jr	Z,00102$
                           2775 ;./game.c:177: pres (scr_game_over, MUSIC_GOVER);
   0DB8 21r00r00      [10] 2776 	ld	hl,#_m_n_gover_psg
   0DBB E5            [11] 2777 	push	hl
   0DBC 21r93r03      [10] 2778 	ld	hl,#_scr_game_over
   0DBF E5            [11] 2779 	push	hl
   0DC0 CDr98r02      [17] 2780 	call	_pres
   0DC3 F1            [10] 2781 	pop	af
   0DC4 F1            [10] 2782 	pop	af
                           2783 ;./game.c:178: break;
   0DC5 18 0D         [12] 2784 	jr	00106$
   0DC7                    2785 00102$:
                           2786 ;./game.c:182: pres (scr_the_end, MUSIC_GOVER);
   0DC7 21r00r00      [10] 2787 	ld	hl,#_m_n_gover_psg
   0DCA E5            [11] 2788 	push	hl
   0DCB 21r2Fr04      [10] 2789 	ld	hl,#_scr_the_end
   0DCE E5            [11] 2790 	push	hl
   0DCF CDr98r02      [17] 2791 	call	_pres
   0DD2 F1            [10] 2792 	pop	af
   0DD3 F1            [10] 2793 	pop	af
                           2794 ;./game.c:183: break;
   0DD4                    2795 00106$:
                           2796 ;./game.c:188: first_game = 0;
   0DD4 21rBBr01      [10] 2797 	ld	hl,#_first_game + 0
   0DD7 36 00         [10] 2798 	ld	(hl), #0x00
   0DD9 18 C9         [12] 2799 	jr	00108$
                           2800 	.area _CODE
                           2801 	.area _INITIALIZER
                           2802 	.area _CABS (ABS)
