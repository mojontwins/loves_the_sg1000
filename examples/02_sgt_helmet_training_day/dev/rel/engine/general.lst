                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.2 #9293 (MINGW32)
                              4 ; This file was generated Fri Sep 13 13:00:26 2019
                              5 ;--------------------------------------------------------
                              6 	.module general
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _do_update_list_and_wait
                             13 	.globl _update_cycle
                             14 	.globl _distance
                             15 	.globl _pad_read
                             16 	.globl _add_sign
                             17 	.globl _collide
                             18 	.globl _collide_in
                             19 	.globl _cm_two_points
                             20 	.globl _clear_update_list
                             21 	.globl _SG_doUpdateList
                             22 	.globl _SG_copySpritestoSAT
                             23 	.globl _SG_getKeysStatus
                             24 	.globl _SG_initSprites
                             25 	.globl _SG_waitForVBlank
                             26 ;--------------------------------------------------------
                             27 ; special function registers
                             28 ;--------------------------------------------------------
                     00BF    29 _VDPControlPort	=	0x00bf
                     00BF    30 _VDPStatusPort	=	0x00bf
                     00BE    31 _VDPDataPort	=	0x00be
                     007E    32 _VDPVCounterPort	=	0x007e
                     007F    33 _VDPHCounterPort	=	0x007f
                     00DC    34 _IOPortL	=	0x00dc
                     00DD    35 _IOPortH	=	0x00dd
                             36 ;--------------------------------------------------------
                             37 ; ram data
                             38 ;--------------------------------------------------------
                             39 	.area _DATA
                             40 ;--------------------------------------------------------
                             41 ; ram data
                             42 ;--------------------------------------------------------
                             43 	.area _INITIALIZED
                             44 ;--------------------------------------------------------
                             45 ; absolute external ram data
                             46 ;--------------------------------------------------------
                             47 	.area _DABS (ABS)
                             48 ;--------------------------------------------------------
                             49 ; global & static initialisations
                             50 ;--------------------------------------------------------
                             51 	.area _HOME
                             52 	.area _GSINIT
                             53 	.area _GSFINAL
                             54 	.area _GSINIT
                             55 ;--------------------------------------------------------
                             56 ; Home
                             57 ;--------------------------------------------------------
                             58 	.area _HOME
                             59 	.area _HOME
                             60 ;--------------------------------------------------------
                             61 ; code
                             62 ;--------------------------------------------------------
                             63 	.area _CODE
                             64 ;./engine/general.c:28: void cm_two_points (void) {
                             65 ;	---------------------------------
                             66 ; Function cm_two_points
                             67 ; ---------------------------------
   0000                      68 _cm_two_points::
                             69 ;./engine/general.c:30: if (cy1 > 12 || cy2 > 12) { at1 = at2 = 0; return; }
   0000 3E 0C         [ 7]   70 	ld	a,#0x0C
   0002 FD 21r00r00   [14]   71 	ld	iy,#_cy1
   0006 FD 96 00      [19]   72 	sub	a, 0 (iy)
   0009 38 0B         [12]   73 	jr	C,00101$
   000B 3E 0C         [ 7]   74 	ld	a,#0x0C
   000D FD 21r00r00   [14]   75 	ld	iy,#_cy2
   0011 FD 96 00      [19]   76 	sub	a, 0 (iy)
   0014 30 0B         [12]   77 	jr	NC,00102$
   0016                      78 00101$:
   0016 21r00r00      [10]   79 	ld	hl,#_at2 + 0
   0019 36 00         [10]   80 	ld	(hl), #0x00
   001B 21r00r00      [10]   81 	ld	hl,#_at1 + 0
   001E 36 00         [10]   82 	ld	(hl), #0x00
   0020 C9            [10]   83 	ret
   0021                      84 00102$:
                             85 ;./engine/general.c:31: at1 = ATTR (cx1, cy1 ? cy1 - 1 : 0);
   0021 01r00r00      [10]   86 	ld	bc,#_map_buff+0
   0024 3Ar00r00      [13]   87 	ld	a,(#_cy1 + 0)
   0027 B7            [ 4]   88 	or	a, a
   0028 28 0C         [12]   89 	jr	Z,00106$
   002A FD 21r00r00   [14]   90 	ld	iy,#_cy1
   002E FD 6E 00      [19]   91 	ld	l,0 (iy)
   0031 26 00         [ 7]   92 	ld	h,#0x00
   0033 2B            [ 6]   93 	dec	hl
   0034 18 03         [12]   94 	jr	00107$
   0036                      95 00106$:
   0036 21 00 00      [10]   96 	ld	hl,#0x0000
   0039                      97 00107$:
   0039 29            [11]   98 	add	hl, hl
   003A 29            [11]   99 	add	hl, hl
   003B 29            [11]  100 	add	hl, hl
   003C 29            [11]  101 	add	hl, hl
   003D 55            [ 4]  102 	ld	d,l
   003E 5C            [ 4]  103 	ld	e,h
   003F 3Ar00r00      [13]  104 	ld	a,(#_cx1 + 0)
   0042 26 00         [ 7]  105 	ld	h, #0x00
   0044 B2            [ 4]  106 	or	a, d
   0045 6F            [ 4]  107 	ld	l,a
   0046 7C            [ 4]  108 	ld	a,h
   0047 B3            [ 4]  109 	or	a, e
   0048 67            [ 4]  110 	ld	h,a
   0049 09            [11]  111 	add	hl,bc
   004A 56            [ 7]  112 	ld	d,(hl)
   004B 3Ar00r00      [13]  113 	ld	a,(#_c_behs + 0)
   004E 82            [ 4]  114 	add	a, d
   004F 5F            [ 4]  115 	ld	e,a
   0050 3Ar01r00      [13]  116 	ld	a,(#_c_behs + 1)
   0053 CE 00         [ 7]  117 	adc	a, #0x00
   0055 57            [ 4]  118 	ld	d,a
   0056 1A            [ 7]  119 	ld	a,(de)
   0057 32r00r00      [13]  120 	ld	(#_at1 + 0),a
                            121 ;./engine/general.c:32: at2 = ATTR (cx2, cy2 ? cy2 - 1 : 0);
   005A 3Ar00r00      [13]  122 	ld	a,(#_cy2 + 0)
   005D B7            [ 4]  123 	or	a, a
   005E 28 0C         [12]  124 	jr	Z,00108$
   0060 FD 21r00r00   [14]  125 	ld	iy,#_cy2
   0064 FD 6E 00      [19]  126 	ld	l,0 (iy)
   0067 26 00         [ 7]  127 	ld	h,#0x00
   0069 2B            [ 6]  128 	dec	hl
   006A 18 03         [12]  129 	jr	00109$
   006C                     130 00108$:
   006C 21 00 00      [10]  131 	ld	hl,#0x0000
   006F                     132 00109$:
   006F 29            [11]  133 	add	hl, hl
   0070 29            [11]  134 	add	hl, hl
   0071 29            [11]  135 	add	hl, hl
   0072 29            [11]  136 	add	hl, hl
   0073 EB            [ 4]  137 	ex	de,hl
   0074 3Ar00r00      [13]  138 	ld	a,(#_cx2 + 0)
   0077 26 00         [ 7]  139 	ld	h, #0x00
   0079 B3            [ 4]  140 	or	a, e
   007A 6F            [ 4]  141 	ld	l,a
   007B 7C            [ 4]  142 	ld	a,h
   007C B2            [ 4]  143 	or	a, d
   007D 67            [ 4]  144 	ld	h,a
   007E 09            [11]  145 	add	hl,bc
   007F 5E            [ 7]  146 	ld	e,(hl)
   0080 2Ar00r00      [16]  147 	ld	hl,(_c_behs)
   0083 16 00         [ 7]  148 	ld	d,#0x00
   0085 19            [11]  149 	add	hl, de
   0086 7E            [ 7]  150 	ld	a,(hl)
   0087 32r00r00      [13]  151 	ld	(#_at2 + 0),a
   008A C9            [10]  152 	ret
                            153 ;./engine/general.c:47: unsigned char collide_in (unsigned char x0, unsigned char y0, unsigned char x1, unsigned char y1) {
                            154 ;	---------------------------------
                            155 ; Function collide_in
                            156 ; ---------------------------------
   008B                     157 _collide_in::
   008B DD E5         [15]  158 	push	ix
   008D DD 21 00 00   [14]  159 	ld	ix,#0
   0091 DD 39         [15]  160 	add	ix,sp
   0093 3B            [ 6]  161 	dec	sp
                            162 ;./engine/general.c:48: return (x0 >= x1 && x0 <= x1 + 15 && y0 >= y1 && y0 <= y1 + 15);	
   0094 DD 7E 04      [19]  163 	ld	a,4 (ix)
   0097 DD 96 06      [19]  164 	sub	a, 6 (ix)
   009A 38 3C         [12]  165 	jr	C,00103$
   009C DD 6E 06      [19]  166 	ld	l,6 (ix)
   009F 26 00         [ 7]  167 	ld	h,#0x00
   00A1 01 0F 00      [10]  168 	ld	bc,#0x000F
   00A4 09            [11]  169 	add	hl,bc
   00A5 DD 56 04      [19]  170 	ld	d,4 (ix)
   00A8 1E 00         [ 7]  171 	ld	e,#0x00
   00AA 7D            [ 4]  172 	ld	a,l
   00AB 92            [ 4]  173 	sub	a, d
   00AC 7C            [ 4]  174 	ld	a,h
   00AD 9B            [ 4]  175 	sbc	a, e
   00AE E2rB3r00      [10]  176 	jp	PO, 00122$
   00B1 EE 80         [ 7]  177 	xor	a, #0x80
   00B3                     178 00122$:
   00B3 FArD8r00      [10]  179 	jp	M,00103$
   00B6 DD 7E 05      [19]  180 	ld	a,5 (ix)
   00B9 DD 96 07      [19]  181 	sub	a, 7 (ix)
   00BC 38 1A         [12]  182 	jr	C,00103$
   00BE DD 6E 07      [19]  183 	ld	l,7 (ix)
   00C1 26 00         [ 7]  184 	ld	h,#0x00
   00C3 01 0F 00      [10]  185 	ld	bc,#0x000F
   00C6 09            [11]  186 	add	hl,bc
   00C7 DD 56 05      [19]  187 	ld	d,5 (ix)
   00CA 1E 00         [ 7]  188 	ld	e,#0x00
   00CC 7D            [ 4]  189 	ld	a,l
   00CD 92            [ 4]  190 	sub	a, d
   00CE 7C            [ 4]  191 	ld	a,h
   00CF 9B            [ 4]  192 	sbc	a, e
   00D0 E2rD5r00      [10]  193 	jp	PO, 00123$
   00D3 EE 80         [ 7]  194 	xor	a, #0x80
   00D5                     195 00123$:
   00D5 F2rDCr00      [10]  196 	jp	P,00104$
   00D8                     197 00103$:
   00D8 2E 00         [ 7]  198 	ld	l,#0x00
   00DA 18 02         [12]  199 	jr	00105$
   00DC                     200 00104$:
   00DC 2E 01         [ 7]  201 	ld	l,#0x01
   00DE                     202 00105$:
   00DE 33            [ 6]  203 	inc	sp
   00DF DD E1         [14]  204 	pop	ix
   00E1 C9            [10]  205 	ret
                            206 ;./engine/general.c:51: unsigned char collide (void) {
                            207 ;	---------------------------------
                            208 ; Function collide
                            209 ; ---------------------------------
   00E2                     210 _collide::
   00E2 DD E5         [15]  211 	push	ix
   00E4 DD 21 00 00   [14]  212 	ld	ix,#0
   00E8 DD 39         [15]  213 	add	ix,sp
   00EA 3B            [ 6]  214 	dec	sp
                            215 ;./engine/general.c:61: prx + 3 >= _en_x && 
   00EB 21r00r00      [10]  216 	ld	hl,#_prx + 0
   00EE 5E            [ 7]  217 	ld	e, (hl)
   00EF 16 00         [ 7]  218 	ld	d,#0x00
   00F1 4B            [ 4]  219 	ld	c, e
   00F2 42            [ 4]  220 	ld	b, d
   00F3 03            [ 6]  221 	inc	bc
   00F4 03            [ 6]  222 	inc	bc
   00F5 03            [ 6]  223 	inc	bc
   00F6 FD 21r00r00   [14]  224 	ld	iy,#__en_x
   00FA FD 6E 00      [19]  225 	ld	l,0 (iy)
   00FD 26 00         [ 7]  226 	ld	h,#0x00
   00FF 79            [ 4]  227 	ld	a,c
   0100 95            [ 4]  228 	sub	a, l
   0101 78            [ 4]  229 	ld	a,b
   0102 9C            [ 4]  230 	sbc	a, h
   0103 E2r08r01      [10]  231 	jp	PO, 00122$
   0106 EE 80         [ 7]  232 	xor	a, #0x80
   0108                     233 00122$:
   0108 FAr4Cr01      [10]  234 	jp	M,00103$
                            235 ;./engine/general.c:62: prx <= _en_x + 11 && 
   010B 01 0B 00      [10]  236 	ld	bc,#0x000B
   010E 09            [11]  237 	add	hl,bc
   010F 7D            [ 4]  238 	ld	a,l
   0110 93            [ 4]  239 	sub	a, e
   0111 7C            [ 4]  240 	ld	a,h
   0112 9A            [ 4]  241 	sbc	a, d
   0113 E2r18r01      [10]  242 	jp	PO, 00123$
   0116 EE 80         [ 7]  243 	xor	a, #0x80
   0118                     244 00123$:
   0118 FAr4Cr01      [10]  245 	jp	M,00103$
                            246 ;./engine/general.c:63: pry + 13 + ENEMS_COLLISION_VSTRETCH_FG >= _en_y &&
   011B 21r00r00      [10]  247 	ld	hl,#_pry + 0
   011E 5E            [ 7]  248 	ld	e, (hl)
   011F 16 00         [ 7]  249 	ld	d,#0x00
   0121 21 0D 00      [10]  250 	ld	hl,#0x000D
   0124 19            [11]  251 	add	hl,de
   0125 4D            [ 4]  252 	ld	c,l
   0126 44            [ 4]  253 	ld	b,h
   0127 FD 21r00r00   [14]  254 	ld	iy,#__en_y
   012B FD 6E 00      [19]  255 	ld	l,0 (iy)
   012E 26 00         [ 7]  256 	ld	h,#0x00
   0130 79            [ 4]  257 	ld	a,c
   0131 95            [ 4]  258 	sub	a, l
   0132 78            [ 4]  259 	ld	a,b
   0133 9C            [ 4]  260 	sbc	a, h
   0134 E2r39r01      [10]  261 	jp	PO, 00124$
   0137 EE 80         [ 7]  262 	xor	a, #0x80
   0139                     263 00124$:
   0139 FAr4Cr01      [10]  264 	jp	M,00103$
                            265 ;./engine/general.c:64: pry <= _en_y + 13 + PLAYER_COLLISION_VSTRETCH_FG
   013C 01 09 00      [10]  266 	ld	bc,#0x0009
   013F 09            [11]  267 	add	hl,bc
   0140 7D            [ 4]  268 	ld	a,l
   0141 93            [ 4]  269 	sub	a, e
   0142 7C            [ 4]  270 	ld	a,h
   0143 9A            [ 4]  271 	sbc	a, d
   0144 E2r49r01      [10]  272 	jp	PO, 00125$
   0147 EE 80         [ 7]  273 	xor	a, #0x80
   0149                     274 00125$:
   0149 F2r50r01      [10]  275 	jp	P,00104$
   014C                     276 00103$:
   014C 2E 00         [ 7]  277 	ld	l,#0x00
   014E 18 02         [12]  278 	jr	00105$
   0150                     279 00104$:
   0150 2E 01         [ 7]  280 	ld	l,#0x01
   0152                     281 00105$:
   0152 33            [ 6]  282 	inc	sp
   0153 DD E1         [14]  283 	pop	ix
   0155 C9            [10]  284 	ret
                            285 ;./engine/general.c:69: signed int add_sign (signed int sign, signed int value) {
                            286 ;	---------------------------------
                            287 ; Function add_sign
                            288 ; ---------------------------------
   0156                     289 _add_sign::
                            290 ;./engine/general.c:70: return sign == 0 ? 0 : sign < 0 ? -value : value;
   0156 21 03 00      [10]  291 	ld	hl, #2+1
   0159 39            [11]  292 	add	hl, sp
   015A 7E            [ 7]  293 	ld	a, (hl)
   015B 2B            [ 6]  294 	dec	hl
   015C B6            [ 7]  295 	or	a,(hl)
   015D 20 04         [12]  296 	jr	NZ,00103$
   015F 21 00 00      [10]  297 	ld	hl,#0x0000
   0162 C9            [10]  298 	ret
   0163                     299 00103$:
   0163 21 03 00      [10]  300 	ld	hl, #2+1
   0166 39            [11]  301 	add	hl, sp
   0167 CB 7E         [12]  302 	bit	7,(hl)
   0169 28 12         [12]  303 	jr	Z,00105$
   016B AF            [ 4]  304 	xor	a, a
   016C FD 21 04 00   [14]  305 	ld	iy,#4
   0170 FD 39         [15]  306 	add	iy,sp
   0172 FD 96 00      [19]  307 	sub	a, 0 (iy)
   0175 6F            [ 4]  308 	ld	l,a
   0176 3E 00         [ 7]  309 	ld	a, #0x00
   0178 FD 9E 01      [19]  310 	sbc	a, 1 (iy)
   017B 67            [ 4]  311 	ld	h,a
   017C C9            [10]  312 	ret
   017D                     313 00105$:
   017D 21 04 00      [10]  314 	ld	hl, #4
   0180 39            [11]  315 	add	hl, sp
   0181 7E            [ 7]  316 	ld	a, (hl)
   0182 23            [ 6]  317 	inc	hl
   0183 66            [ 7]  318 	ld	h, (hl)
   0184 6F            [ 4]  319 	ld	l, a
   0185 C9            [10]  320 	ret
                            321 ;./engine/general.c:91: void pad_read (void) {
                            322 ;	---------------------------------
                            323 ; Function pad_read
                            324 ; ---------------------------------
   0186                     325 _pad_read::
                            326 ;./engine/general.c:94: pad_this_frame = pad0;
   0186 3Ar00r00      [13]  327 	ld	a,(#_pad0 + 0)
   0189 32r00r00      [13]  328 	ld	(#_pad_this_frame + 0),a
                            329 ;./engine/general.c:95: pad0 = HW_getKeysStatus ();			// Read pads here.
   018C CDr00r00      [17]  330 	call	_SG_getKeysStatus
   018F FD 21r00r00   [14]  331 	ld	iy,#_pad0
   0193 FD 75 00      [19]  332 	ld	0 (iy),l
                            333 ;./engine/general.c:96: pad_this_frame = (pad_this_frame ^ pad0) & pad0;
   0196 3Ar00r00      [13]  334 	ld	a,(#_pad_this_frame + 0)
   0199 FD 21r00r00   [14]  335 	ld	iy,#_pad0
   019D FD AE 00      [19]  336 	xor	a, 0 (iy)
   01A0 FD 21r00r00   [14]  337 	ld	iy,#_pad0
   01A4 FD A6 00      [19]  338 	and	a, 0 (iy)
   01A7 32r00r00      [13]  339 	ld	(#_pad_this_frame + 0),a
   01AA C9            [10]  340 	ret
                            341 ;./engine/general.c:102: unsigned char distance (void) {
                            342 ;	---------------------------------
                            343 ; Function distance
                            344 ; ---------------------------------
   01AB                     345 _distance::
                            346 ;./engine/general.c:103: rda = DELTA (prx, rdx); // dx
   01AB 21r00r00      [10]  347 	ld	hl,#_rdx
   01AE 3Ar00r00      [13]  348 	ld	a,(#_prx + 0)
   01B1 96            [ 7]  349 	sub	a, (hl)
   01B2 30 09         [12]  350 	jr	NC,00103$
   01B4 21r00r00      [10]  351 	ld	hl,#_prx
   01B7 3Ar00r00      [13]  352 	ld	a,(#_rdx + 0)
   01BA 96            [ 7]  353 	sub	a, (hl)
   01BB 18 07         [12]  354 	jr	00104$
   01BD                     355 00103$:
   01BD 21r00r00      [10]  356 	ld	hl,#_rdx
   01C0 3Ar00r00      [13]  357 	ld	a,(#_prx + 0)
   01C3 96            [ 7]  358 	sub	a, (hl)
   01C4                     359 00104$:
   01C4 32r00r00      [13]  360 	ld	(#_rda + 0),a
                            361 ;./engine/general.c:104: rdb = DELTA (pry, rdy); // dy
   01C7 21r00r00      [10]  362 	ld	hl,#_rdy
   01CA 3Ar00r00      [13]  363 	ld	a,(#_pry + 0)
   01CD 96            [ 7]  364 	sub	a, (hl)
   01CE 30 09         [12]  365 	jr	NC,00105$
   01D0 21r00r00      [10]  366 	ld	hl,#_pry
   01D3 3Ar00r00      [13]  367 	ld	a,(#_rdy + 0)
   01D6 96            [ 7]  368 	sub	a, (hl)
   01D7 18 07         [12]  369 	jr	00106$
   01D9                     370 00105$:
   01D9 21r00r00      [10]  371 	ld	hl,#_rdy
   01DC 3Ar00r00      [13]  372 	ld	a,(#_pry + 0)
   01DF 96            [ 7]  373 	sub	a, (hl)
   01E0                     374 00106$:
   01E0 32r00r00      [13]  375 	ld	(#_rdb + 0),a
                            376 ;./engine/general.c:105: rdc = MIN (rda, rdb);
   01E3 21r00r00      [10]  377 	ld	hl,#_rdb
   01E6 3Ar00r00      [13]  378 	ld	a,(#_rda + 0)
   01E9 BE            [ 7]  379 	cp	a,(hl)
   01EA 38 03         [12]  380 	jr	C,00108$
   01EC 3Ar00r00      [13]  381 	ld	a,(#_rdb + 0)
   01EF                     382 00108$:
   01EF 32r00r00      [13]  383 	ld	(#_rdc + 0),a
                            384 ;./engine/general.c:106: return (rda + rdb - (rdc >> 1) - (rdc >> 2) + (rdc >> 4));
   01F2 21r00r00      [10]  385 	ld	hl,#_rdb
   01F5 3Ar00r00      [13]  386 	ld	a,(#_rda + 0)
   01F8 86            [ 7]  387 	add	a, (hl)
   01F9 57            [ 4]  388 	ld	d,a
   01FA FD 21r00r00   [14]  389 	ld	iy,#_rdc
   01FE FD 5E 00      [19]  390 	ld	e,0 (iy)
   0201 CB 3B         [ 8]  391 	srl	e
   0203 7A            [ 4]  392 	ld	a,d
   0204 93            [ 4]  393 	sub	a, e
   0205 57            [ 4]  394 	ld	d,a
   0206 FD 21r00r00   [14]  395 	ld	iy,#_rdc
   020A FD 5E 00      [19]  396 	ld	e,0 (iy)
   020D CB 3B         [ 8]  397 	srl	e
   020F CB 3B         [ 8]  398 	srl	e
   0211 7A            [ 4]  399 	ld	a,d
   0212 93            [ 4]  400 	sub	a, e
   0213 4F            [ 4]  401 	ld	c,a
   0214 3Ar00r00      [13]  402 	ld	a,(#_rdc + 0)
   0217 07            [ 4]  403 	rlca
   0218 07            [ 4]  404 	rlca
   0219 07            [ 4]  405 	rlca
   021A 07            [ 4]  406 	rlca
   021B E6 0F         [ 7]  407 	and	a,#0x0F
   021D 6F            [ 4]  408 	ld	l,a
   021E 09            [11]  409 	add	hl, bc
   021F C9            [10]  410 	ret
                            411 ;./engine/general.c:134: void update_cycle (void) {
                            412 ;	---------------------------------
                            413 ; Function update_cycle
                            414 ; ---------------------------------
   0220                     415 _update_cycle::
                            416 ;./engine/general.c:136: HW_waitForVBlank ();
   0220 CDr00r00      [17]  417 	call	_SG_waitForVBlank
                            418 ;./engine/general.c:137: HW_copySpritestoSAT ();
   0223 CDr00r00      [17]  419 	call	_SG_copySpritestoSAT
                            420 ;./engine/general.c:138: update_list [update_index] = 0xff;
   0226 11r00r00      [10]  421 	ld	de,#_update_list+0
   0229 2Ar00r00      [16]  422 	ld	hl,(_update_index)
   022C 26 00         [ 7]  423 	ld	h,#0x00
   022E 19            [11]  424 	add	hl,de
   022F 36 FF         [10]  425 	ld	(hl),#0xFF
                            426 ;./engine/general.c:139: HW_doUpdateList ();
   0231 CDr00r00      [17]  427 	call	_SG_doUpdateList
                            428 ;./engine/general.c:140: HW_initSprites ();
   0234 CDr00r00      [17]  429 	call	_SG_initSprites
                            430 ;./engine/general.c:141: clear_update_list ();
   0237 C3r00r00      [10]  431 	jp  _clear_update_list
                            432 ;./engine/general.c:144: void do_update_list_and_wait (void) {
                            433 ;	---------------------------------
                            434 ; Function do_update_list_and_wait
                            435 ; ---------------------------------
   023A                     436 _do_update_list_and_wait::
                            437 ;./engine/general.c:145: update_list [update_index] = 0xff;
   023A 11r00r00      [10]  438 	ld	de,#_update_list+0
   023D 2Ar00r00      [16]  439 	ld	hl,(_update_index)
   0240 26 00         [ 7]  440 	ld	h,#0x00
   0242 19            [11]  441 	add	hl,de
   0243 36 FF         [10]  442 	ld	(hl),#0xFF
                            443 ;./engine/general.c:146: HW_waitForVBlank ();	
   0245 CDr00r00      [17]  444 	call	_SG_waitForVBlank
                            445 ;./engine/general.c:147: HW_doUpdateList ();
   0248 C3r00r00      [10]  446 	jp  _SG_doUpdateList
                            447 	.area _CODE
                            448 	.area _INITIALIZER
                            449 	.area _CABS (ABS)
