                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.2 #9293 (MINGW32)
                              4 ; This file was generated Fri Sep 13 13:07:35 2019
                              5 ;--------------------------------------------------------
                              6 	.module game
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _main
                             13 	.globl _game_loop
                             14 	.globl _prepare_scr
                             15 	.globl _game_init
                             16 	.globl _player_frame_selector
                             17 	.globl _flickscreen_do_vertical
                             18 	.globl _flickscreen_do_horizontal
                             19 	.globl _credits
                             20 	.globl _game_ending
                             21 	.globl _scr_sclear
                             22 	.globl _scr_game_over
                             23 	.globl _title
                             24 	.globl _logo
                             25 	.globl _snip
                             26 	.globl _pres
                             27 	.globl _bat_out
                             28 	.globl _bat_in
                             29 	.globl _hud_update
                             30 	.globl _draw_game_frame
                             31 	.globl _enems_move
                             32 	.globl _enems_load
                             33 	.globl _enems_persistent_update
                             34 	.globl _enems_persistent_load
                             35 	.globl _player_move
                             36 	.globl _player_kill
                             37 	.globl _player_to_pixels
                             38 	.globl _player_render
                             39 	.globl _player_init
                             40 	.globl _chac_chacs_do
                             41 	.globl _propellers_do
                             42 	.globl _hotspots_create
                             43 	.globl _hotspots_paint
                             44 	.globl _hotspots_load
                             45 	.globl _update_cycle
                             46 	.globl _pad_read
                             47 	.globl _collide_in
                             48 	.globl _pr_str
                             49 	.globl _draw_scr
                             50 	.globl _p_t
                             51 	.globl _cls
                             52 	.globl _clear_update_list
                             53 	.globl _unrle
                             54 	.globl _unpack_bg_patterns
                             55 	.globl _delay
                             56 	.globl _aPLib_depack_VRAM
                             57 	.globl _PSGSFXStop
                             58 	.globl _PSGSFXPlay
                             59 	.globl _PSGStop
                             60 	.globl _PSGPlay
                             61 	.globl _music_pause
                             62 	.globl _SG_doUpdateList
                             63 	.globl _SG_setUpdateList
                             64 	.globl _SG_copySpritestoSAT
                             65 	.globl _SG_resetPauseRequest
                             66 	.globl _SG_queryPauseRequested
                             67 	.globl _SG_getKeysStatus
                             68 	.globl _SG_getStp
                             69 	.globl _SG_addMetaSprite1x1
                             70 	.globl _SG_initSprites
                             71 	.globl _SG_setTileatXY
                             72 	.globl _SG_waitForVBlank
                             73 	.globl _SG_setSpriteMode
                             74 	.globl _SG_VDPturnOffFeature
                             75 	.globl _SG_VDPturnOnFeature
                             76 	.globl _level_done
                             77 	.globl ___player_rx
                             78 	.globl ___player_ax
                             79 	.globl ___player_vx_max
                             80 	.globl ___player_vy_jetpac_max
                             81 	.globl ___player_ay_jetpac
                             82 	.globl ___player_g
                             83 	.globl ___player_vy_falling_max
                             84 	.globl _ol_prx
                             85 	.globl _game_puri
                             86 	.globl _shaker_ct
                             87 	.globl _chac_chacs_queue_write
                             88 	.globl _chac_chacs_queue_read
                             89 	.globl _chac_chacs_queue
                             90 	.globl _chac_chacs_ct
                             91 	.globl _chac_chacs_idlewait
                             92 	.globl _chac_chacs_state
                             93 	.globl _chac_chacs_yx
                             94 	.globl _max_chac_chacs
                             95 	.globl _propellers_on
                             96 	.globl _prp_yx
                             97 	.globl _prp_idx
                             98 	.globl _en_spr_id
                             99 	.globl _en_spr_x_mod
                            100 	.globl _en_ct
                            101 	.globl _en_status
                            102 	.globl _en_life
                            103 	.globl _en_cttouched
                            104 	.globl _en_flags
                            105 	.globl _en_state
                            106 	.globl _en_facing
                            107 	.globl _en_s
                            108 	.globl _en_my
                            109 	.globl _en_mx
                            110 	.globl _en_y2
                            111 	.globl _en_x2
                            112 	.globl _en_y1
                            113 	.globl _en_x1
                            114 	.globl _en_y
                            115 	.globl _en_x
                            116 	.globl _en_t
                            117 	.globl _flags
                            118 	.globl _hact
                            119 	.globl _pctfr
                            120 	.globl _oam_index_player
                            121 	.globl _okilled
                            122 	.globl _oammo
                            123 	.globl _oobjs
                            124 	.globl _okeys
                            125 	.globl _olife
                            126 	.globl _flick_override
                            127 	.globl _level_reset
                            128 	.globl _warp_to_level
                            129 	.globl _game_over
                            130 	.globl _win_level
                            131 	.globl _paused
                            132 	.globl _frame_counter
                            133 	.globl _half_life
                            134 	.globl _on_pant
                            135 	.globl _n_pant
                            136 	.globl _c_max_enems
                            137 	.globl _level
                            138 	.globl _first_game
                            139 	.globl _map_buff
                            140 	.globl _fade_delay
                            141 	.globl _fader
                            142 	.globl _update_list
                            143 	.globl _update_index
                            144 	.globl _ntsc_frame
                            145 	.globl _ntsc
                            146 	.globl _c_max_bolts
                            147 	.globl _c_hotspots
                            148 	.globl _c_enems
                            149 	.globl _c_locks
                            150 	.globl _c_decos
                            151 	.globl _c_map
                            152 	.globl _spr_enems
                            153 	.globl _c_behs
                            154 	.globl _c_ts_tmaps
                            155 	.globl _c_map_size
                            156 	.globl _c_map_h
                            157 	.globl _c_map_w
                            158 	.globl _ft
                            159 	.globl _do_process_breakable
                            160 	.globl _hrt
                            161 	.globl _hry
                            162 	.globl _hrx
                            163 	.globl _pfiring
                            164 	.globl _pkilled
                            165 	.globl _pammo
                            166 	.globl _pobjs
                            167 	.globl _plife
                            168 	.globl _pcontinues
                            169 	.globl _pnotsafe
                            170 	.globl _pice
                            171 	.globl _pkill
                            172 	.globl _pry_old
                            173 	.globl _prx_old
                            174 	.globl _pfloating
                            175 	.globl _hith
                            176 	.globl _hitv
                            177 	.globl _pgtmy
                            178 	.globl _pgtmx
                            179 	.globl _phit
                            180 	.globl _pbouncing
                            181 	.globl _pflickering
                            182 	.globl _oppossee
                            183 	.globl _ppossee
                            184 	.globl _pgotten
                            185 	.globl _pctj
                            186 	.globl _pjb
                            187 	.globl _pj
                            188 	.globl _b_button
                            189 	.globl _a_button
                            190 	.globl _psprid
                            191 	.globl _pfr
                            192 	.globl _pfacing
                            193 	.globl _pcy
                            194 	.globl _pcx
                            195 	.globl _pry
                            196 	.globl _prx
                            197 	.globl _pvy
                            198 	.globl _pvx
                            199 	.globl _py
                            200 	.globl _px
                            201 	.globl _vertical_engine_type
                            202 	.globl _en_sg_2
                            203 	.globl _en_sg_1
                            204 	.globl __enf_vy
                            205 	.globl __enf_vx
                            206 	.globl __enf_y
                            207 	.globl __enf_x
                            208 	.globl __en_state
                            209 	.globl __en_facing
                            210 	.globl __en_ct
                            211 	.globl __en_my
                            212 	.globl __en_mx
                            213 	.globl __en_y2
                            214 	.globl __en_x2
                            215 	.globl __en_y1
                            216 	.globl __en_x1
                            217 	.globl __en_y
                            218 	.globl __en_x
                            219 	.globl __en_s
                            220 	.globl __en_t
                            221 	.globl _en_rmx
                            222 	.globl _pregotten
                            223 	.globl _en_is_alive
                            224 	.globl _touched
                            225 	.globl _en_spr
                            226 	.globl _en_colly
                            227 	.globl _en_collx
                            228 	.globl _en_fr
                            229 	.globl _en_offs
                            230 	.globl _en_initial
                            231 	.globl _cur_stp
                            232 	.globl _caux
                            233 	.globl _cy2
                            234 	.globl _cy1
                            235 	.globl _cx2
                            236 	.globl _cx1
                            237 	.globl _at2
                            238 	.globl _at1
                            239 	.globl _ticker
                            240 	.globl _rdct
                            241 	.globl _rds
                            242 	.globl _rdm
                            243 	.globl _rdd
                            244 	.globl _rdc
                            245 	.globl _rdb
                            246 	.globl _rda
                            247 	.globl _rdit
                            248 	.globl _rdt
                            249 	.globl _rdy
                            250 	.globl _rdx
                            251 	.globl _gp_addr
                            252 	.globl _gp_ram
                            253 	.globl _gp_tmap
                            254 	.globl _gp_gen
                            255 	.globl _rds16
                            256 	.globl _gpjt
                            257 	.globl _gpit
                            258 	.globl _pad_this_frame
                            259 	.globl _pad0
                            260 	.globl __t
                            261 	.globl __n
                            262 	.globl __y
                            263 	.globl __x
                            264 	.globl _l_music
                            265 	.globl _l_hotspots
                            266 	.globl _l_enems
                            267 	.globl _l_decos
                            268 	.globl _l_map
                            269 	.globl _l_spr_enems
                            270 	.globl _l_behs
                            271 	.globl _l_ts_tmaps
                            272 	.globl _l_player_max_enems
                            273 	.globl _l_player_max_objects
                            274 	.globl _l_map_h
                            275 	.globl _l_map_w
                            276 	.globl _l_ini_y
                            277 	.globl _l_ini_x
                            278 	.globl _l_scr_ini
                            279 	.globl _spr_hs
                            280 	.globl _spr_enems1
                            281 	.globl _spr_enems0
                            282 	.globl _spr_player
                            283 	.globl _behs3
                            284 	.globl _behs2
                            285 	.globl _behs1
                            286 	.globl _behs0
                            287 	.globl _jitter
                            288 	.globl _bits
                            289 	.globl _chac_chacs_t3
                            290 	.globl _chac_chacs_t2
                            291 	.globl _chac_chacs_t1
                            292 	.globl _chac_chacs_times
                            293 	.globl _chac_chacs_initial_times
                            294 ;--------------------------------------------------------
                            295 ; special function registers
                            296 ;--------------------------------------------------------
                     00BF   297 _VDPControlPort	=	0x00bf
                     00BF   298 _VDPStatusPort	=	0x00bf
                     00BE   299 _VDPDataPort	=	0x00be
                     007E   300 _VDPVCounterPort	=	0x007e
                     007F   301 _VDPHCounterPort	=	0x007f
                     00DC   302 _IOPortL	=	0x00dc
                     00DD   303 _IOPortH	=	0x00dd
                            304 ;--------------------------------------------------------
                            305 ; ram data
                            306 ;--------------------------------------------------------
                            307 	.area _DATA
   0000                     308 __x::
   0000                     309 	.ds 1
   0001                     310 __y::
   0001                     311 	.ds 1
   0002                     312 __n::
   0002                     313 	.ds 1
   0003                     314 __t::
   0003                     315 	.ds 1
   0004                     316 _pad0::
   0004                     317 	.ds 1
   0005                     318 _pad_this_frame::
   0005                     319 	.ds 1
   0006                     320 _gpit::
   0006                     321 	.ds 1
   0007                     322 _gpjt::
   0007                     323 	.ds 1
   0008                     324 _rds16::
   0008                     325 	.ds 2
   000A                     326 _gp_gen::
   000A                     327 	.ds 2
   000C                     328 _gp_tmap::
   000C                     329 	.ds 2
   000E                     330 _gp_ram::
   000E                     331 	.ds 2
   0010                     332 _gp_addr::
   0010                     333 	.ds 2
   0012                     334 _rdx::
   0012                     335 	.ds 1
   0013                     336 _rdy::
   0013                     337 	.ds 1
   0014                     338 _rdt::
   0014                     339 	.ds 1
   0015                     340 _rdit::
   0015                     341 	.ds 1
   0016                     342 _rda::
   0016                     343 	.ds 1
   0017                     344 _rdb::
   0017                     345 	.ds 1
   0018                     346 _rdc::
   0018                     347 	.ds 1
   0019                     348 _rdd::
   0019                     349 	.ds 1
   001A                     350 _rdm::
   001A                     351 	.ds 1
   001B                     352 _rds::
   001B                     353 	.ds 1
   001C                     354 _rdct::
   001C                     355 	.ds 1
   001D                     356 _ticker::
   001D                     357 	.ds 1
   001E                     358 _at1::
   001E                     359 	.ds 1
   001F                     360 _at2::
   001F                     361 	.ds 1
   0020                     362 _cx1::
   0020                     363 	.ds 1
   0021                     364 _cx2::
   0021                     365 	.ds 1
   0022                     366 _cy1::
   0022                     367 	.ds 1
   0023                     368 _cy2::
   0023                     369 	.ds 1
   0024                     370 _caux::
   0024                     371 	.ds 1
   0025                     372 _cur_stp::
   0025                     373 	.ds 2
   0027                     374 _en_initial::
   0027                     375 	.ds 1
   0028                     376 _en_offs::
   0028                     377 	.ds 1
   0029                     378 _en_fr::
   0029                     379 	.ds 1
   002A                     380 _en_collx::
   002A                     381 	.ds 1
   002B                     382 _en_colly::
   002B                     383 	.ds 1
   002C                     384 _en_spr::
   002C                     385 	.ds 1
   002D                     386 _touched::
   002D                     387 	.ds 1
   002E                     388 _en_is_alive::
   002E                     389 	.ds 1
   002F                     390 _pregotten::
   002F                     391 	.ds 1
   0030                     392 _en_rmx::
   0030                     393 	.ds 3
   0033                     394 __en_t::
   0033                     395 	.ds 1
   0034                     396 __en_s::
   0034                     397 	.ds 1
   0035                     398 __en_x::
   0035                     399 	.ds 1
   0036                     400 __en_y::
   0036                     401 	.ds 1
   0037                     402 __en_x1::
   0037                     403 	.ds 1
   0038                     404 __en_y1::
   0038                     405 	.ds 1
   0039                     406 __en_x2::
   0039                     407 	.ds 1
   003A                     408 __en_y2::
   003A                     409 	.ds 1
   003B                     410 __en_mx::
   003B                     411 	.ds 1
   003C                     412 __en_my::
   003C                     413 	.ds 1
   003D                     414 __en_ct::
   003D                     415 	.ds 1
   003E                     416 __en_facing::
   003E                     417 	.ds 1
   003F                     418 __en_state::
   003F                     419 	.ds 1
   0040                     420 __enf_x::
   0040                     421 	.ds 2
   0042                     422 __enf_y::
   0042                     423 	.ds 2
   0044                     424 __enf_vx::
   0044                     425 	.ds 2
   0046                     426 __enf_vy::
   0046                     427 	.ds 2
   0048                     428 _en_sg_1::
   0048                     429 	.ds 1
   0049                     430 _en_sg_2::
   0049                     431 	.ds 1
   004A                     432 _vertical_engine_type::
   004A                     433 	.ds 1
   004B                     434 _px::
   004B                     435 	.ds 2
   004D                     436 _py::
   004D                     437 	.ds 2
   004F                     438 _pvx::
   004F                     439 	.ds 2
   0051                     440 _pvy::
   0051                     441 	.ds 2
   0053                     442 _prx::
   0053                     443 	.ds 1
   0054                     444 _pry::
   0054                     445 	.ds 1
   0055                     446 _pcx::
   0055                     447 	.ds 1
   0056                     448 _pcy::
   0056                     449 	.ds 1
   0057                     450 _pfacing::
   0057                     451 	.ds 1
   0058                     452 _pfr::
   0058                     453 	.ds 1
   0059                     454 _psprid::
   0059                     455 	.ds 1
   005A                     456 _a_button::
   005A                     457 	.ds 1
   005B                     458 _b_button::
   005B                     459 	.ds 1
   005C                     460 _pj::
   005C                     461 	.ds 1
   005D                     462 _pjb::
   005D                     463 	.ds 1
   005E                     464 _pctj::
   005E                     465 	.ds 1
   005F                     466 _pgotten::
   005F                     467 	.ds 1
   0060                     468 _ppossee::
   0060                     469 	.ds 1
   0061                     470 _oppossee::
   0061                     471 	.ds 1
   0062                     472 _pflickering::
   0062                     473 	.ds 1
   0063                     474 _pbouncing::
   0063                     475 	.ds 1
   0064                     476 _phit::
   0064                     477 	.ds 1
   0065                     478 _pgtmx::
   0065                     479 	.ds 2
   0067                     480 _pgtmy::
   0067                     481 	.ds 2
   0069                     482 _hitv::
   0069                     483 	.ds 1
   006A                     484 _hith::
   006A                     485 	.ds 1
   006B                     486 _pfloating::
   006B                     487 	.ds 1
   006C                     488 _prx_old::
   006C                     489 	.ds 1
   006D                     490 _pry_old::
   006D                     491 	.ds 1
   006E                     492 _pkill::
   006E                     493 	.ds 1
   006F                     494 _pice::
   006F                     495 	.ds 1
   0070                     496 _pnotsafe::
   0070                     497 	.ds 1
   0071                     498 _pcontinues::
   0071                     499 	.ds 1
   0072                     500 _plife::
   0072                     501 	.ds 1
   0073                     502 _pobjs::
   0073                     503 	.ds 1
   0074                     504 _pammo::
   0074                     505 	.ds 1
   0075                     506 _pkilled::
   0075                     507 	.ds 1
   0076                     508 _pfiring::
   0076                     509 	.ds 1
   0077                     510 _hrx::
   0077                     511 	.ds 1
   0078                     512 _hry::
   0078                     513 	.ds 1
   0079                     514 _hrt::
   0079                     515 	.ds 1
   007A                     516 _do_process_breakable::
   007A                     517 	.ds 1
   007B                     518 _ft::
   007B                     519 	.ds 1
   007C                     520 _c_map_w::
   007C                     521 	.ds 1
   007D                     522 _c_map_h::
   007D                     523 	.ds 1
   007E                     524 _c_map_size::
   007E                     525 	.ds 1
   007F                     526 _c_ts_tmaps::
   007F                     527 	.ds 2
   0081                     528 _c_behs::
   0081                     529 	.ds 2
   0083                     530 _spr_enems::
   0083                     531 	.ds 2
   0085                     532 _c_map::
   0085                     533 	.ds 2
   0087                     534 _c_decos::
   0087                     535 	.ds 1
   0088                     536 _c_locks::
   0088                     537 	.ds 2
   008A                     538 _c_enems::
   008A                     539 	.ds 2
   008C                     540 _c_hotspots::
   008C                     541 	.ds 2
   008E                     542 _c_max_bolts::
   008E                     543 	.ds 1
   008F                     544 _ntsc::
   008F                     545 	.ds 1
   0090                     546 _ntsc_frame::
   0090                     547 	.ds 1
   0091                     548 _update_index::
   0091                     549 	.ds 1
   0092                     550 _update_list::
   0092                     551 	.ds 96
   00F2                     552 _fader::
   00F2                     553 	.ds 1
   00F3                     554 _fade_delay::
   00F3                     555 	.ds 1
   00F4                     556 _map_buff::
   00F4                     557 	.ds 192
   01B4                     558 _first_game::
   01B4                     559 	.ds 1
   01B5                     560 _level::
   01B5                     561 	.ds 1
   01B6                     562 _c_max_enems::
   01B6                     563 	.ds 1
   01B7                     564 _n_pant::
   01B7                     565 	.ds 1
   01B8                     566 _on_pant::
   01B8                     567 	.ds 1
   01B9                     568 _half_life::
   01B9                     569 	.ds 1
   01BA                     570 _frame_counter::
   01BA                     571 	.ds 1
   01BB                     572 _paused::
   01BB                     573 	.ds 1
   01BC                     574 _win_level::
   01BC                     575 	.ds 1
   01BD                     576 _game_over::
   01BD                     577 	.ds 1
   01BE                     578 _warp_to_level::
   01BE                     579 	.ds 1
   01BF                     580 _level_reset::
   01BF                     581 	.ds 1
   01C0                     582 _flick_override::
   01C0                     583 	.ds 1
   01C1                     584 _olife::
   01C1                     585 	.ds 1
   01C2                     586 _okeys::
   01C2                     587 	.ds 1
   01C3                     588 _oobjs::
   01C3                     589 	.ds 1
   01C4                     590 _oammo::
   01C4                     591 	.ds 1
   01C5                     592 _okilled::
   01C5                     593 	.ds 1
   01C6                     594 _oam_index_player::
   01C6                     595 	.ds 1
   01C7                     596 _pctfr::
   01C7                     597 	.ds 1
   01C8                     598 _hact::
   01C8                     599 	.ds 35
   01EB                     600 _flags::
   01EB                     601 	.ds 16
   01FB                     602 _en_t::
   01FB                     603 	.ds 3
   01FE                     604 _en_x::
   01FE                     605 	.ds 3
   0201                     606 _en_y::
   0201                     607 	.ds 3
   0204                     608 _en_x1::
   0204                     609 	.ds 3
   0207                     610 _en_y1::
   0207                     611 	.ds 3
   020A                     612 _en_x2::
   020A                     613 	.ds 3
   020D                     614 _en_y2::
   020D                     615 	.ds 3
   0210                     616 _en_mx::
   0210                     617 	.ds 3
   0213                     618 _en_my::
   0213                     619 	.ds 3
   0216                     620 _en_s::
   0216                     621 	.ds 3
   0219                     622 _en_facing::
   0219                     623 	.ds 3
   021C                     624 _en_state::
   021C                     625 	.ds 3
   021F                     626 _en_flags::
   021F                     627 	.ds 3
   0222                     628 _en_cttouched::
   0222                     629 	.ds 3
   0225                     630 _en_life::
   0225                     631 	.ds 3
   0228                     632 _en_status::
   0228                     633 	.ds 3
   022B                     634 _en_ct::
   022B                     635 	.ds 3
   022E                     636 _en_spr_x_mod::
   022E                     637 	.ds 1
   022F                     638 _en_spr_id::
   022F                     639 	.ds 3
   0232                     640 _prp_idx::
   0232                     641 	.ds 1
   0233                     642 _prp_yx::
   0233                     643 	.ds 4
   0237                     644 _propellers_on::
   0237                     645 	.ds 1
   0238                     646 _max_chac_chacs::
   0238                     647 	.ds 1
   0239                     648 _chac_chacs_yx::
   0239                     649 	.ds 4
   023D                     650 _chac_chacs_state::
   023D                     651 	.ds 4
   0241                     652 _chac_chacs_idlewait::
   0241                     653 	.ds 4
   0245                     654 _chac_chacs_ct::
   0245                     655 	.ds 4
   0249                     656 _chac_chacs_queue::
   0249                     657 	.ds 16
   0259                     658 _chac_chacs_queue_read::
   0259                     659 	.ds 1
   025A                     660 _chac_chacs_queue_write::
   025A                     661 	.ds 1
   025B                     662 _shaker_ct::
   025B                     663 	.ds 1
   025C                     664 _game_puri::
   025C                     665 	.ds 1
   025D                     666 _ol_prx::
   025D                     667 	.ds 1
   025E                     668 ___player_vy_falling_max::
   025E                     669 	.ds 1
   025F                     670 ___player_g::
   025F                     671 	.ds 1
   0260                     672 ___player_ay_jetpac::
   0260                     673 	.ds 1
   0261                     674 ___player_vy_jetpac_max::
   0261                     675 	.ds 1
   0262                     676 ___player_vx_max::
   0262                     677 	.ds 1
   0263                     678 ___player_ax::
   0263                     679 	.ds 1
   0264                     680 ___player_rx::
   0264                     681 	.ds 1
   0265                     682 _level_done::
   0265                     683 	.ds 3
                            684 ;--------------------------------------------------------
                            685 ; ram data
                            686 ;--------------------------------------------------------
                            687 	.area _INITIALIZED
                            688 ;--------------------------------------------------------
                            689 ; absolute external ram data
                            690 ;--------------------------------------------------------
                            691 	.area _DABS (ABS)
                            692 ;--------------------------------------------------------
                            693 ; global & static initialisations
                            694 ;--------------------------------------------------------
                            695 	.area _HOME
                            696 	.area _GSINIT
                            697 	.area _GSFINAL
                            698 	.area _GSINIT
                            699 ;--------------------------------------------------------
                            700 ; Home
                            701 ;--------------------------------------------------------
                            702 	.area _HOME
                            703 	.area _HOME
                            704 ;--------------------------------------------------------
                            705 ; code
                            706 ;--------------------------------------------------------
                            707 	.area _CODE
                            708 ;./engine/hotspots.h:7: void hotspots_load (void) {
                            709 ;	---------------------------------
                            710 ; Function hotspots_load
                            711 ; ---------------------------------
   0000                     712 _hotspots_load::
                            713 ;./engine/hotspots.h:9: gp_gen = (unsigned char *) c_hotspots;
   0000 2Ar8Cr00      [16]  714 	ld	hl,(_c_hotspots)
   0003 22r0Ar00      [16]  715 	ld	(_gp_gen),hl
                            716 ;./engine/hotspots.h:11: for (gpit = 0; gpit < MAP_SIZE; gpit ++) {
   0006 21r06r00      [10]  717 	ld	hl,#_gpit + 0
   0009 36 00         [10]  718 	ld	(hl), #0x00
   000B 11rC8r01      [10]  719 	ld	de,#_hact+0
   000E                     720 00102$:
                            721 ;./engine/hotspots.h:16: hact [gpit] = 1;
   000E 2Ar06r00      [16]  722 	ld	hl,(_gpit)
   0011 26 00         [ 7]  723 	ld	h,#0x00
   0013 19            [11]  724 	add	hl,de
   0014 36 01         [10]  725 	ld	(hl),#0x01
                            726 ;./engine/hotspots.h:11: for (gpit = 0; gpit < MAP_SIZE; gpit ++) {
   0016 21r06r00      [10]  727 	ld	hl, #_gpit+0
   0019 34            [11]  728 	inc	(hl)
   001A 3Ar06r00      [13]  729 	ld	a,(#_gpit + 0)
   001D D6 23         [ 7]  730 	sub	a, #0x23
   001F 38 ED         [12]  731 	jr	C,00102$
   0021 C9            [10]  732 	ret
   0022                     733 _chac_chacs_initial_times:
   0022 19                  734 	.db #0x19	; 25
   0023 32                  735 	.db #0x32	; 50	'2'
   0024 64                  736 	.db #0x64	; 100	'd'
   0025                     737 _chac_chacs_times:
   0025 00                  738 	.db #0x00	; 0
   0026 01                  739 	.db #0x01	; 1
   0027 01                  740 	.db #0x01	; 1
   0028 64                  741 	.db #0x64	; 100	'd'
   0029 10                  742 	.db #0x10	; 16
   002A 10                  743 	.db #0x10	; 16
   002B                     744 _chac_chacs_t1:
   002B 10                  745 	.db #0x10	; 16
   002C 11                  746 	.db #0x11	; 17
   002D 12                  747 	.db #0x12	; 18
   002E 12                  748 	.db #0x12	; 18
   002F 12                  749 	.db #0x12	; 18
   0030 11                  750 	.db #0x11	; 17
   0031                     751 _chac_chacs_t2:
   0031 00                  752 	.db #0x00	; 0
   0032 00                  753 	.db #0x00	; 0
   0033 11                  754 	.db #0x11	; 17
   0034 12                  755 	.db #0x12	; 18
   0035 11                  756 	.db #0x11	; 17
   0036 00                  757 	.db #0x00	; 0
   0037                     758 _chac_chacs_t3:
   0037 00                  759 	.db #0x00	; 0
   0038 00                  760 	.db #0x00	; 0
   0039 00                  761 	.db #0x00	; 0
   003A 11                  762 	.db #0x11	; 17
   003B 00                  763 	.db #0x00	; 0
   003C 00                  764 	.db #0x00	; 0
   003D                     765 _bits:
   003D 01                  766 	.db #0x01	; 1
   003E 02                  767 	.db #0x02	; 2
   003F 04                  768 	.db #0x04	; 4
   0040 08                  769 	.db #0x08	; 8
   0041 10                  770 	.db #0x10	; 16
   0042 20                  771 	.db #0x20	; 32
   0043 40                  772 	.db #0x40	; 64
   0044 80                  773 	.db #0x80	; 128
   0045                     774 _jitter:
   0045 00                  775 	.db #0x00	; 0
   0046 01                  776 	.db #0x01	; 1
   0047 01                  777 	.db #0x01	; 1
   0048 00                  778 	.db #0x00	; 0
   0049 00                  779 	.db #0x00	; 0
   004A 01                  780 	.db #0x01	; 1
   004B 00                  781 	.db #0x00	; 0
   004C 01                  782 	.db #0x01	; 1
   004D 01                  783 	.db #0x01	; 1
   004E 00                  784 	.db #0x00	; 0
   004F 00                  785 	.db #0x00	; 0
   0050 00                  786 	.db #0x00	; 0
   0051 01                  787 	.db #0x01	; 1
   0052 00                  788 	.db #0x00	; 0
   0053 01                  789 	.db #0x01	; 1
   0054 01                  790 	.db #0x01	; 1
   0055                     791 _behs0:
   0055 00                  792 	.db #0x00	; 0
   0056 01                  793 	.db #0x01	; 1
   0057 08                  794 	.db #0x08	; 8
   0058 08                  795 	.db #0x08	; 8
   0059 08                  796 	.db #0x08	; 8
   005A 08                  797 	.db #0x08	; 8
   005B 00                  798 	.db #0x00	; 0
   005C 00                  799 	.db #0x00	; 0
   005D 00                  800 	.db #0x00	; 0
   005E 08                  801 	.db #0x08	; 8
   005F 08                  802 	.db #0x08	; 8
   0060 08                  803 	.db #0x08	; 8
   0061 04                  804 	.db #0x04	; 4
   0062 08                  805 	.db #0x08	; 8
   0063 08                  806 	.db #0x08	; 8
   0064 00                  807 	.db #0x00	; 0
   0065                     808 _behs1:
   0065 00                  809 	.db #0x00	; 0
   0066 01                  810 	.db #0x01	; 1
   0067 08                  811 	.db #0x08	; 8
   0068 08                  812 	.db #0x08	; 8
   0069 08                  813 	.db #0x08	; 8
   006A 08                  814 	.db #0x08	; 8
   006B 00                  815 	.db #0x00	; 0
   006C 00                  816 	.db #0x00	; 0
   006D 00                  817 	.db #0x00	; 0
   006E 00                  818 	.db #0x00	; 0
   006F 00                  819 	.db #0x00	; 0
   0070 04                  820 	.db #0x04	; 4
   0071 04                  821 	.db #0x04	; 4
   0072 08                  822 	.db #0x08	; 8
   0073 08                  823 	.db #0x08	; 8
   0074 08                  824 	.db #0x08	; 8
   0075 08                  825 	.db #0x08	; 8
   0076 40                  826 	.db #0x40	; 64
   0077                     827 _behs2:
   0077 00                  828 	.db #0x00	; 0
   0078 01                  829 	.db #0x01	; 1
   0079 08                  830 	.db #0x08	; 8
   007A 08                  831 	.db #0x08	; 8
   007B 08                  832 	.db #0x08	; 8
   007C 08                  833 	.db #0x08	; 8
   007D 00                  834 	.db #0x00	; 0
   007E 00                  835 	.db #0x00	; 0
   007F 00                  836 	.db #0x00	; 0
   0080 08                  837 	.db #0x08	; 8
   0081 08                  838 	.db #0x08	; 8
   0082 08                  839 	.db #0x08	; 8
   0083 04                  840 	.db #0x04	; 4
   0084 08                  841 	.db #0x08	; 8
   0085 08                  842 	.db #0x08	; 8
   0086 00                  843 	.db #0x00	; 0
   0087 00                  844 	.db #0x00	; 0
   0088 01                  845 	.db #0x01	; 1
   0089 01                  846 	.db #0x01	; 1
   008A                     847 _behs3:
   008A 00                  848 	.db #0x00	; 0
   008B 08                  849 	.db #0x08	; 8
   008C 08                  850 	.db #0x08	; 8
   008D 00                  851 	.db #0x00	; 0
   008E 00                  852 	.db #0x00	; 0
   008F 00                  853 	.db #0x00	; 0
   0090 00                  854 	.db #0x00	; 0
   0091 00                  855 	.db #0x00	; 0
   0092 04                  856 	.db #0x04	; 4
   0093 04                  857 	.db #0x04	; 4
   0094 08                  858 	.db #0x08	; 8
   0095 08                  859 	.db #0x08	; 8
   0096 04                  860 	.db #0x04	; 4
   0097 01                  861 	.db #0x01	; 1
   0098 08                  862 	.db #0x08	; 8
   0099 08                  863 	.db #0x08	; 8
   009A 00                  864 	.db #0x00	; 0
   009B 01                  865 	.db #0x01	; 1
   009C 01                  866 	.db #0x01	; 1
   009D                     867 _spr_player:
   009Dr00r00               868 	.dw _ss_pl_00
   009Fr00r00               869 	.dw _ss_pl_01
   00A1r00r00               870 	.dw _ss_pl_02
   00A3r00r00               871 	.dw _ss_pl_01
   00A5r00r00               872 	.dw _ss_pl_03
   00A7r00r00               873 	.dw _ss_pl_04
   00A9r00r00               874 	.dw _ss_pl_05
   00ABr00r00               875 	.dw _ss_pl_06
   00ADr00r00               876 	.dw _ss_pl_05
   00AFr00r00               877 	.dw _ss_pl_07
   00B1r00r00               878 	.dw _ss_pl_08
   00B3r00r00               879 	.dw _ss_pl_09
   00B5r00r00               880 	.dw _ss_pl_0a
   00B7 00 00               881 	.dw #0x0000
   00B9r00r00               882 	.dw _ss_pl_0b
   00BBr00r00               883 	.dw _ss_pl_0c
   00BDr00r00               884 	.dw _ss_pl_0d
   00BFr00r00               885 	.dw _ss_pl_0e
   00C1 00 00               886 	.dw #0x0000
   00C3r00r00               887 	.dw _ss_pl_0f
   00C5                     888 _spr_enems0:
   00C5r00r00               889 	.dw _ss_en0_00
   00C7r00r00               890 	.dw _ss_en0_01
   00C9 00 00               891 	.dw #0x0000
   00CB 00 00               892 	.dw #0x0000
   00CDr00r00               893 	.dw _ss_en0_00
   00CFr00r00               894 	.dw _ss_en0_01
   00D1 00 00               895 	.dw #0x0000
   00D3 00 00               896 	.dw #0x0000
   00D5r00r00               897 	.dw _ss_en0_02
   00D7r00r00               898 	.dw _ss_en0_03
   00D9 00 00               899 	.dw #0x0000
   00DB 00 00               900 	.dw #0x0000
   00DDr00r00               901 	.dw _ss_en0_02
   00DFr00r00               902 	.dw _ss_en0_03
   00E1 00 00               903 	.dw #0x0000
   00E3 00 00               904 	.dw #0x0000
   00E5r00r00               905 	.dw _ss_en0_04
   00E7r00r00               906 	.dw _ss_en0_05
   00E9 00 00               907 	.dw #0x0000
   00EB 00 00               908 	.dw #0x0000
   00EDr00r00               909 	.dw _ss_en0_04
   00EFr00r00               910 	.dw _ss_en0_05
   00F1 00 00               911 	.dw #0x0000
   00F3 00 00               912 	.dw #0x0000
   00F5r00r00               913 	.dw _ss_plat_00
   00F7r00r00               914 	.dw _ss_plat_00
   00F9 00 00               915 	.dw #0x0000
   00FB 00 00               916 	.dw #0x0000
   00FDr00r00               917 	.dw _ss_plat_00
   00FFr00r00               918 	.dw _ss_plat_00
   0101 00 00               919 	.dw #0x0000
   0103 00 00               920 	.dw #0x0000
   0105                     921 _spr_enems1:
   0105r00r00               922 	.dw _ss_en1_00
   0107r00r00               923 	.dw _ss_en1_01
   0109 00 00               924 	.dw #0x0000
   010B 00 00               925 	.dw #0x0000
   010Dr00r00               926 	.dw _ss_en1_00
   010Fr00r00               927 	.dw _ss_en1_01
   0111 00 00               928 	.dw #0x0000
   0113 00 00               929 	.dw #0x0000
   0115r00r00               930 	.dw _ss_en1_02
   0117r00r00               931 	.dw _ss_en1_03
   0119 00 00               932 	.dw #0x0000
   011B 00 00               933 	.dw #0x0000
   011Dr00r00               934 	.dw _ss_en1_02
   011Fr00r00               935 	.dw _ss_en1_03
   0121 00 00               936 	.dw #0x0000
   0123 00 00               937 	.dw #0x0000
   0125r00r00               938 	.dw _ss_en1_04
   0127r00r00               939 	.dw _ss_en1_05
   0129 00 00               940 	.dw #0x0000
   012B 00 00               941 	.dw #0x0000
   012Dr00r00               942 	.dw _ss_en1_04
   012Fr00r00               943 	.dw _ss_en1_05
   0131 00 00               944 	.dw #0x0000
   0133 00 00               945 	.dw #0x0000
   0135r00r00               946 	.dw _ss_plat_00
   0137r00r00               947 	.dw _ss_plat_00
   0139 00 00               948 	.dw #0x0000
   013B 00 00               949 	.dw #0x0000
   013Dr00r00               950 	.dw _ss_plat_00
   013Fr00r00               951 	.dw _ss_plat_00
   0141 00 00               952 	.dw #0x0000
   0143 00 00               953 	.dw #0x0000
   0145                     954 _spr_hs:
   0145 00 00               955 	.dw #0x0000
   0147r00r00               956 	.dw _ss_it_00
   0149 00 00               957 	.dw #0x0000
   014Br00r00               958 	.dw _ss_it_01
   014D 00 00               959 	.dw #0x0000
   014F                     960 _l_scr_ini:
   014F 1C                  961 	.db #0x1C	; 28
   0150 1C                  962 	.db #0x1C	; 28
   0151 1C                  963 	.db #0x1C	; 28
   0152 0C                  964 	.db #0x0C	; 12
   0153                     965 _l_ini_x:
   0153 05                  966 	.db #0x05	; 5
   0154 05                  967 	.db #0x05	; 5
   0155 05                  968 	.db #0x05	; 5
   0156 05                  969 	.db #0x05	; 5
   0157                     970 _l_ini_y:
   0157 06                  971 	.db #0x06	; 6
   0158 07                  972 	.db #0x07	; 7
   0159 06                  973 	.db #0x06	; 6
   015A 06                  974 	.db #0x06	; 6
   015B                     975 _l_map_w:
   015B 07                  976 	.db #0x07	; 7
   015C 07                  977 	.db #0x07	; 7
   015D 07                  978 	.db #0x07	; 7
   015E 04                  979 	.db #0x04	; 4
   015F                     980 _l_map_h:
   015F 05                  981 	.db #0x05	; 5
   0160 05                  982 	.db #0x05	; 5
   0161 05                  983 	.db #0x05	; 5
   0162 04                  984 	.db #0x04	; 4
   0163                     985 _l_player_max_objects:
   0163 14                  986 	.db #0x14	; 20
   0164 14                  987 	.db #0x14	; 20
   0165 14                  988 	.db #0x14	; 20
   0166 0B                  989 	.db #0x0B	; 11
   0167                     990 _l_player_max_enems:
   0167 20                  991 	.db #0x20	; 32
   0168 22                  992 	.db #0x22	; 34
   0169 22                  993 	.db #0x22	; 34
   016A 09                  994 	.db #0x09	; 9
   016B                     995 _l_ts_tmaps:
   016Br00r00               996 	.dw _ts0_tmaps
   016Dr00r00               997 	.dw _ts1_tmaps
   016Fr00r00               998 	.dw _ts2_tmaps
   0171r00r00               999 	.dw _ts3_tmaps
   0173                    1000 _l_behs:
   0173r55r00              1001 	.dw _behs0
   0175r65r00              1002 	.dw _behs1
   0177r77r00              1003 	.dw _behs2
   0179r8Ar00              1004 	.dw _behs3
   017B                    1005 _l_spr_enems:
   017BrC5r00              1006 	.dw _spr_enems0
   017Dr05r01              1007 	.dw _spr_enems1
   017Fr05r01              1008 	.dw _spr_enems1
   0181rC5r00              1009 	.dw _spr_enems0
   0183                    1010 _l_map:
   0183r00r00              1011 	.dw _map_0
   0185r00r00              1012 	.dw _map_1
   0187r00r00              1013 	.dw _map_2
   0189r00r00              1014 	.dw _map_3
   018B                    1015 _l_decos:
   018B 00                 1016 	.db #0x00	; 0
   018C 01                 1017 	.db #0x01	; 1
   018D 01                 1018 	.db #0x01	; 1
   018E 01                 1019 	.db #0x01	; 1
   018F                    1020 _l_enems:
   018Fr00r00              1021 	.dw _enems_0
   0191r00r00              1022 	.dw _enems_1
   0193r00r00              1023 	.dw _enems_2
   0195r00r00              1024 	.dw _enems_3
   0197                    1025 _l_hotspots:
   0197r00r00              1026 	.dw _hotspots_0
   0199r00r00              1027 	.dw _hotspots_1
   019Br00r00              1028 	.dw _hotspots_2
   019Dr00r00              1029 	.dw _hotspots_3
   019F                    1030 _l_music:
   019Fr00r00              1031 	.dw _m_n_stagea_psg
   01A1r00r00              1032 	.dw _m_n_stageb_psg
   01A3r00r00              1033 	.dw _m_n_stagec_psg
   01A5r00r00              1034 	.dw _m_n_stageb_psg
                           1035 ;./engine/hotspots.h:20: void hotspots_paint (void) {
                           1036 ;	---------------------------------
                           1037 ; Function hotspots_paint
                           1038 ; ---------------------------------
   01A7                    1039 _hotspots_paint::
                           1040 ;./engine/hotspots.h:30: rda = hrt;
   01A7 3Ar79r00      [13] 1041 	ld	a,(#_hrt + 0)
   01AA 32r16r00      [13] 1042 	ld	(#_rda + 0),a
                           1043 ;./engine/hotspots.h:38: spr_hs [rda]
   01AD 11r45r01      [10] 1044 	ld	de,#_spr_hs+0
   01B0 FD 21r16r00   [14] 1045 	ld	iy,#_rda
   01B4 FD 6E 00      [19] 1046 	ld	l,0 (iy)
   01B7 26 00         [ 7] 1047 	ld	h,#0x00
   01B9 29            [11] 1048 	add	hl, hl
   01BA 19            [11] 1049 	add	hl,de
   01BB 5E            [ 7] 1050 	ld	e,(hl)
   01BC 23            [ 6] 1051 	inc	hl
   01BD 56            [ 7] 1052 	ld	d,(hl)
                           1053 ;./engine/hotspots.h:37: hrx, hry + SPRITE_ADJUST, 
   01BE 3Ar78r00      [13] 1054 	ld	a,(#_hry + 0)
   01C1 C6 F7         [ 7] 1055 	add	a, #0xF7
   01C3 67            [ 4] 1056 	ld	h,a
   01C4 D5            [11] 1057 	push	de
   01C5 E5            [11] 1058 	push	hl
   01C6 33            [ 6] 1059 	inc	sp
   01C7 3Ar77r00      [13] 1060 	ld	a,(_hrx)
   01CA F5            [11] 1061 	push	af
   01CB 33            [ 6] 1062 	inc	sp
   01CC CDr00r00      [17] 1063 	call	_SG_addMetaSprite1x1
   01CF F1            [10] 1064 	pop	af
   01D0 F1            [10] 1065 	pop	af
   01D1 C9            [10] 1066 	ret
                           1067 ;./engine/hotspots.h:42: void hotspots_create (void) {
                           1068 ;	---------------------------------
                           1069 ; Function hotspots_create
                           1070 ; ---------------------------------
   01D2                    1071 _hotspots_create::
                           1072 ;./engine/hotspots.h:54: gp_gen = (unsigned char *) (c_hotspots + (n_pant << 1));
   01D2 FD 21rB7r01   [14] 1073 	ld	iy,#_n_pant
   01D6 FD 6E 00      [19] 1074 	ld	l,0 (iy)
   01D9 26 00         [ 7] 1075 	ld	h,#0x00
   01DB 29            [11] 1076 	add	hl, hl
   01DC 55            [ 4] 1077 	ld	d,l
   01DD 5C            [ 4] 1078 	ld	e,h
   01DE 21r0Ar00      [10] 1079 	ld	hl,#_gp_gen
   01E1 3Ar8Cr00      [13] 1080 	ld	a,(#_c_hotspots + 0)
   01E4 82            [ 4] 1081 	add	a, d
   01E5 77            [ 7] 1082 	ld	(hl),a
   01E6 3Ar8Dr00      [13] 1083 	ld	a,(#_c_hotspots + 1)
   01E9 8B            [ 4] 1084 	adc	a, e
   01EA 23            [ 6] 1085 	inc	hl
   01EB 77            [ 7] 1086 	ld	(hl),a
                           1087 ;./engine/hotspots.h:55: hrt = *gp_gen ++; rda = *gp_gen; 
   01EC 2Ar0Ar00      [16] 1088 	ld	hl,(_gp_gen)
   01EF 7E            [ 7] 1089 	ld	a,(hl)
   01F0 32r79r00      [13] 1090 	ld	(#_hrt + 0),a
   01F3 21r0Ar00      [10] 1091 	ld	hl, #_gp_gen+0
   01F6 34            [11] 1092 	inc	(hl)
   01F7 20 04         [12] 1093 	jr	NZ,00115$
   01F9 21r0Br00      [10] 1094 	ld	hl, #_gp_gen+1
   01FC 34            [11] 1095 	inc	(hl)
   01FD                    1096 00115$:
   01FD 2Ar0Ar00      [16] 1097 	ld	hl,(_gp_gen)
   0200 7E            [ 7] 1098 	ld	a,(hl)
   0201 32r16r00      [13] 1099 	ld	(#_rda + 0),a
                           1100 ;./engine/hotspots.h:56: if (hrt && hact [n_pant]) {
   0204 3Ar79r00      [13] 1101 	ld	a,(#_hrt + 0)
   0207 B7            [ 4] 1102 	or	a, a
   0208 28 22         [12] 1103 	jr	Z,00102$
   020A 11rC8r01      [10] 1104 	ld	de,#_hact+0
   020D 2ArB7r01      [16] 1105 	ld	hl,(_n_pant)
   0210 26 00         [ 7] 1106 	ld	h,#0x00
   0212 19            [11] 1107 	add	hl,de
   0213 7E            [ 7] 1108 	ld	a,(hl)
   0214 B7            [ 4] 1109 	or	a, a
   0215 28 15         [12] 1110 	jr	Z,00102$
                           1111 ;./engine/hotspots.h:57: hry = rda & 0xf0; hrx = rda << 4;
   0217 3Ar16r00      [13] 1112 	ld	a,(#_rda + 0)
   021A E6 F0         [ 7] 1113 	and	a, #0xF0
   021C 32r78r00      [13] 1114 	ld	(#_hry + 0),a
   021F 3Ar16r00      [13] 1115 	ld	a,(#_rda + 0)
   0222 07            [ 4] 1116 	rlca
   0223 07            [ 4] 1117 	rlca
   0224 07            [ 4] 1118 	rlca
   0225 07            [ 4] 1119 	rlca
   0226 E6 F0         [ 7] 1120 	and	a,#0xF0
   0228 32r77r00      [13] 1121 	ld	(#_hrx + 0),a
   022B C9            [10] 1122 	ret
   022C                    1123 00102$:
                           1124 ;./engine/hotspots.h:58: } else hrt = 0;
   022C 21r79r00      [10] 1125 	ld	hl,#_hrt + 0
   022F 36 00         [10] 1126 	ld	(hl), #0x00
   0231 C9            [10] 1127 	ret
                           1128 ;./engine/../my/game_frame.h:7: void draw_game_frame (void) {
                           1129 ;	---------------------------------
                           1130 ; Function draw_game_frame
                           1131 ; ---------------------------------
   0232                    1132 _draw_game_frame::
                           1133 ;./engine/../my/game_frame.h:8: gp_gen = frame_rle; unrle ();
   0232 21r00r00      [10] 1134 	ld	hl,#_frame_rle+0
   0235 22r0Ar00      [16] 1135 	ld	(_gp_gen),hl
   0238 C3r00r00      [10] 1136 	jp  _unrle
                           1137 ;./engine/frame.h:9: void hud_update (void) {
                           1138 ;	---------------------------------
                           1139 ; Function hud_update
                           1140 ; ---------------------------------
   023B                    1141 _hud_update::
                           1142 ;./engine/frame.h:19: if (oobjs != pobjs) {
   023B 3ArC3r01      [13] 1143 	ld	a,(#_oobjs + 0)
   023E FD 21r73r00   [14] 1144 	ld	iy,#_pobjs
   0242 FD 96 00      [19] 1145 	sub	a, 0 (iy)
   0245 28 29         [12] 1146 	jr	Z,00102$
                           1147 ;./engine/frame.h:20: oobjs = pobjs;
   0247 3Ar73r00      [13] 1148 	ld	a,(#_pobjs + 0)
   024A 32rC3r01      [13] 1149 	ld	(#_oobjs + 0),a
                           1150 ;./engine/frame.h:21: _x = OBJECTS_X; _y = OBJECTS_Y; 
   024D 21r00r00      [10] 1151 	ld	hl,#__x + 0
   0250 36 05         [10] 1152 	ld	(hl), #0x05
   0252 21r01r00      [10] 1153 	ld	hl,#__y + 0
   0255 36 01         [10] 1154 	ld	(hl), #0x01
                           1155 ;./engine/frame.h:23: _n = PLAYER_MAX_OBJECTS - pobjs;
   0257 11r63r01      [10] 1156 	ld	de,#_l_player_max_objects+0
   025A 2ArB5r01      [16] 1157 	ld	hl,(_level)
   025D 26 00         [ 7] 1158 	ld	h,#0x00
   025F 19            [11] 1159 	add	hl,de
   0260 56            [ 7] 1160 	ld	d,(hl)
   0261 21r73r00      [10] 1161 	ld	hl,#_pobjs
   0264 FD 21r02r00   [14] 1162 	ld	iy,#__n
   0268 7A            [ 4] 1163 	ld	a,d
   0269 96            [ 7] 1164 	sub	a, (hl)
   026A FD 77 00      [19] 1165 	ld	0 (iy),a
                           1166 ;./engine/frame.h:27: p_t ();
   026D CDr00r00      [17] 1167 	call	_p_t
   0270                    1168 00102$:
                           1169 ;./engine/frame.h:39: if (olife != plife) {
   0270 3ArC1r01      [13] 1170 	ld	a,(#_olife + 0)
   0273 FD 21r72r00   [14] 1171 	ld	iy,#_plife
   0277 FD 96 00      [19] 1172 	sub	a, 0 (iy)
   027A C8            [11] 1173 	ret	Z
                           1174 ;./engine/frame.h:40: olife = plife;
   027B 21r72r00      [10] 1175 	ld	hl,#_plife + 0
   027E 56            [ 7] 1176 	ld	d, (hl)
   027F 21rC1r01      [10] 1177 	ld	hl,#_olife + 0
   0282 72            [ 7] 1178 	ld	(hl), d
                           1179 ;./engine/frame.h:41: _x = LIFE_X; _y = LIFE_Y; _n = plife; p_t ();
   0283 21r00r00      [10] 1180 	ld	hl,#__x + 0
   0286 36 19         [10] 1181 	ld	(hl), #0x19
   0288 21r01r00      [10] 1182 	ld	hl,#__y + 0
   028B 36 01         [10] 1183 	ld	(hl), #0x01
   028D 21r02r00      [10] 1184 	ld	hl,#__n + 0
   0290 72            [ 7] 1185 	ld	(hl), d
   0291 C3r00r00      [10] 1186 	jp  _p_t
                           1187 ;./my/pres.h:6: void bat_in (void) {
                           1188 ;	---------------------------------
                           1189 ; Function bat_in
                           1190 ; ---------------------------------
   0294                    1191 _bat_in::
                           1192 ;./my/pres.h:7: HW_displayOn ();
   0294 21 40 01      [10] 1193 	ld	hl,#0x0140
   0297 E5            [11] 1194 	push	hl
   0298 CDr00r00      [17] 1195 	call	_SG_VDPturnOnFeature
   029B F1            [10] 1196 	pop	af
                           1197 ;./my/pres.h:8: while (HW_getKeysStatus ());
   029C                    1198 00101$:
   029C CDr00r00      [17] 1199 	call	_SG_getKeysStatus
   029F 7D            [ 4] 1200 	ld	a,l
   02A0 B7            [ 4] 1201 	or	a, a
   02A1 20 F9         [12] 1202 	jr	NZ,00101$
   02A3 C9            [10] 1203 	ret
                           1204 ;./my/pres.h:11: void bat_out (void) {
                           1205 ;	---------------------------------
                           1206 ; Function bat_out
                           1207 ; ---------------------------------
   02A4                    1208 _bat_out::
                           1209 ;./my/pres.h:12: PSGStop ();
   02A4 CDr00r00      [17] 1210 	call	_PSGStop
                           1211 ;./my/pres.h:13: HW_displayOff ();
   02A7 21 40 01      [10] 1212 	ld	hl,#0x0140
   02AA E5            [11] 1213 	push	hl
   02AB CDr00r00      [17] 1214 	call	_SG_VDPturnOffFeature
   02AE F1            [10] 1215 	pop	af
                           1216 ;./my/pres.h:14: HW_initSprites ();
   02AF CDr00r00      [17] 1217 	call	_SG_initSprites
                           1218 ;./my/pres.h:15: HW_copySpritestoSAT ();	
   02B2 C3r00r00      [10] 1219 	jp  _SG_copySpritestoSAT
                           1220 ;./my/pres.h:18: void pres (void (*func) (void), unsigned char *music) {
                           1221 ;	---------------------------------
                           1222 ; Function pres
                           1223 ; ---------------------------------
   02B5                    1224 _pres::
                           1225 ;./my/pres.h:19: cls ();
   02B5 CDr00r00      [17] 1226 	call	_cls
                           1227 ;./my/pres.h:20: (*func) ();
   02B8 C1            [10] 1228 	pop	bc
   02B9 E1            [10] 1229 	pop	hl
   02BA E5            [11] 1230 	push	hl
   02BB C5            [11] 1231 	push	bc
   02BC CDr00r00      [17] 1232 	call	___sdcc_call_hl
                           1233 ;./my/pres.h:21: bat_in ();
   02BF CDr94r02      [17] 1234 	call	_bat_in
                           1235 ;./my/pres.h:22: if (music) PSGPlay (music);
   02C2 FD 21 04 00   [14] 1236 	ld	iy,#4
   02C6 FD 39         [15] 1237 	add	iy,sp
   02C8 FD 7E 01      [19] 1238 	ld	a,1 (iy)
   02CB FD B6 00      [19] 1239 	or	a,0 (iy)
   02CE 28 0B         [12] 1240 	jr	Z,00106$
   02D0 FD 6E 00      [19] 1241 	ld	l,0 (iy)
   02D3 FD 66 01      [19] 1242 	ld	h,1 (iy)
   02D6 E5            [11] 1243 	push	hl
   02D7 CDr00r00      [17] 1244 	call	_PSGPlay
   02DA F1            [10] 1245 	pop	af
                           1246 ;./my/pres.h:23: while (1) {
   02DB                    1247 00106$:
                           1248 ;./my/pres.h:24: pad_read ();
   02DB CDr00r00      [17] 1249 	call	_pad_read
                           1250 ;./my/pres.h:25: if (pad_this_frame & (PAD_A|PAD_B|PAD_START)) break;
   02DE 3Ar05r00      [13] 1251 	ld	a,(#_pad_this_frame + 0)
   02E1 E6 30         [ 7] 1252 	and	a, #0x30
   02E3 28 F6         [12] 1253 	jr	Z,00106$
                           1254 ;./my/pres.h:27: bat_out ();
   02E5 C3rA4r02      [10] 1255 	jp  _bat_out
                           1256 ;./my/pres.h:30: void snip (void) {
                           1257 ;	---------------------------------
                           1258 ; Function snip
                           1259 ; ---------------------------------
   02E8                    1260 _snip::
                           1261 ;./my/pres.h:35: gp_addr = PNTADDRESS + (rdy << 5);
   02E8 FD 21r13r00   [14] 1262 	ld	iy,#_rdy
   02EC FD 6E 00      [19] 1263 	ld	l,0 (iy)
   02EF 26 00         [ 7] 1264 	ld	h,#0x00
   02F1 29            [11] 1265 	add	hl, hl
   02F2 29            [11] 1266 	add	hl, hl
   02F3 29            [11] 1267 	add	hl, hl
   02F4 29            [11] 1268 	add	hl, hl
   02F5 29            [11] 1269 	add	hl, hl
   02F6 EB            [ 4] 1270 	ex	de,hl
   02F7 21 00 18      [10] 1271 	ld	hl,#0x1800
   02FA 19            [11] 1272 	add	hl,de
   02FB 22r10r00      [16] 1273 	ld	(_gp_addr),hl
                           1274 ;./my/pres.h:36: VDPControlPort = LO (gp_addr); VDPControlPort = HI (gp_addr) | 0x40;
   02FE 3Ar10r00      [13] 1275 	ld	a,(#_gp_addr + 0)
   0301 D3 BF         [11] 1276 	out	(_VDPControlPort),a
   0303 3Ar11r00      [13] 1277 	ld	a,(#_gp_addr + 1)
   0306 CB F7         [ 8] 1278 	set	6, a
   0308 D3 BF         [11] 1279 	out	(_VDPControlPort),a
                           1280 ;./my/pres.h:37: while (rda --) {
   030A                    1281 00104$:
   030A 21r16r00      [10] 1282 	ld	hl,#_rda + 0
   030D 56            [ 7] 1283 	ld	d, (hl)
   030E 21r16r00      [10] 1284 	ld	hl, #_rda+0
   0311 35            [11] 1285 	dec	(hl)
   0312 7A            [ 4] 1286 	ld	a,d
   0313 B7            [ 4] 1287 	or	a, a
   0314 C8            [11] 1288 	ret	Z
                           1289 ;./my/pres.h:38: HW_waitForVBlank ();
   0315 CDr00r00      [17] 1290 	call	_SG_waitForVBlank
                           1291 ;./my/pres.h:39: gpit = 32; while (gpit --) {
   0318 21r06r00      [10] 1292 	ld	hl,#_gpit + 0
   031B 36 20         [10] 1293 	ld	(hl), #0x20
   031D                    1294 00101$:
   031D 21r06r00      [10] 1295 	ld	hl,#_gpit + 0
   0320 56            [ 7] 1296 	ld	d, (hl)
   0321 21r06r00      [10] 1297 	ld	hl, #_gpit+0
   0324 35            [11] 1298 	dec	(hl)
   0325 7A            [ 4] 1299 	ld	a,d
   0326 B7            [ 4] 1300 	or	a, a
   0327 28 E1         [12] 1301 	jr	Z,00104$
                           1302 ;./my/pres.h:40: VDPDataPort = *gp_tmap ++;
   0329 2Ar0Cr00      [16] 1303 	ld	hl,(_gp_tmap)
   032C 7E            [ 7] 1304 	ld	a,(hl)
   032D D3 BE         [11] 1305 	out	(_VDPDataPort),a
   032F 21r0Cr00      [10] 1306 	ld	hl, #_gp_tmap+0
   0332 34            [11] 1307 	inc	(hl)
   0333 20 E8         [12] 1308 	jr	NZ,00101$
   0335 21r0Dr00      [10] 1309 	ld	hl, #_gp_tmap+1
   0338 34            [11] 1310 	inc	(hl)
   0339 18 E2         [12] 1311 	jr	00101$
                           1312 ;./my/pres.h:45: void logo (void) {
                           1313 ;	---------------------------------
                           1314 ; Function logo
                           1315 ; ---------------------------------
   033B                    1316 _logo::
                           1317 ;./my/pres.h:46: rda = 5; rdy = 3; 
   033B 21r16r00      [10] 1318 	ld	hl,#_rda + 0
   033E 36 05         [10] 1319 	ld	(hl), #0x05
   0340 21r13r00      [10] 1320 	ld	hl,#_rdy + 0
   0343 36 03         [10] 1321 	ld	(hl), #0x03
                           1322 ;./my/pres.h:47: gp_tmap = game_puri ? title_cutout_puri : title_cutout_paco;
   0345 3Ar5Cr02      [13] 1323 	ld	a,(#_game_puri + 0)
   0348 B7            [ 4] 1324 	or	a, a
   0349 28 05         [12] 1325 	jr	Z,00103$
   034B 21r00r00      [10] 1326 	ld	hl,#_title_cutout_puri+0
   034E 18 03         [12] 1327 	jr	00104$
   0350                    1328 00103$:
   0350 21r00r00      [10] 1329 	ld	hl,#_title_cutout_paco+0
   0353                    1330 00104$:
   0353 22r0Cr00      [16] 1331 	ld	(_gp_tmap),hl
                           1332 ;./my/pres.h:48: snip ();
   0356 C3rE8r02      [10] 1333 	jp  _snip
                           1334 ;./my/pres.h:51: void title (void) {	
                           1335 ;	---------------------------------
                           1336 ; Function title
                           1337 ; ---------------------------------
   0359                    1338 _title::
                           1339 ;./my/pres.h:52: gp_gen = title_rle; unrle ();
   0359 21r00r00      [10] 1340 	ld	hl,#_title_rle+0
   035C 22r0Ar00      [16] 1341 	ld	(_gp_gen),hl
   035F CDr00r00      [17] 1342 	call	_unrle
                           1343 ;./my/pres.h:54: logo ();
   0362 CDr3Br03      [17] 1344 	call	_logo
                           1345 ;./my/pres.h:56: _x = 5; _y = 23; pr_str ("@ 2018 THE MOJON TWINS");
   0365 21r00r00      [10] 1346 	ld	hl,#__x + 0
   0368 36 05         [10] 1347 	ld	(hl), #0x05
   036A 21r01r00      [10] 1348 	ld	hl,#__y + 0
   036D 36 17         [10] 1349 	ld	(hl), #0x17
   036F 21rC1r04      [10] 1350 	ld	hl,#___str_0
   0372 E5            [11] 1351 	push	hl
   0373 CDr00r00      [17] 1352 	call	_pr_str
   0376 F1            [10] 1353 	pop	af
                           1354 ;./my/pres.h:58: for (gpit = 0; gpit < 3; gpit ++) 
   0377 21r06r00      [10] 1355 	ld	hl,#_gpit + 0
   037A 36 00         [10] 1356 	ld	(hl), #0x00
   037C 11r65r02      [10] 1357 	ld	de,#_level_done+0
   037F                    1358 00127$:
                           1359 ;./my/pres.h:59: if (level_done [gpit]) HW_setTileatXY (21, (gpit << 1) + 15, 10);
   037F 2Ar06r00      [16] 1360 	ld	hl,(_gpit)
   0382 26 00         [ 7] 1361 	ld	h,#0x00
   0384 19            [11] 1362 	add	hl,de
   0385 7E            [ 7] 1363 	ld	a,(hl)
   0386 B7            [ 4] 1364 	or	a, a
   0387 28 18         [12] 1365 	jr	Z,00128$
   0389 3Ar06r00      [13] 1366 	ld	a,(#_gpit + 0)
   038C 87            [ 4] 1367 	add	a, a
   038D C6 0F         [ 7] 1368 	add	a, #0x0F
   038F 47            [ 4] 1369 	ld	b,a
   0390 D5            [11] 1370 	push	de
   0391 3E 0A         [ 7] 1371 	ld	a,#0x0A
   0393 F5            [11] 1372 	push	af
   0394 33            [ 6] 1373 	inc	sp
   0395 C5            [11] 1374 	push	bc
   0396 33            [ 6] 1375 	inc	sp
   0397 3E 15         [ 7] 1376 	ld	a,#0x15
   0399 F5            [11] 1377 	push	af
   039A 33            [ 6] 1378 	inc	sp
   039B CDr00r00      [17] 1379 	call	_SG_setTileatXY
   039E F1            [10] 1380 	pop	af
   039F 33            [ 6] 1381 	inc	sp
   03A0 D1            [10] 1382 	pop	de
   03A1                    1383 00128$:
                           1384 ;./my/pres.h:58: for (gpit = 0; gpit < 3; gpit ++) 
   03A1 21r06r00      [10] 1385 	ld	hl, #_gpit+0
   03A4 34            [11] 1386 	inc	(hl)
   03A5 3Ar06r00      [13] 1387 	ld	a,(#_gpit + 0)
   03A8 D6 03         [ 7] 1388 	sub	a, #0x03
   03AA 38 D3         [12] 1389 	jr	C,00127$
                           1390 ;./my/pres.h:61: bat_in ();
   03AC CDr94r02      [17] 1391 	call	_bat_in
                           1392 ;./my/pres.h:63: PSGPlay (MUSIC_TITLE);
   03AF 21r00r00      [10] 1393 	ld	hl,#_m_n_title_psg
   03B2 E5            [11] 1394 	push	hl
   03B3 CDr00r00      [17] 1395 	call	_PSGPlay
   03B6 F1            [10] 1396 	pop	af
                           1397 ;./my/pres.h:64: while (1) {
   03B7                    1398 00120$:
                           1399 ;./my/pres.h:65: update_cycle ();
   03B7 CDr00r00      [17] 1400 	call	_update_cycle
                           1401 ;./my/pres.h:66: HW_addMetaSprite1x1 (80, 116 + (level << 4), spr_player [game_puri]);
   03BA FD 21r5Cr02   [14] 1402 	ld	iy,#_game_puri
   03BE FD 6E 00      [19] 1403 	ld	l,0 (iy)
   03C1 26 00         [ 7] 1404 	ld	h,#0x00
   03C3 29            [11] 1405 	add	hl, hl
   03C4 11r9Dr00      [10] 1406 	ld	de,#_spr_player
   03C7 19            [11] 1407 	add	hl,de
   03C8 5E            [ 7] 1408 	ld	e,(hl)
   03C9 23            [ 6] 1409 	inc	hl
   03CA 56            [ 7] 1410 	ld	d,(hl)
   03CB 3ArB5r01      [13] 1411 	ld	a,(#_level + 0)
   03CE 07            [ 4] 1412 	rlca
   03CF 07            [ 4] 1413 	rlca
   03D0 07            [ 4] 1414 	rlca
   03D1 07            [ 4] 1415 	rlca
   03D2 E6 F0         [ 7] 1416 	and	a,#0xF0
   03D4 C6 74         [ 7] 1417 	add	a, #0x74
   03D6 D5            [11] 1418 	push	de
   03D7 57            [ 4] 1419 	ld	d,a
   03D8 1E 50         [ 7] 1420 	ld	e,#0x50
   03DA D5            [11] 1421 	push	de
   03DB CDr00r00      [17] 1422 	call	_SG_addMetaSprite1x1
   03DE F1            [10] 1423 	pop	af
   03DF F1            [10] 1424 	pop	af
                           1425 ;./my/pres.h:67: pad_read ();
   03E0 CDr00r00      [17] 1426 	call	_pad_read
                           1427 ;./my/pres.h:68: rda = level;
   03E3 3ArB5r01      [13] 1428 	ld	a,(#_level + 0)
   03E6 32r16r00      [13] 1429 	ld	(#_rda + 0),a
                           1430 ;./my/pres.h:69: if (pad_this_frame & PAD_DOWN) {
   03E9 21r05r00      [10] 1431 	ld	hl,#_pad_this_frame+0
   03EC CB 4E         [12] 1432 	bit	1, (hl)
   03EE 28 10         [12] 1433 	jr	Z,00107$
                           1434 ;./my/pres.h:70: ++ level; if (level == 3) level = 0;
   03F0 21rB5r01      [10] 1435 	ld	hl, #_level+0
   03F3 34            [11] 1436 	inc	(hl)
   03F4 3ArB5r01      [13] 1437 	ld	a,(#_level + 0)
   03F7 D6 03         [ 7] 1438 	sub	a, #0x03
   03F9 20 05         [12] 1439 	jr	NZ,00107$
   03FB 21rB5r01      [10] 1440 	ld	hl,#_level + 0
   03FE 36 00         [10] 1441 	ld	(hl), #0x00
   0400                    1442 00107$:
                           1443 ;./my/pres.h:72: if (pad_this_frame & PAD_UP) {
   0400 21r05r00      [10] 1444 	ld	hl,#_pad_this_frame+0
   0403 CB 46         [12] 1445 	bit	0, (hl)
   0405 28 11         [12] 1446 	jr	Z,00112$
                           1447 ;./my/pres.h:73: if (level) -- level; else level = 2;
   0407 3ArB5r01      [13] 1448 	ld	a,(#_level + 0)
   040A B7            [ 4] 1449 	or	a, a
   040B 28 06         [12] 1450 	jr	Z,00109$
   040D 21rB5r01      [10] 1451 	ld	hl, #_level+0
   0410 35            [11] 1452 	dec	(hl)
   0411 18 05         [12] 1453 	jr	00112$
   0413                    1454 00109$:
   0413 21rB5r01      [10] 1455 	ld	hl,#_level + 0
   0416 36 02         [10] 1456 	ld	(hl), #0x02
   0418                    1457 00112$:
                           1458 ;./my/pres.h:75: if (pad_this_frame & (PAD_LEFT|PAD_RIGHT)) {
   0418 3Ar05r00      [13] 1459 	ld	a,(#_pad_this_frame + 0)
   041B E6 0C         [ 7] 1460 	and	a, #0x0C
   041D 28 0A         [12] 1461 	jr	Z,00114$
                           1462 ;./my/pres.h:76: game_puri = CELL_PURI - game_puri;
   041F 21r5Cr02      [10] 1463 	ld	hl,#_game_puri
   0422 3E 0A         [ 7] 1464 	ld	a,#0x0A
   0424 96            [ 7] 1465 	sub	a, (hl)
   0425 77            [ 7] 1466 	ld	(hl),a
                           1467 ;./my/pres.h:77: logo ();
   0426 CDr3Br03      [17] 1468 	call	_logo
   0429                    1469 00114$:
                           1470 ;./my/pres.h:79: if (level != rda) PSGSFXPlay (SFX_USE, 1);
   0429 3ArB5r01      [13] 1471 	ld	a,(#_level + 0)
   042C FD 21r16r00   [14] 1472 	ld	iy,#_rda
   0430 FD 96 00      [19] 1473 	sub	a, 0 (iy)
   0433 28 0D         [12] 1474 	jr	Z,00116$
   0435 11r00r00      [10] 1475 	ld	de,#_s_03_use2_psg
   0438 3E 01         [ 7] 1476 	ld	a,#0x01
   043A F5            [11] 1477 	push	af
   043B 33            [ 6] 1478 	inc	sp
   043C D5            [11] 1479 	push	de
   043D CDr00r00      [17] 1480 	call	_PSGSFXPlay
   0440 F1            [10] 1481 	pop	af
   0441 33            [ 6] 1482 	inc	sp
   0442                    1483 00116$:
                           1484 ;./my/pres.h:80: if (pad_this_frame & PAD_1) break;
   0442 21r05r00      [10] 1485 	ld	hl,#_pad_this_frame+0
   0445 CB 66         [12] 1486 	bit	4, (hl)
   0447 CArB7r03      [10] 1487 	jp	Z,00120$
                           1488 ;./my/pres.h:83: if (pad0 & PAD_2) { level = 3; plife = 20; }
   044A 21r04r00      [10] 1489 	ld	hl,#_pad0+0
   044D CB 6E         [12] 1490 	bit	5, (hl)
   044F 28 0A         [12] 1491 	jr	Z,00123$
   0451 21rB5r01      [10] 1492 	ld	hl,#_level + 0
   0454 36 03         [10] 1493 	ld	(hl), #0x03
   0456 21r72r00      [10] 1494 	ld	hl,#_plife + 0
   0459 36 14         [10] 1495 	ld	(hl), #0x14
   045B                    1496 00123$:
                           1497 ;./my/pres.h:85: PSGSFXPlay (SFX_START, 1); delay (20);
   045B 11r00r00      [10] 1498 	ld	de,#_s_00_start2_psg+0
   045E 3E 01         [ 7] 1499 	ld	a,#0x01
   0460 F5            [11] 1500 	push	af
   0461 33            [ 6] 1501 	inc	sp
   0462 D5            [11] 1502 	push	de
   0463 CDr00r00      [17] 1503 	call	_PSGSFXPlay
   0466 F1            [10] 1504 	pop	af
   0467 33            [ 6] 1505 	inc	sp
   0468 3E 14         [ 7] 1506 	ld	a,#0x14
   046A F5            [11] 1507 	push	af
   046B 33            [ 6] 1508 	inc	sp
   046C CDr00r00      [17] 1509 	call	_delay
   046F 33            [ 6] 1510 	inc	sp
                           1511 ;./my/pres.h:87: bat_out ();
   0470 CDrA4r02      [17] 1512 	call	_bat_out
                           1513 ;./my/pres.h:90: if (game_puri) {
   0473 3Ar5Cr02      [13] 1514 	ld	a,(#_game_puri + 0)
   0476 B7            [ 4] 1515 	or	a, a
   0477 28 24         [12] 1516 	jr	Z,00125$
                           1517 ;./my/pres.h:91: __player_vy_falling_max = 48;
   0479 21r5Er02      [10] 1518 	ld	hl,#___player_vy_falling_max + 0
   047C 36 30         [10] 1519 	ld	(hl), #0x30
                           1520 ;./my/pres.h:92: __player_g              = 4;
   047E 21r5Fr02      [10] 1521 	ld	hl,#___player_g + 0
   0481 36 04         [10] 1522 	ld	(hl), #0x04
                           1523 ;./my/pres.h:93: __player_ay_jetpac      = 16;
   0483 21r60r02      [10] 1524 	ld	hl,#___player_ay_jetpac + 0
   0486 36 10         [10] 1525 	ld	(hl), #0x10
                           1526 ;./my/pres.h:94: __player_vy_jetpac_max  = 72;
   0488 21r61r02      [10] 1527 	ld	hl,#___player_vy_jetpac_max + 0
   048B 36 48         [10] 1528 	ld	(hl), #0x48
                           1529 ;./my/pres.h:95: __player_vx_max         = 128;
   048D 21r62r02      [10] 1530 	ld	hl,#___player_vx_max + 0
   0490 36 80         [10] 1531 	ld	(hl), #0x80
                           1532 ;./my/pres.h:96: __player_ax             = 8;
   0492 21r63r02      [10] 1533 	ld	hl,#___player_ax + 0
   0495 36 08         [10] 1534 	ld	(hl), #0x08
                           1535 ;./my/pres.h:97: __player_rx             = 12;
   0497 21r64r02      [10] 1536 	ld	hl,#___player_rx + 0
   049A 36 0C         [10] 1537 	ld	(hl), #0x0C
   049C C9            [10] 1538 	ret
   049D                    1539 00125$:
                           1540 ;./my/pres.h:99: __player_vy_falling_max = 64;
   049D 21r5Er02      [10] 1541 	ld	hl,#___player_vy_falling_max + 0
   04A0 36 40         [10] 1542 	ld	(hl), #0x40
                           1543 ;./my/pres.h:100: __player_g              = 4;
   04A2 21r5Fr02      [10] 1544 	ld	hl,#___player_g + 0
   04A5 36 04         [10] 1545 	ld	(hl), #0x04
                           1546 ;./my/pres.h:101: __player_ay_jetpac      = 12;
   04A7 21r60r02      [10] 1547 	ld	hl,#___player_ay_jetpac + 0
   04AA 36 0C         [10] 1548 	ld	(hl), #0x0C
                           1549 ;./my/pres.h:102: __player_vy_jetpac_max  = 64;
   04AC 21r61r02      [10] 1550 	ld	hl,#___player_vy_jetpac_max + 0
   04AF 36 40         [10] 1551 	ld	(hl), #0x40
                           1552 ;./my/pres.h:103: __player_vx_max         = 112;
   04B1 21r62r02      [10] 1553 	ld	hl,#___player_vx_max + 0
   04B4 36 70         [10] 1554 	ld	(hl), #0x70
                           1555 ;./my/pres.h:104: __player_ax             = 16;
   04B6 21r63r02      [10] 1556 	ld	hl,#___player_ax + 0
   04B9 36 10         [10] 1557 	ld	(hl), #0x10
                           1558 ;./my/pres.h:105: __player_rx             = 16;
   04BB 21r64r02      [10] 1559 	ld	hl,#___player_rx + 0
   04BE 36 10         [10] 1560 	ld	(hl), #0x10
   04C0 C9            [10] 1561 	ret
   04C1                    1562 ___str_0:
   04C1 40 20 32 30 31 38  1563 	.ascii "@ 2018 THE MOJON TWINS"
        20 54 48 45 20 4D
        4F 4A 4F 4E 20 54
        57 49 4E 53
   04D7 00                 1564 	.db 0x00
                           1565 ;./my/pres.h:109: void scr_game_over (void) {
                           1566 ;	---------------------------------
                           1567 ; Function scr_game_over
                           1568 ; ---------------------------------
   04D8                    1569 _scr_game_over::
                           1570 ;./my/pres.h:110: gp_gen = cuts_rle; unrle ();
   04D8 21r00r00      [10] 1571 	ld	hl,#_cuts_rle+0
   04DB 22r0Ar00      [16] 1572 	ld	(_gp_gen),hl
   04DE CDr00r00      [17] 1573 	call	_unrle
                           1574 ;./my/pres.h:111: _x = 10; _y = 8; pr_str ("GAME OVER!");
   04E1 21r00r00      [10] 1575 	ld	hl,#__x + 0
   04E4 36 0A         [10] 1576 	ld	(hl), #0x0A
   04E6 21r01r00      [10] 1577 	ld	hl,#__y + 0
   04E9 36 08         [10] 1578 	ld	(hl), #0x08
   04EB 21r2Ar05      [10] 1579 	ld	hl,#___str_1
   04EE E5            [11] 1580 	push	hl
   04EF CDr00r00      [17] 1581 	call	_pr_str
   04F2 F1            [10] 1582 	pop	af
                           1583 ;./my/pres.h:112: _x =  4; _y = 10; pr_str ("NICE TRY, BUT NO BANANA!");
   04F3 21r00r00      [10] 1584 	ld	hl,#__x + 0
   04F6 36 04         [10] 1585 	ld	(hl), #0x04
   04F8 21r01r00      [10] 1586 	ld	hl,#__y + 0
   04FB 36 0A         [10] 1587 	ld	(hl), #0x0A
   04FD 21r35r05      [10] 1588 	ld	hl,#___str_2
   0500 E5            [11] 1589 	push	hl
   0501 CDr00r00      [17] 1590 	call	_pr_str
   0504 F1            [10] 1591 	pop	af
                           1592 ;./my/pres.h:113: _x =  5; _y = 12; pr_str ("DO IT BETTER NEXT TIME");
   0505 21r00r00      [10] 1593 	ld	hl,#__x + 0
   0508 36 05         [10] 1594 	ld	(hl), #0x05
   050A 21r01r00      [10] 1595 	ld	hl,#__y + 0
   050D 36 0C         [10] 1596 	ld	(hl), #0x0C
   050F 21r4Er05      [10] 1597 	ld	hl,#___str_3
   0512 E5            [11] 1598 	push	hl
   0513 CDr00r00      [17] 1599 	call	_pr_str
   0516 F1            [10] 1600 	pop	af
                           1601 ;./my/pres.h:114: _x =  9; _y = 14; pr_str ("MISSION FAILED");
   0517 21r00r00      [10] 1602 	ld	hl,#__x + 0
   051A 36 09         [10] 1603 	ld	(hl), #0x09
   051C 21r01r00      [10] 1604 	ld	hl,#__y + 0
   051F 36 0E         [10] 1605 	ld	(hl), #0x0E
   0521 21r65r05      [10] 1606 	ld	hl,#___str_4
   0524 E5            [11] 1607 	push	hl
   0525 CDr00r00      [17] 1608 	call	_pr_str
   0528 F1            [10] 1609 	pop	af
   0529 C9            [10] 1610 	ret
   052A                    1611 ___str_1:
   052A 47 41 4D 45 20 4F  1612 	.ascii "GAME OVER!"
        56 45 52 21
   0534 00                 1613 	.db 0x00
   0535                    1614 ___str_2:
   0535 4E 49 43 45 20 54  1615 	.ascii "NICE TRY, BUT NO BANANA!"
        52 59 2C 20 42 55
        54 20 4E 4F 20 42
        41 4E 41 4E 41 21
   054D 00                 1616 	.db 0x00
   054E                    1617 ___str_3:
   054E 44 4F 20 49 54 20  1618 	.ascii "DO IT BETTER NEXT TIME"
        42 45 54 54 45 52
        20 4E 45 58 54 20
        54 49 4D 45
   0564 00                 1619 	.db 0x00
   0565                    1620 ___str_4:
   0565 4D 49 53 53 49 4F  1621 	.ascii "MISSION FAILED"
        4E 20 46 41 49 4C
        45 44
   0573 00                 1622 	.db 0x00
                           1623 ;./my/pres.h:117: void scr_sclear (void) {
                           1624 ;	---------------------------------
                           1625 ; Function scr_sclear
                           1626 ; ---------------------------------
   0574                    1627 _scr_sclear::
                           1628 ;./my/pres.h:118: gp_gen = cuts_rle; unrle ();
   0574 21r00r00      [10] 1629 	ld	hl,#_cuts_rle+0
   0577 22r0Ar00      [16] 1630 	ld	(_gp_gen),hl
   057A CDr00r00      [17] 1631 	call	_unrle
                           1632 ;./my/pres.h:119: _x = 9; _y = 8; pr_str ("CONGRATULATIONS!");
   057D 21r00r00      [10] 1633 	ld	hl,#__x + 0
   0580 36 09         [10] 1634 	ld	(hl), #0x09
   0582 21r01r00      [10] 1635 	ld	hl,#__y + 0
   0585 36 08         [10] 1636 	ld	(hl), #0x08
   0587 21rC6r05      [10] 1637 	ld	hl,#___str_5
   058A E5            [11] 1638 	push	hl
   058B CDr00r00      [17] 1639 	call	_pr_str
   058E F1            [10] 1640 	pop	af
                           1641 ;./my/pres.h:120: _x = 3; _y = 10; pr_str ("ALL CRISTALS ARE RECOVERED");
   058F 21r00r00      [10] 1642 	ld	hl,#__x + 0
   0592 36 03         [10] 1643 	ld	(hl), #0x03
   0594 21r01r00      [10] 1644 	ld	hl,#__y + 0
   0597 36 0A         [10] 1645 	ld	(hl), #0x0A
   0599 21rD7r05      [10] 1646 	ld	hl,#___str_6
   059C E5            [11] 1647 	push	hl
   059D CDr00r00      [17] 1648 	call	_pr_str
   05A0 F1            [10] 1649 	pop	af
                           1650 ;./my/pres.h:121: _x = 2; _y = 12; pr_str ("NOW YOU CAN GET BACK TO YOUR");
   05A1 21r00r00      [10] 1651 	ld	hl,#__x + 0
   05A4 36 02         [10] 1652 	ld	(hl), #0x02
   05A6 21r01r00      [10] 1653 	ld	hl,#__y + 0
   05A9 36 0C         [10] 1654 	ld	(hl), #0x0C
   05AB 21rF2r05      [10] 1655 	ld	hl,#___str_7
   05AE E5            [11] 1656 	push	hl
   05AF CDr00r00      [17] 1657 	call	_pr_str
   05B2 F1            [10] 1658 	pop	af
                           1659 ;./my/pres.h:122: _x = 3; _y = 14; pr_str ("BASE AND HAVE A GOOD REST!");	
   05B3 21r00r00      [10] 1660 	ld	hl,#__x + 0
   05B6 36 03         [10] 1661 	ld	(hl), #0x03
   05B8 21r01r00      [10] 1662 	ld	hl,#__y + 0
   05BB 36 0E         [10] 1663 	ld	(hl), #0x0E
   05BD 21r0Fr06      [10] 1664 	ld	hl,#___str_8
   05C0 E5            [11] 1665 	push	hl
   05C1 CDr00r00      [17] 1666 	call	_pr_str
   05C4 F1            [10] 1667 	pop	af
   05C5 C9            [10] 1668 	ret
   05C6                    1669 ___str_5:
   05C6 43 4F 4E 47 52 41  1670 	.ascii "CONGRATULATIONS!"
        54 55 4C 41 54 49
        4F 4E 53 21
   05D6 00                 1671 	.db 0x00
   05D7                    1672 ___str_6:
   05D7 41 4C 4C 20 43 52  1673 	.ascii "ALL CRISTALS ARE RECOVERED"
        49 53 54 41 4C 53
        20 41 52 45 20 52
        45 43 4F 56 45 52
        45 44
   05F1 00                 1674 	.db 0x00
   05F2                    1675 ___str_7:
   05F2 4E 4F 57 20 59 4F  1676 	.ascii "NOW YOU CAN GET BACK TO YOUR"
        55 20 43 41 4E 20
        47 45 54 20 42 41
        43 4B 20 54 4F 20
        59 4F 55 52
   060E 00                 1677 	.db 0x00
   060F                    1678 ___str_8:
   060F 42 41 53 45 20 41  1679 	.ascii "BASE AND HAVE A GOOD REST!"
        4E 44 20 48 41 56
        45 20 41 20 47 4F
        4F 44 20 52 45 53
        54 21
   0629 00                 1680 	.db 0x00
                           1681 ;./my/pres.h:125: void game_ending (void) {
                           1682 ;	---------------------------------
                           1683 ; Function game_ending
                           1684 ; ---------------------------------
   062A                    1685 _game_ending::
                           1686 ;./my/pres.h:126: gp_gen = ending_rle; unrle ();
   062A 21r00r00      [10] 1687 	ld	hl,#_ending_rle+0
   062D 22r0Ar00      [16] 1688 	ld	(_gp_gen),hl
   0630 CDr00r00      [17] 1689 	call	_unrle
                           1690 ;./my/pres.h:127: _x = 2; _y = 13; pr_str ("'WE ARE SET, PACO!'%%'SO IT SEEMS, PURI! LET'S GO%%BACK TO OUR PLANET NOW!'");
   0633 21r00r00      [10] 1691 	ld	hl,#__x + 0
   0636 36 02         [10] 1692 	ld	(hl), #0x02
   0638 21r01r00      [10] 1693 	ld	hl,#__y + 0
   063B 36 0D         [10] 1694 	ld	(hl), #0x0D
   063D 21rA0r06      [10] 1695 	ld	hl,#___str_9
   0640 E5            [11] 1696 	push	hl
   0641 CDr00r00      [17] 1697 	call	_pr_str
   0644 F1            [10] 1698 	pop	af
                           1699 ;./my/pres.h:128: _x = 10; _y = 20; pr_str ("T H E  E N D");
   0645 21r00r00      [10] 1700 	ld	hl,#__x + 0
   0648 36 0A         [10] 1701 	ld	(hl), #0x0A
   064A 21r01r00      [10] 1702 	ld	hl,#__y + 0
   064D 36 14         [10] 1703 	ld	(hl), #0x14
   064F 21rECr06      [10] 1704 	ld	hl,#___str_10
   0652 E5            [11] 1705 	push	hl
   0653 CDr00r00      [17] 1706 	call	_pr_str
   0656 F1            [10] 1707 	pop	af
                           1708 ;./my/pres.h:129: unpack_bg_patterns (tsE_patterns_c, tsE_colours_c, 64*8, 7);
   0657 11r00r00      [10] 1709 	ld	de,#_tsE_patterns_c
   065A 3E 07         [ 7] 1710 	ld	a,#0x07
   065C F5            [11] 1711 	push	af
   065D 33            [ 6] 1712 	inc	sp
   065E 21 00 02      [10] 1713 	ld	hl,#0x0200
   0661 E5            [11] 1714 	push	hl
   0662 21r00r00      [10] 1715 	ld	hl,#_tsE_colours_c
   0665 E5            [11] 1716 	push	hl
   0666 D5            [11] 1717 	push	de
   0667 CDr00r00      [17] 1718 	call	_unpack_bg_patterns
   066A 21 07 00      [10] 1719 	ld	hl,#7
   066D 39            [11] 1720 	add	hl,sp
   066E F9            [ 6] 1721 	ld	sp,hl
                           1722 ;./my/pres.h:130: bat_in ();
   066F CDr94r02      [17] 1723 	call	_bat_in
                           1724 ;./my/pres.h:131: PSGPlay (MUSIC_ENDING);
   0672 21r00r00      [10] 1725 	ld	hl,#_m_n_ending_psg
   0675 E5            [11] 1726 	push	hl
   0676 CDr00r00      [17] 1727 	call	_PSGPlay
   0679 F1            [10] 1728 	pop	af
                           1729 ;./my/pres.h:132: while (1) {
   067A                    1730 00104$:
                           1731 ;./my/pres.h:133: pad_read ();
   067A CDr00r00      [17] 1732 	call	_pad_read
                           1733 ;./my/pres.h:134: if (pad_this_frame & (PAD_A|PAD_B|PAD_START)) break;
   067D 3Ar05r00      [13] 1734 	ld	a,(#_pad_this_frame + 0)
   0680 E6 30         [ 7] 1735 	and	a, #0x30
   0682 28 F6         [12] 1736 	jr	Z,00104$
                           1737 ;./my/pres.h:136: bat_out ();	
   0684 CDrA4r02      [17] 1738 	call	_bat_out
                           1739 ;./my/pres.h:137: unpack_bg_patterns (tsALL_patterns_c, tsALL_colours_c, 64*8, 7);
   0687 11r00r00      [10] 1740 	ld	de,#_tsALL_patterns_c
   068A 3E 07         [ 7] 1741 	ld	a,#0x07
   068C F5            [11] 1742 	push	af
   068D 33            [ 6] 1743 	inc	sp
   068E 21 00 02      [10] 1744 	ld	hl,#0x0200
   0691 E5            [11] 1745 	push	hl
   0692 21r00r00      [10] 1746 	ld	hl,#_tsALL_colours_c
   0695 E5            [11] 1747 	push	hl
   0696 D5            [11] 1748 	push	de
   0697 CDr00r00      [17] 1749 	call	_unpack_bg_patterns
   069A 21 07 00      [10] 1750 	ld	hl,#7
   069D 39            [11] 1751 	add	hl,sp
   069E F9            [ 6] 1752 	ld	sp,hl
   069F C9            [10] 1753 	ret
   06A0                    1754 ___str_9:
   06A0 27 57 45 20 41 52  1755 	.ascii "'WE ARE SET, PACO!'%%'SO IT SEEMS, PURI! LET'S GO%%BACK TO O"
        45 20 53 45 54 2C
        20 50 41 43 4F 21
        27 25 25 27 53 4F
        20 49 54 20 53 45
        45 4D 53 2C 20 50
        55 52 49 21 20 4C
        45 54 27 53 20 47
        4F 25 25 42 41 43
        4B 20 54 4F 20 4F
   06DC 55 52 20 50 4C 41  1756 	.ascii "UR PLANET NOW!'"
        4E 45 54 20 4E 4F
        57 21 27
   06EB 00                 1757 	.db 0x00
   06EC                    1758 ___str_10:
   06EC 54 20 48 20 45 20  1759 	.ascii "T H E  E N D"
        20 45 20 4E 20 44
   06F8 00                 1760 	.db 0x00
                           1761 ;./my/pres.h:140: void credits (void) {
                           1762 ;	---------------------------------
                           1763 ; Function credits
                           1764 ; ---------------------------------
   06F9                    1765 _credits::
                           1766 ;./my/pres.h:141: cls ();
   06F9 CDr00r00      [17] 1767 	call	_cls
                           1768 ;./my/pres.h:143: _x = 0; _y = 0; if (ntsc) pr_str ("NTSC"); else pr_str ("PAL");
   06FC 21r00r00      [10] 1769 	ld	hl,#__x + 0
   06FF 36 00         [10] 1770 	ld	(hl), #0x00
   0701 21r01r00      [10] 1771 	ld	hl,#__y + 0
   0704 36 00         [10] 1772 	ld	(hl), #0x00
   0706 3Ar8Fr00      [13] 1773 	ld	a,(#_ntsc + 0)
   0709 B7            [ 4] 1774 	or	a, a
   070A 28 0A         [12] 1775 	jr	Z,00102$
   070C 21r70r07      [10] 1776 	ld	hl,#___str_11
   070F E5            [11] 1777 	push	hl
   0710 CDr00r00      [17] 1778 	call	_pr_str
   0713 F1            [10] 1779 	pop	af
   0714 18 08         [12] 1780 	jr	00103$
   0716                    1781 00102$:
   0716 21r75r07      [10] 1782 	ld	hl,#___str_12
   0719 E5            [11] 1783 	push	hl
   071A CDr00r00      [17] 1784 	call	_pr_str
   071D F1            [10] 1785 	pop	af
   071E                    1786 00103$:
                           1787 ;./my/pres.h:145: rds16 = 0; rdy = 240;
   071E 21 00 00      [10] 1788 	ld	hl,#0x0000
   0721 22r08r00      [16] 1789 	ld	(_rds16),hl
   0724 21r13r00      [10] 1790 	ld	hl,#_rdy + 0
   0727 36 F0         [10] 1791 	ld	(hl), #0xF0
                           1792 ;./my/pres.h:146: _x = 0; _y = 18; 
   0729 21r00r00      [10] 1793 	ld	hl,#__x + 0
   072C 36 00         [10] 1794 	ld	(hl), #0x00
   072E 21r01r00      [10] 1795 	ld	hl,#__y + 0
   0731 36 12         [10] 1796 	ld	(hl), #0x12
                           1797 ;./my/pres.h:147: pr_str ("       JET PACO & JET PURI%%         ORIGINAL GAME:%     @ 2013 THE MOJON TWINS%       REPROGRAMMED GAME:%     @ 2018 THE MOJON TWINS");
   0733 21r79r07      [10] 1798 	ld	hl,#___str_13+0
   0736 E5            [11] 1799 	push	hl
   0737 CDr00r00      [17] 1800 	call	_pr_str
                           1801 ;./my/pres.h:149: HW_displayOn ();
   073A 21 40 01      [10] 1802 	ld	hl, #0x0140
   073D E3            [19] 1803 	ex	(sp),hl
   073E CDr00r00      [17] 1804 	call	_SG_VDPturnOnFeature
   0741 F1            [10] 1805 	pop	af
                           1806 ;./my/pres.h:151: while (!(HW_getKeysStatus () & PAD_START) && rds16 < 300) {
   0742                    1807 00105$:
   0742 CDr00r00      [17] 1808 	call	_SG_getKeysStatus
   0745 CB 65         [ 8] 1809 	bit	4, l
   0747 20 1E         [12] 1810 	jr	NZ,00107$
   0749 3Ar08r00      [13] 1811 	ld	a,(#_rds16 + 0)
   074C D6 2C         [ 7] 1812 	sub	a, #0x2C
   074E 3Ar09r00      [13] 1813 	ld	a,(#_rds16 + 1)
   0751 17            [ 4] 1814 	rla
   0752 3F            [ 4] 1815 	ccf
   0753 1F            [ 4] 1816 	rra
   0754 DE 81         [ 7] 1817 	sbc	a, #0x81
   0756 30 0F         [12] 1818 	jr	NC,00107$
                           1819 ;./my/pres.h:154: update_cycle ();
   0758 CDr00r00      [17] 1820 	call	_update_cycle
                           1821 ;./my/pres.h:155: rds16 ++;
   075B 21r08r00      [10] 1822 	ld	hl, #_rds16+0
   075E 34            [11] 1823 	inc	(hl)
   075F 20 E1         [12] 1824 	jr	NZ,00105$
   0761 21r09r00      [10] 1825 	ld	hl, #_rds16+1
   0764 34            [11] 1826 	inc	(hl)
   0765 18 DB         [12] 1827 	jr	00105$
   0767                    1828 00107$:
                           1829 ;./my/pres.h:158: HW_displayOff ();
   0767 21 40 01      [10] 1830 	ld	hl,#0x0140
   076A E5            [11] 1831 	push	hl
   076B CDr00r00      [17] 1832 	call	_SG_VDPturnOffFeature
   076E F1            [10] 1833 	pop	af
   076F C9            [10] 1834 	ret
   0770                    1835 ___str_11:
   0770 4E 54 53 43        1836 	.ascii "NTSC"
   0774 00                 1837 	.db 0x00
   0775                    1838 ___str_12:
   0775 50 41 4C           1839 	.ascii "PAL"
   0778 00                 1840 	.db 0x00
   0779                    1841 ___str_13:
   0779 20 20 20 20 20 20  1842 	.ascii "       JET PACO & JET PURI%%         ORIGINAL GAME:%     @ 2"
        20 4A 45 54 20 50
        41 43 4F 20 26 20
        4A 45 54 20 50 55
        52 49 25 25 20 20
        20 20 20 20 20 20
        20 4F 52 49 47 49
        4E 41 4C 20 47 41
        4D 45 3A 25 20 20
        20 20 20 40 20 32
   07B5 30 31 33 20 54 48  1843 	.ascii "013 THE MOJON TWINS%       REPROGRAMMED GAME:%     @ 2018 TH"
        45 20 4D 4F 4A 4F
        4E 20 54 57 49 4E
        53 25 20 20 20 20
        20 20 20 52 45 50
        52 4F 47 52 41 4D
        4D 45 44 20 47 41
        4D 45 3A 25 20 20
        20 20 20 40 20 32
        30 31 38 20 54 48
   07F1 45 20 4D 4F 4A 4F  1844 	.ascii "E MOJON TWINS"
        4E 20 54 57 49 4E
        53
   07FE 00                 1845 	.db 0x00
                           1846 ;./mainloop/flickscreen.h:7: void flickscreen_do_horizontal (void) {
                           1847 ;	---------------------------------
                           1848 ; Function flickscreen_do_horizontal
                           1849 ; ---------------------------------
   07FF                    1850 _flickscreen_do_horizontal::
                           1851 ;./mainloop/flickscreen.h:8: if (prx == 4 && 
   07FF 3Ar53r00      [13] 1852 	ld	a,(#_prx + 0)
   0802 D6 04         [ 7] 1853 	sub	a, #0x04
   0804 20 12         [12] 1854 	jr	NZ,00105$
                           1855 ;./mainloop/flickscreen.h:14: ) {
   0806 3Ar50r00      [13] 1856 	ld	a,(#_pvx + 1)
   0809 CB 7F         [ 8] 1857 	bit	7,a
   080B 28 0B         [12] 1858 	jr	Z,00105$
                           1859 ;./mainloop/flickscreen.h:15: -- n_pant;
   080D 21rB7r01      [10] 1860 	ld	hl, #_n_pant+0
   0810 35            [11] 1861 	dec	(hl)
                           1862 ;./mainloop/flickscreen.h:16: px = 244 << FIXBITS;
   0811 21 00 3D      [10] 1863 	ld	hl,#0x3D00
   0814 22r4Br00      [16] 1864 	ld	(_px),hl
   0817 C9            [10] 1865 	ret
   0818                    1866 00105$:
                           1867 ;./mainloop/flickscreen.h:17: } else if (prx == 244 && 
   0818 3Ar53r00      [13] 1868 	ld	a,(#_prx + 0)
   081B D6 F4         [ 7] 1869 	sub	a, #0xF4
   081D C0            [11] 1870 	ret	NZ
                           1871 ;./mainloop/flickscreen.h:23: ) {
   081E AF            [ 4] 1872 	xor	a, a
   081F FD 21r4Fr00   [14] 1873 	ld	iy,#_pvx
   0823 FD BE 00      [19] 1874 	cp	a, 0 (iy)
   0826 FD 21r4Fr00   [14] 1875 	ld	iy,#_pvx
   082A FD 9E 01      [19] 1876 	sbc	a, 1 (iy)
   082D E2r32r08      [10] 1877 	jp	PO, 00130$
   0830 EE 80         [ 7] 1878 	xor	a, #0x80
   0832                    1879 00130$:
   0832 F0            [11] 1880 	ret	P
                           1881 ;./mainloop/flickscreen.h:24: ++ n_pant;
   0833 21rB7r01      [10] 1882 	ld	hl, #_n_pant+0
   0836 34            [11] 1883 	inc	(hl)
                           1884 ;./mainloop/flickscreen.h:25: px = 4 << FIXBITS;
   0837 21 00 01      [10] 1885 	ld	hl,#0x0100
   083A 22r4Br00      [16] 1886 	ld	(_px),hl
   083D C9            [10] 1887 	ret
                           1888 ;./mainloop/flickscreen.h:29: void flickscreen_do_vertical (void) {
                           1889 ;	---------------------------------
                           1890 ; Function flickscreen_do_vertical
                           1891 ; ---------------------------------
   083E                    1892 _flickscreen_do_vertical::
                           1893 ;./mainloop/flickscreen.h:42: if (pry == 0 && pvy < 0 && n_pant >= c_map_w) {
   083E 3Ar54r00      [13] 1894 	ld	a,(#_pry + 0)
   0841 B7            [ 4] 1895 	or	a, a
   0842 20 26         [12] 1896 	jr	NZ,00106$
   0844 3Ar52r00      [13] 1897 	ld	a,(#_pvy + 1)
   0847 CB 7F         [ 8] 1898 	bit	7,a
   0849 28 1F         [12] 1899 	jr	Z,00106$
   084B 21r7Cr00      [10] 1900 	ld	hl,#_c_map_w
   084E 3ArB7r01      [13] 1901 	ld	a,(#_n_pant + 0)
   0851 96            [ 7] 1902 	sub	a, (hl)
   0852 38 16         [12] 1903 	jr	C,00106$
                           1904 ;./mainloop/flickscreen.h:43: n_pant -= c_map_w;
   0854 21r7Cr00      [10] 1905 	ld	hl,#_c_map_w
   0857 D5            [11] 1906 	push	de
   0858 FD 21rB7r01   [14] 1907 	ld	iy,#_n_pant
   085C FD E5         [15] 1908 	push	iy
   085E D1            [10] 1909 	pop	de
   085F 1A            [ 7] 1910 	ld	a,(de)
   0860 96            [ 7] 1911 	sub	a, (hl)
   0861 12            [ 7] 1912 	ld	(de),a
   0862 D1            [10] 1913 	pop	de
                           1914 ;./mainloop/flickscreen.h:44: py = 192 << FIXBITS;
   0863 21 00 30      [10] 1915 	ld	hl,#0x3000
   0866 22r4Dr00      [16] 1916 	ld	(_py),hl
   0869 C9            [10] 1917 	ret
   086A                    1918 00106$:
                           1919 ;./mainloop/flickscreen.h:48: } else if (pry >= 192 && pvy > 0 && n_pant < c_map_size - c_map_w) {
   086A 3Ar54r00      [13] 1920 	ld	a,(#_pry + 0)
   086D D6 C0         [ 7] 1921 	sub	a, #0xC0
   086F D8            [11] 1922 	ret	C
   0870 AF            [ 4] 1923 	xor	a, a
   0871 FD 21r51r00   [14] 1924 	ld	iy,#_pvy
   0875 FD BE 00      [19] 1925 	cp	a, 0 (iy)
   0878 FD 21r51r00   [14] 1926 	ld	iy,#_pvy
   087C FD 9E 01      [19] 1927 	sbc	a, 1 (iy)
   087F E2r84r08      [10] 1928 	jp	PO, 00136$
   0882 EE 80         [ 7] 1929 	xor	a, #0x80
   0884                    1930 00136$:
   0884 F0            [11] 1931 	ret	P
   0885 21r7Er00      [10] 1932 	ld	hl,#_c_map_size + 0
   0888 5E            [ 7] 1933 	ld	e, (hl)
   0889 16 00         [ 7] 1934 	ld	d,#0x00
   088B FD 21r7Cr00   [14] 1935 	ld	iy,#_c_map_w
   088F FD 6E 00      [19] 1936 	ld	l,0 (iy)
   0892 26 00         [ 7] 1937 	ld	h,#0x00
   0894 7B            [ 4] 1938 	ld	a,e
   0895 95            [ 4] 1939 	sub	a, l
   0896 5F            [ 4] 1940 	ld	e,a
   0897 7A            [ 4] 1941 	ld	a,d
   0898 9C            [ 4] 1942 	sbc	a, h
   0899 57            [ 4] 1943 	ld	d,a
   089A FD 21rB7r01   [14] 1944 	ld	iy,#_n_pant
   089E FD 66 00      [19] 1945 	ld	h,0 (iy)
   08A1 2E 00         [ 7] 1946 	ld	l,#0x00
   08A3 7C            [ 4] 1947 	ld	a,h
   08A4 93            [ 4] 1948 	sub	a, e
   08A5 7D            [ 4] 1949 	ld	a,l
   08A6 9A            [ 4] 1950 	sbc	a, d
   08A7 E2rACr08      [10] 1951 	jp	PO, 00137$
   08AA EE 80         [ 7] 1952 	xor	a, #0x80
   08AC                    1953 00137$:
   08AC F0            [11] 1954 	ret	P
                           1955 ;./mainloop/flickscreen.h:49: n_pant += c_map_w;
   08AD 21r7Cr00      [10] 1956 	ld	hl,#_c_map_w
   08B0 D5            [11] 1957 	push	de
   08B1 FD 21rB7r01   [14] 1958 	ld	iy,#_n_pant
   08B5 FD E5         [15] 1959 	push	iy
   08B7 D1            [10] 1960 	pop	de
   08B8 1A            [ 7] 1961 	ld	a,(de)
   08B9 86            [ 7] 1962 	add	a, (hl)
   08BA 12            [ 7] 1963 	ld	(de),a
   08BB D1            [10] 1964 	pop	de
                           1965 ;./mainloop/flickscreen.h:50: py = 0;
   08BC 21 00 00      [10] 1966 	ld	hl,#0x0000
   08BF 22r4Dr00      [16] 1967 	ld	(_py),hl
   08C2 C9            [10] 1968 	ret
                           1969 ;./mainloop.h:6: void player_frame_selector (void) {
                           1970 ;	---------------------------------
                           1971 ; Function player_frame_selector
                           1972 ; ---------------------------------
   08C3                    1973 _player_frame_selector::
                           1974 ;./my/player_frame_selector.h:14: if (ppossee || pgotten) {
   08C3 3Ar60r00      [13] 1975 	ld	a,(#_ppossee + 0)
   08C6 B7            [ 4] 1976 	or	a, a
   08C7 20 07         [12] 1977 	jr	NZ,00112$
   08C9 3Ar5Fr00      [13] 1978 	ld	a,(#_pgotten + 0)
   08CC B7            [ 4] 1979 	or	a, a
   08CD CAr56r09      [10] 1980 	jp	Z,00113$
   08D0                    1981 00112$:
                           1982 ;./my/player_frame_selector.h:16: if (pvx > PLAYER_VX_MIN || pvx < -PLAYER_VX_MIN) {
   08D0 FD 21r63r02   [14] 1983 	ld	iy,#___player_ax
   08D4 FD 6E 00      [19] 1984 	ld	l,0 (iy)
   08D7 26 00         [ 7] 1985 	ld	h,#0x00
   08D9 29            [11] 1986 	add	hl, hl
   08DA 29            [11] 1987 	add	hl, hl
   08DB 55            [ 4] 1988 	ld	d,l
   08DC 5C            [ 4] 1989 	ld	e,h
   08DD 7A            [ 4] 1990 	ld	a,d
   08DE FD 21r4Fr00   [14] 1991 	ld	iy,#_pvx
   08E2 FD 96 00      [19] 1992 	sub	a, 0 (iy)
   08E5 7B            [ 4] 1993 	ld	a,e
   08E6 FD 21r4Fr00   [14] 1994 	ld	iy,#_pvx
   08EA FD 9E 01      [19] 1995 	sbc	a, 1 (iy)
   08ED E2rF2r08      [10] 1996 	jp	PO, 00138$
   08F0 EE 80         [ 7] 1997 	xor	a, #0x80
   08F2                    1998 00138$:
   08F2 FAr10r09      [10] 1999 	jp	M,00108$
   08F5 AF            [ 4] 2000 	xor	a, a
   08F6 92            [ 4] 2001 	sub	a, d
   08F7 57            [ 4] 2002 	ld	d,a
   08F8 3E 00         [ 7] 2003 	ld	a, #0x00
   08FA 9B            [ 4] 2004 	sbc	a, e
   08FB 5F            [ 4] 2005 	ld	e,a
   08FC 3Ar4Fr00      [13] 2006 	ld	a,(#_pvx + 0)
   08FF 92            [ 4] 2007 	sub	a, d
   0900 FD 21r4Fr00   [14] 2008 	ld	iy,#_pvx
   0904 FD 7E 01      [19] 2009 	ld	a,1 (iy)
   0907 9B            [ 4] 2010 	sbc	a, e
   0908 E2r0Dr09      [10] 2011 	jp	PO, 00139$
   090B EE 80         [ 7] 2012 	xor	a, #0x80
   090D                    2013 00139$:
   090D F2r4Ar09      [10] 2014 	jp	P,00109$
   0910                    2015 00108$:
                           2016 ;./my/player_frame_selector.h:18: if ((prx >> 3) != ol_prx) { 
   0910 21r53r00      [10] 2017 	ld	hl,#_prx + 0
   0913 56            [ 7] 2018 	ld	d, (hl)
   0914 CB 3A         [ 8] 2019 	srl	d
   0916 CB 3A         [ 8] 2020 	srl	d
   0918 CB 3A         [ 8] 2021 	srl	d
                           2022 ;./my/player_frame_selector.h:17: if (game_puri) {
   091A 3Ar5Cr02      [13] 2023 	ld	a,(#_game_puri + 0)
   091D B7            [ 4] 2024 	or	a, a
   091E 28 22         [12] 2025 	jr	Z,00106$
                           2026 ;./my/player_frame_selector.h:18: if ((prx >> 3) != ol_prx) { 
   0920 3Ar5Dr02      [13] 2027 	ld	a,(#_ol_prx + 0)
   0923 92            [ 4] 2028 	sub	a, d
   0924 28 14         [12] 2029 	jr	Z,00104$
                           2030 ;./my/player_frame_selector.h:19: pfr ++; if (pfr == 3) pfr = 0;
   0926 21r58r00      [10] 2031 	ld	hl, #_pfr+0
   0929 34            [11] 2032 	inc	(hl)
   092A 3Ar58r00      [13] 2033 	ld	a,(#_pfr + 0)
   092D D6 03         [ 7] 2034 	sub	a, #0x03
   092F 20 05         [12] 2035 	jr	NZ,00102$
   0931 21r58r00      [10] 2036 	ld	hl,#_pfr + 0
   0934 36 00         [10] 2037 	ld	(hl), #0x00
   0936                    2038 00102$:
                           2039 ;./my/player_frame_selector.h:20: ol_prx = prx >> 3;
   0936 21r5Dr02      [10] 2040 	ld	hl,#_ol_prx + 0
   0939 72            [ 7] 2041 	ld	(hl), d
   093A                    2042 00104$:
                           2043 ;./my/player_frame_selector.h:23: psprid = pfr;
   093A 3Ar58r00      [13] 2044 	ld	a,(#_pfr + 0)
   093D 32r59r00      [13] 2045 	ld	(#_psprid + 0),a
   0940 18 19         [12] 2046 	jr	00114$
   0942                    2047 00106$:
                           2048 ;./my/player_frame_selector.h:25: psprid = CELL_WALK_CYCLE + ((prx >> 3) & 3);
   0942 7A            [ 4] 2049 	ld	a,d
   0943 E6 03         [ 7] 2050 	and	a, #0x03
   0945 32r59r00      [13] 2051 	ld	(#_psprid + 0),a
   0948 18 11         [12] 2052 	jr	00114$
   094A                    2053 00109$:
                           2054 ;./my/player_frame_selector.h:27: } else { psprid = CELL_IDLE; pfr = 0; }
   094A 21r59r00      [10] 2055 	ld	hl,#_psprid + 0
   094D 36 01         [10] 2056 	ld	(hl), #0x01
   094F 21r58r00      [10] 2057 	ld	hl,#_pfr + 0
   0952 36 00         [10] 2058 	ld	(hl), #0x00
   0954 18 05         [12] 2059 	jr	00114$
   0956                    2060 00113$:
                           2061 ;./my/player_frame_selector.h:28: } else psprid = CELL_AIRBORNE;
   0956 21r59r00      [10] 2062 	ld	hl,#_psprid + 0
   0959 36 04         [10] 2063 	ld	(hl), #0x04
   095B                    2064 00114$:
                           2065 ;./my/player_frame_selector.h:30: psprid += pfacing + game_puri;
   095B 21r5Cr02      [10] 2066 	ld	hl,#_game_puri
   095E 3Ar57r00      [13] 2067 	ld	a,(#_pfacing + 0)
   0961 86            [ 7] 2068 	add	a, (hl)
   0962 57            [ 4] 2069 	ld	d,a
   0963 21r59r00      [10] 2070 	ld	hl,#_psprid
   0966 7E            [ 7] 2071 	ld	a,(hl)
   0967 82            [ 4] 2072 	add	a, d
   0968 77            [ 7] 2073 	ld	(hl),a
   0969 C9            [10] 2074 	ret
                           2075 ;./mainloop.h:10: void game_init (void) {
                           2076 ;	---------------------------------
                           2077 ; Function game_init
                           2078 ; ---------------------------------
   096A                    2079 _game_init::
                           2080 ;./mainloop.h:12: win_level = game_over = 0;
   096A 21rBDr01      [10] 2081 	ld	hl,#_game_over + 0
   096D 36 00         [10] 2082 	ld	(hl), #0x00
   096F 21rBCr01      [10] 2083 	ld	hl,#_win_level + 0
   0972 36 00         [10] 2084 	ld	(hl), #0x00
                           2085 ;./mainloop/asset_setup.h:9: c_ts_tmaps = 	l_ts_tmaps [level];
   0974 FD 21rB5r01   [14] 2086 	ld	iy,#_level
   0978 FD 6E 00      [19] 2087 	ld	l,0 (iy)
   097B 26 00         [ 7] 2088 	ld	h,#0x00
   097D 29            [11] 2089 	add	hl, hl
   097E EB            [ 4] 2090 	ex	de,hl
   097F 21r6Br01      [10] 2091 	ld	hl,#_l_ts_tmaps
   0982 19            [11] 2092 	add	hl,de
   0983 7E            [ 7] 2093 	ld	a,(hl)
   0984 FD 21r7Fr00   [14] 2094 	ld	iy,#_c_ts_tmaps
   0988 FD 77 00      [19] 2095 	ld	0 (iy),a
   098B 23            [ 6] 2096 	inc	hl
   098C 7E            [ 7] 2097 	ld	a,(hl)
   098D 32r80r00      [13] 2098 	ld	(#_c_ts_tmaps + 1),a
                           2099 ;./mainloop/asset_setup.h:10: c_behs = 		l_behs [level];
   0990 21r73r01      [10] 2100 	ld	hl,#_l_behs
   0993 19            [11] 2101 	add	hl,de
   0994 7E            [ 7] 2102 	ld	a,(hl)
   0995 FD 21r81r00   [14] 2103 	ld	iy,#_c_behs
   0999 FD 77 00      [19] 2104 	ld	0 (iy),a
   099C 23            [ 6] 2105 	inc	hl
   099D 7E            [ 7] 2106 	ld	a,(hl)
   099E 32r82r00      [13] 2107 	ld	(#_c_behs + 1),a
                           2108 ;./mainloop/asset_setup.h:11: spr_enems = 	l_spr_enems [level];
   09A1 21r7Br01      [10] 2109 	ld	hl,#_l_spr_enems
   09A4 19            [11] 2110 	add	hl,de
   09A5 7E            [ 7] 2111 	ld	a,(hl)
   09A6 FD 21r83r00   [14] 2112 	ld	iy,#_spr_enems
   09AA FD 77 00      [19] 2113 	ld	0 (iy),a
   09AD 23            [ 6] 2114 	inc	hl
   09AE 7E            [ 7] 2115 	ld	a,(hl)
   09AF 32r84r00      [13] 2116 	ld	(#_spr_enems + 1),a
                           2117 ;./mainloop/asset_setup.h:13: c_map = 		l_map [level];
   09B2 21r83r01      [10] 2118 	ld	hl,#_l_map
   09B5 19            [11] 2119 	add	hl,de
   09B6 7E            [ 7] 2120 	ld	a,(hl)
   09B7 FD 21r85r00   [14] 2121 	ld	iy,#_c_map
   09BB FD 77 00      [19] 2122 	ld	0 (iy),a
   09BE 23            [ 6] 2123 	inc	hl
   09BF 7E            [ 7] 2124 	ld	a,(hl)
   09C0 FD 21r85r00   [14] 2125 	ld	iy,#_c_map
   09C4 FD 77 01      [19] 2126 	ld	1 (iy),a
                           2127 ;./mainloop/asset_setup.h:20: c_decos = 	l_decos [level];
   09C7 3ArB5r01      [13] 2128 	ld	a,(#_level + 0)
   09CA C6r8B         [ 7] 2129 	add	a, #<(_l_decos)
   09CC 4F            [ 4] 2130 	ld	c,a
   09CD 3E 00         [ 7] 2131 	ld	a,#0x00
   09CF CEs01         [ 7] 2132 	adc	a, #>(_l_decos)
   09D1 47            [ 4] 2133 	ld	b,a
   09D2 0A            [ 7] 2134 	ld	a,(bc)
   09D3 32r87r00      [13] 2135 	ld	(#_c_decos + 0),a
                           2136 ;./mainloop/asset_setup.h:28: c_enems = 		l_enems [level];
   09D6 21r8Fr01      [10] 2137 	ld	hl,#_l_enems
   09D9 19            [11] 2138 	add	hl,de
   09DA 7E            [ 7] 2139 	ld	a,(hl)
   09DB FD 21r8Ar00   [14] 2140 	ld	iy,#_c_enems
   09DF FD 77 00      [19] 2141 	ld	0 (iy),a
   09E2 23            [ 6] 2142 	inc	hl
   09E3 7E            [ 7] 2143 	ld	a,(hl)
   09E4 32r8Br00      [13] 2144 	ld	(#_c_enems + 1),a
                           2145 ;./mainloop/asset_setup.h:29: c_hotspots = 	l_hotspots [level];	
   09E7 21r97r01      [10] 2146 	ld	hl,#_l_hotspots
   09EA 19            [11] 2147 	add	hl,de
   09EB 7E            [ 7] 2148 	ld	a,(hl)
   09EC FD 21r8Cr00   [14] 2149 	ld	iy,#_c_hotspots
   09F0 FD 77 00      [19] 2150 	ld	0 (iy),a
   09F3 23            [ 6] 2151 	inc	hl
   09F4 7E            [ 7] 2152 	ld	a,(hl)
   09F5 32r8Dr00      [13] 2153 	ld	(#_c_hotspots + 1),a
                           2154 ;./mainloop/asset_setup.h:31: c_max_enems = 	l_player_max_enems [level];
   09F8 11r67r01      [10] 2155 	ld	de,#_l_player_max_enems+0
   09FB 2ArB5r01      [16] 2156 	ld	hl,(_level)
   09FE 26 00         [ 7] 2157 	ld	h,#0x00
   0A00 19            [11] 2158 	add	hl,de
   0A01 7E            [ 7] 2159 	ld	a,(hl)
   0A02 32rB6r01      [13] 2160 	ld	(#_c_max_enems + 0),a
                           2161 ;./mainloop/asset_setup.h:33: c_map_w = 		l_map_w [level];
   0A05 11r5Br01      [10] 2162 	ld	de,#_l_map_w+0
   0A08 2ArB5r01      [16] 2163 	ld	hl,(_level)
   0A0B 26 00         [ 7] 2164 	ld	h,#0x00
   0A0D 19            [11] 2165 	add	hl,de
   0A0E 7E            [ 7] 2166 	ld	a,(hl)
   0A0F 32r7Cr00      [13] 2167 	ld	(#_c_map_w + 0),a
                           2168 ;./mainloop/asset_setup.h:34: c_map_h = 		l_map_h [level];
   0A12 11r5Fr01      [10] 2169 	ld	de,#_l_map_h+0
   0A15 2ArB5r01      [16] 2170 	ld	hl,(_level)
   0A18 26 00         [ 7] 2171 	ld	h,#0x00
   0A1A 19            [11] 2172 	add	hl,de
   0A1B 7E            [ 7] 2173 	ld	a,(hl)
                           2174 ;./mainloop/asset_setup.h:84: rda = c_map_h; c_map_size = 0; while (rda --) c_map_size += c_map_w;
   0A1C 32r7Dr00      [13] 2175 	ld	(#_c_map_h + 0),a
   0A1F 32r16r00      [13] 2176 	ld	(#_rda + 0),a
   0A22 21r7Er00      [10] 2177 	ld	hl,#_c_map_size + 0
   0A25 36 00         [10] 2178 	ld	(hl), #0x00
   0A27                    2179 00101$:
   0A27 21r16r00      [10] 2180 	ld	hl,#_rda + 0
   0A2A 56            [ 7] 2181 	ld	d, (hl)
   0A2B 21r16r00      [10] 2182 	ld	hl, #_rda+0
   0A2E 35            [11] 2183 	dec	(hl)
   0A2F 7A            [ 4] 2184 	ld	a,d
   0A30 B7            [ 4] 2185 	or	a, a
   0A31 28 11         [12] 2186 	jr	Z,00103$
   0A33 21r7Cr00      [10] 2187 	ld	hl,#_c_map_w
   0A36 D5            [11] 2188 	push	de
   0A37 FD 21r7Er00   [14] 2189 	ld	iy,#_c_map_size
   0A3B FD E5         [15] 2190 	push	iy
   0A3D D1            [10] 2191 	pop	de
   0A3E 1A            [ 7] 2192 	ld	a,(de)
   0A3F 86            [ 7] 2193 	add	a, (hl)
   0A40 12            [ 7] 2194 	ld	(de),a
   0A41 D1            [10] 2195 	pop	de
   0A42 18 E3         [12] 2196 	jr	00101$
   0A44                    2197 00103$:
                           2198 ;./mainloop.h:20: cls ();
   0A44 CDr00r00      [17] 2199 	call	_cls
                           2200 ;./mainloop.h:22: draw_game_frame ();
   0A47 CDr32r02      [17] 2201 	call	_draw_game_frame
                           2202 ;./mainloop.h:25: hotspots_load ();
   0A4A CDr00r00      [17] 2203 	call	_hotspots_load
                           2204 ;./mainloop.h:31: if (!warp_to_level)	{
   0A4D 3ArBEr01      [13] 2205 	ld	a,(#_warp_to_level + 0)
   0A50 B7            [ 4] 2206 	or	a, a
   0A51 20 43         [12] 2207 	jr	NZ,00105$
                           2208 ;./mainloop.h:32: n_pant = SCR_INI;
   0A53 11r4Fr01      [10] 2209 	ld	de,#_l_scr_ini+0
   0A56 2ArB5r01      [16] 2210 	ld	hl,(_level)
   0A59 26 00         [ 7] 2211 	ld	h,#0x00
   0A5B 19            [11] 2212 	add	hl,de
   0A5C 7E            [ 7] 2213 	ld	a,(hl)
   0A5D 32rB7r01      [13] 2214 	ld	(#_n_pant + 0),a
                           2215 ;./mainloop.h:33: px = (4 + (PLAYER_INI_X << 4)) << FIXBITS;
   0A60 11r53r01      [10] 2216 	ld	de,#_l_ini_x+0
   0A63 2ArB5r01      [16] 2217 	ld	hl,(_level)
   0A66 26 00         [ 7] 2218 	ld	h,#0x00
   0A68 19            [11] 2219 	add	hl,de
   0A69 6E            [ 7] 2220 	ld	l,(hl)
   0A6A 26 00         [ 7] 2221 	ld	h,#0x00
   0A6C 29            [11] 2222 	add	hl, hl
   0A6D 29            [11] 2223 	add	hl, hl
   0A6E 29            [11] 2224 	add	hl, hl
   0A6F 29            [11] 2225 	add	hl, hl
   0A70 01 04 00      [10] 2226 	ld	bc,#0x0004
   0A73 09            [11] 2227 	add	hl,bc
   0A74 29            [11] 2228 	add	hl, hl
   0A75 29            [11] 2229 	add	hl, hl
   0A76 29            [11] 2230 	add	hl, hl
   0A77 29            [11] 2231 	add	hl, hl
   0A78 29            [11] 2232 	add	hl, hl
   0A79 29            [11] 2233 	add	hl, hl
   0A7A 22r4Br00      [16] 2234 	ld	(_px),hl
                           2235 ;./mainloop.h:34: py = (PLAYER_INI_Y << 4) << FIXBITS;
   0A7D 11r57r01      [10] 2236 	ld	de,#_l_ini_y+0
   0A80 2ArB5r01      [16] 2237 	ld	hl,(_level)
   0A83 26 00         [ 7] 2238 	ld	h,#0x00
   0A85 19            [11] 2239 	add	hl,de
   0A86 6E            [ 7] 2240 	ld	l,(hl)
   0A87 26 00         [ 7] 2241 	ld	h,#0x00
   0A89 29            [11] 2242 	add	hl, hl
   0A8A 29            [11] 2243 	add	hl, hl
   0A8B 29            [11] 2244 	add	hl, hl
   0A8C 29            [11] 2245 	add	hl, hl
   0A8D 29            [11] 2246 	add	hl, hl
   0A8E 29            [11] 2247 	add	hl, hl
   0A8F 29            [11] 2248 	add	hl, hl
   0A90 29            [11] 2249 	add	hl, hl
   0A91 29            [11] 2250 	add	hl, hl
   0A92 29            [11] 2251 	add	hl, hl
   0A93 22r4Dr00      [16] 2252 	ld	(_py),hl
   0A96                    2253 00105$:
                           2254 ;./mainloop.h:36: player_to_pixels ();
   0A96 CDr00r00      [17] 2255 	call	_player_to_pixels
                           2256 ;./mainloop.h:37: player_init ();
   0A99 CDr00r00      [17] 2257 	call	_player_init
                           2258 ;./mainloop.h:40: enems_persistent_load ();
   0A9C CDr00r00      [17] 2259 	call	_enems_persistent_load
                           2260 ;./mainloop.h:48: pobjs = 0;
   0A9F 21r73r00      [10] 2261 	ld	hl,#_pobjs + 0
   0AA2 36 00         [10] 2262 	ld	(hl), #0x00
                           2263 ;./mainloop.h:74: propellers_on = 1;
   0AA4 21r37r02      [10] 2264 	ld	hl,#_propellers_on + 0
   0AA7 36 01         [10] 2265 	ld	(hl), #0x01
                           2266 ;./mainloop.h:119: half_life = 0;
   0AA9 21rB9r01      [10] 2267 	ld	hl,#_half_life + 0
   0AAC 36 00         [10] 2268 	ld	(hl), #0x00
                           2269 ;./mainloop.h:120: frame_counter = 0;
   0AAE 21rBAr01      [10] 2270 	ld	hl,#_frame_counter + 0
   0AB1 36 00         [10] 2271 	ld	(hl), #0x00
                           2272 ;./mainloop.h:121: olife = oammo = oobjs = okeys = 0xff;
   0AB3 21rC2r01      [10] 2273 	ld	hl,#_okeys + 0
   0AB6 36 FF         [10] 2274 	ld	(hl), #0xFF
   0AB8 21rC3r01      [10] 2275 	ld	hl,#_oobjs + 0
   0ABB 36 FF         [10] 2276 	ld	(hl), #0xFF
   0ABD 21rC4r01      [10] 2277 	ld	hl,#_oammo + 0
   0AC0 36 FF         [10] 2278 	ld	(hl), #0xFF
   0AC2 21rC1r01      [10] 2279 	ld	hl,#_olife + 0
   0AC5 36 FF         [10] 2280 	ld	(hl), #0xFF
                           2281 ;./mainloop.h:122: okilled = 0xff;
   0AC7 21rC5r01      [10] 2282 	ld	hl,#_okilled + 0
   0ACA 36 FF         [10] 2283 	ld	(hl), #0xFF
   0ACC C9            [10] 2284 	ret
                           2285 ;./mainloop.h:137: void prepare_scr (void) {
                           2286 ;	---------------------------------
                           2287 ; Function prepare_scr
                           2288 ; ---------------------------------
   0ACD                    2289 _prepare_scr::
                           2290 ;./mainloop.h:138: if (!ft) {
   0ACD 3Ar7Br00      [13] 2291 	ld	a,(#_ft + 0)
   0AD0 B7            [ 4] 2292 	or	a, a
   0AD1 20 08         [12] 2293 	jr	NZ,00102$
                           2294 ;./mainloop.h:139: HW_displayOff ();
   0AD3 21 40 01      [10] 2295 	ld	hl,#0x0140
   0AD6 E5            [11] 2296 	push	hl
   0AD7 CDr00r00      [17] 2297 	call	_SG_VDPturnOffFeature
   0ADA F1            [10] 2298 	pop	af
   0ADB                    2299 00102$:
                           2300 ;./mainloop.h:159: ft = 0;
   0ADB FD 21r7Br00   [14] 2301 	ld	iy,#_ft
   0ADF FD 36 00 00   [19] 2302 	ld	0 (iy),#0x00
                           2303 ;./mainloop.h:161: update_list [update_index] = 0xff;
   0AE3 3Ar91r00      [13] 2304 	ld	a,(#_update_index + 0)
   0AE6 C6r92         [ 7] 2305 	add	a, #<(_update_list)
   0AE8 6F            [ 4] 2306 	ld	l, a
   0AE9 3E 00         [ 7] 2307 	ld	a, #0x00
   0AEB CEs00         [ 7] 2308 	adc	a, #>(_update_list)
   0AED 67            [ 4] 2309 	ld	h, a
   0AEE 36 FF         [10] 2310 	ld	(hl),#0xFF
                           2311 ;./mainloop.h:162: HW_doUpdateList ();
   0AF0 CDr00r00      [17] 2312 	call	_SG_doUpdateList
                           2313 ;./mainloop.h:163: clear_update_list ();
   0AF3 CDr00r00      [17] 2314 	call	_clear_update_list
                           2315 ;./mainloop.h:167: prp_idx = 0;
   0AF6 21r32r02      [10] 2316 	ld	hl,#_prp_idx + 0
   0AF9 36 00         [10] 2317 	ld	(hl), #0x00
                           2318 ;./mainloop.h:172: enems_persistent_update ();
   0AFB CDr00r00      [17] 2319 	call	_enems_persistent_update
                           2320 ;./mainloop.h:175: enems_load ();
   0AFE CDr00r00      [17] 2321 	call	_enems_load
                           2322 ;./mainloop.h:176: hotspots_create ();	
   0B01 CDrD2r01      [17] 2323 	call	_hotspots_create
                           2324 ;./mainloop.h:193: chac_chacs_queue_write = chac_chacs_queue_read = 0;
   0B04 21r59r02      [10] 2325 	ld	hl,#_chac_chacs_queue_read + 0
   0B07 36 00         [10] 2326 	ld	(hl), #0x00
   0B09 21r5Ar02      [10] 2327 	ld	hl,#_chac_chacs_queue_write + 0
   0B0C 36 00         [10] 2328 	ld	(hl), #0x00
                           2329 ;./mainloop.h:194: max_chac_chacs = 0;
   0B0E 21r38r02      [10] 2330 	ld	hl,#_max_chac_chacs + 0
   0B11 36 00         [10] 2331 	ld	(hl), #0x00
                           2332 ;./mainloop.h:214: draw_scr ();
   0B13 CDr00r00      [17] 2333 	call	_draw_scr
                           2334 ;./mainloop.h:253: HW_initSprites ();
   0B16 CDr00r00      [17] 2335 	call	_SG_initSprites
                           2336 ;./mainloop.h:270: gpit = 3; while (gpit --) en_spr_id [gpit] = en_s [gpit];
   0B19 21r06r00      [10] 2337 	ld	hl,#_gpit + 0
   0B1C 36 03         [10] 2338 	ld	(hl), #0x03
   0B1E                    2339 00103$:
   0B1E 21r06r00      [10] 2340 	ld	hl,#_gpit + 0
   0B21 5E            [ 7] 2341 	ld	e, (hl)
   0B22 21r06r00      [10] 2342 	ld	hl, #_gpit+0
   0B25 35            [11] 2343 	dec	(hl)
   0B26 7B            [ 4] 2344 	ld	a,e
   0B27 B7            [ 4] 2345 	or	a, a
   0B28 28 1E         [12] 2346 	jr	Z,00105$
   0B2A 3Er2F         [ 7] 2347 	ld	a,#<(_en_spr_id)
   0B2C 21r06r00      [10] 2348 	ld	hl,#_gpit
   0B2F 86            [ 7] 2349 	add	a, (hl)
   0B30 5F            [ 4] 2350 	ld	e,a
   0B31 3Es02         [ 7] 2351 	ld	a,#>(_en_spr_id)
   0B33 CE 00         [ 7] 2352 	adc	a, #0x00
   0B35 57            [ 4] 2353 	ld	d,a
   0B36 FD 21r16r02   [14] 2354 	ld	iy,#_en_s
   0B3A ED 4Br06r00   [20] 2355 	ld	bc,(_gpit)
   0B3E 06 00         [ 7] 2356 	ld	b,#0x00
   0B40 FD 09         [15] 2357 	add	iy, bc
   0B42 FD 7E 00      [19] 2358 	ld	a, 0 (iy)
   0B45 12            [ 7] 2359 	ld	(de),a
   0B46 18 D6         [12] 2360 	jr	00103$
   0B48                    2361 00105$:
                           2362 ;./mainloop.h:272: prx = px >> FIXBITS; pry = py >> FIXBITS;
   0B48 2Ar4Br00      [16] 2363 	ld	hl,(_px)
   0B4B CB 2C         [ 8] 2364 	sra	h
   0B4D CB 1D         [ 8] 2365 	rr	l
   0B4F CB 2C         [ 8] 2366 	sra	h
   0B51 CB 1D         [ 8] 2367 	rr	l
   0B53 CB 2C         [ 8] 2368 	sra	h
   0B55 CB 1D         [ 8] 2369 	rr	l
   0B57 CB 2C         [ 8] 2370 	sra	h
   0B59 CB 1D         [ 8] 2371 	rr	l
   0B5B CB 2C         [ 8] 2372 	sra	h
   0B5D CB 1D         [ 8] 2373 	rr	l
   0B5F CB 2C         [ 8] 2374 	sra	h
   0B61 CB 1D         [ 8] 2375 	rr	l
   0B63 FD 21r53r00   [14] 2376 	ld	iy,#_prx
   0B67 FD 75 00      [19] 2377 	ld	0 (iy),l
   0B6A 2Ar4Dr00      [16] 2378 	ld	hl,(_py)
   0B6D CB 2C         [ 8] 2379 	sra	h
   0B6F CB 1D         [ 8] 2380 	rr	l
   0B71 CB 2C         [ 8] 2381 	sra	h
   0B73 CB 1D         [ 8] 2382 	rr	l
   0B75 CB 2C         [ 8] 2383 	sra	h
   0B77 CB 1D         [ 8] 2384 	rr	l
   0B79 CB 2C         [ 8] 2385 	sra	h
   0B7B CB 1D         [ 8] 2386 	rr	l
   0B7D CB 2C         [ 8] 2387 	sra	h
   0B7F CB 1D         [ 8] 2388 	rr	l
   0B81 CB 2C         [ 8] 2389 	sra	h
   0B83 CB 1D         [ 8] 2390 	rr	l
   0B85 FD 21r54r00   [14] 2391 	ld	iy,#_pry
   0B89 FD 75 00      [19] 2392 	ld	0 (iy),l
                           2393 ;./mainloop.h:277: player_move ();
   0B8C CDr00r00      [17] 2394 	call	_player_move
                           2395 ;./mainloop.h:278: player_frame_selector ();
   0B8F CDrC3r08      [17] 2396 	call	_player_frame_selector
                           2397 ;./mainloop.h:280: enems_move ();
   0B92 CDr00r00      [17] 2398 	call	_enems_move
                           2399 ;./mainloop.h:282: if (hrt) hotspots_paint ();
   0B95 3Ar79r00      [13] 2400 	ld	a,(#_hrt + 0)
   0B98 B7            [ 4] 2401 	or	a, a
   0B99 28 03         [12] 2402 	jr	Z,00107$
   0B9B CDrA7r01      [17] 2403 	call	_hotspots_paint
   0B9E                    2404 00107$:
                           2405 ;./mainloop.h:297: hud_update ();
   0B9E CDr3Br02      [17] 2406 	call	_hud_update
                           2407 ;./mainloop.h:298: HW_copySpritestoSAT ();
   0BA1 CDr00r00      [17] 2408 	call	_SG_copySpritestoSAT
                           2409 ;./mainloop.h:299: update_list [update_index] = 0xff;
   0BA4 3Ar91r00      [13] 2410 	ld	a,(#_update_index + 0)
   0BA7 C6r92         [ 7] 2411 	add	a, #<(_update_list)
   0BA9 6F            [ 4] 2412 	ld	l, a
   0BAA 3E 00         [ 7] 2413 	ld	a, #0x00
   0BAC CEs00         [ 7] 2414 	adc	a, #>(_update_list)
   0BAE 67            [ 4] 2415 	ld	h, a
   0BAF 36 FF         [10] 2416 	ld	(hl),#0xFF
                           2417 ;./mainloop.h:300: HW_doUpdateList ();
   0BB1 CDr00r00      [17] 2418 	call	_SG_doUpdateList
                           2419 ;./mainloop.h:301: clear_update_list ();	
   0BB4 CDr00r00      [17] 2420 	call	_clear_update_list
                           2421 ;./mainloop.h:302: HW_displayOn ();
   0BB7 21 40 01      [10] 2422 	ld	hl,#0x0140
   0BBA E5            [11] 2423 	push	hl
   0BBB CDr00r00      [17] 2424 	call	_SG_VDPturnOnFeature
   0BBE F1            [10] 2425 	pop	af
                           2426 ;./mainloop.h:304: pad0 = 0;
   0BBF 21r04r00      [10] 2427 	ld	hl,#_pad0 + 0
   0BC2 36 00         [10] 2428 	ld	(hl), #0x00
   0BC4 C9            [10] 2429 	ret
                           2430 ;./mainloop.h:307: void game_loop (void) {
                           2431 ;	---------------------------------
                           2432 ; Function game_loop
                           2433 ; ---------------------------------
   0BC5                    2434 _game_loop::
                           2435 ;./mainloop.h:308: clear_update_list ();
   0BC5 CDr00r00      [17] 2436 	call	_clear_update_list
                           2437 ;./mainloop.h:310: on_pant = 99; ft = 1; fade_delay = 1;
   0BC8 21rB8r01      [10] 2438 	ld	hl,#_on_pant + 0
   0BCB 36 63         [10] 2439 	ld	(hl), #0x63
   0BCD 21r7Br00      [10] 2440 	ld	hl,#_ft + 0
   0BD0 36 01         [10] 2441 	ld	(hl), #0x01
   0BD2 21rF3r00      [10] 2442 	ld	hl,#_fade_delay + 0
   0BD5 36 01         [10] 2443 	ld	(hl), #0x01
                           2444 ;./mainloop.h:323: ntsc_frame = level_reset = warp_to_level = 0; 
   0BD7 21rBEr01      [10] 2445 	ld	hl,#_warp_to_level + 0
   0BDA 36 00         [10] 2446 	ld	(hl), #0x00
   0BDC 21rBFr01      [10] 2447 	ld	hl,#_level_reset + 0
   0BDF 36 00         [10] 2448 	ld	(hl), #0x00
   0BE1 21r90r00      [10] 2449 	ld	hl,#_ntsc_frame + 0
   0BE4 36 00         [10] 2450 	ld	(hl), #0x00
                           2451 ;./mainloop.h:324: ticker = 50;
   0BE6 21r1Dr00      [10] 2452 	ld	hl,#_ticker + 0
   0BE9 36 32         [10] 2453 	ld	(hl), #0x32
                           2454 ;./mainloop.h:327: PSGPlay (l_music [level]);
   0BEB FD 21rB5r01   [14] 2455 	ld	iy,#_level
   0BEF FD 6E 00      [19] 2456 	ld	l,0 (iy)
   0BF2 26 00         [ 7] 2457 	ld	h,#0x00
   0BF4 29            [11] 2458 	add	hl, hl
   0BF5 11r9Fr01      [10] 2459 	ld	de,#_l_music
   0BF8 19            [11] 2460 	add	hl,de
   0BF9 5E            [ 7] 2461 	ld	e,(hl)
   0BFA 23            [ 6] 2462 	inc	hl
   0BFB 56            [ 7] 2463 	ld	d,(hl)
   0BFC D5            [11] 2464 	push	de
   0BFD CDr00r00      [17] 2465 	call	_PSGPlay
   0C00 F1            [10] 2466 	pop	af
                           2467 ;./mainloop.h:332: paused = 0; HW_resetPauseRequest ();
   0C01 21rBBr01      [10] 2468 	ld	hl,#_paused + 0
   0C04 36 00         [10] 2469 	ld	(hl), #0x00
   0C06 CDr00r00      [17] 2470 	call	_SG_resetPauseRequest
                           2471 ;./mainloop.h:334: while (1) {
   0C09                    2472 00149$:
                           2473 ;./mainloop.h:341: hud_update ();
   0C09 CDr3Br02      [17] 2474 	call	_hud_update
                           2475 ;./mainloop.h:345: if (pkill) player_kill ();
   0C0C 3Ar6Er00      [13] 2476 	ld	a,(#_pkill + 0)
   0C0F B7            [ 4] 2477 	or	a, a
   0C10 28 03         [12] 2478 	jr	Z,00102$
   0C12 CDr00r00      [17] 2479 	call	_player_kill
   0C15                    2480 00102$:
                           2481 ;./mainloop.h:346: if (game_over || level_reset) break;			
   0C15 3ArBDr01      [13] 2482 	ld	a,(#_game_over + 0)
   0C18 B7            [ 4] 2483 	or	a, a
   0C19 C2r13r0E      [10] 2484 	jp	NZ,00150$
   0C1C 3ArBFr01      [13] 2485 	ld	a,(#_level_reset + 0)
   0C1F B7            [ 4] 2486 	or	a, a
   0C20 C2r13r0E      [10] 2487 	jp	NZ,00150$
                           2488 ;./mainloop.h:352: flick_override = 0;
   0C23 21rC0r01      [10] 2489 	ld	hl,#_flick_override + 0
   0C26 36 00         [10] 2490 	ld	(hl), #0x00
                           2491 ;./mainloop.h:355: flickscreen_do_horizontal ();
   0C28 CDrFFr07      [17] 2492 	call	_flickscreen_do_horizontal
                           2493 ;./mainloop.h:356: flickscreen_do_vertical ();
   0C2B CDr3Er08      [17] 2494 	call	_flickscreen_do_vertical
                           2495 ;./mainloop.h:362: if (on_pant != n_pant) {
   0C2E 3ArB8r01      [13] 2496 	ld	a,(#_on_pant + 0)
   0C31 FD 21rB7r01   [14] 2497 	ld	iy,#_n_pant
   0C35 FD 96 00      [19] 2498 	sub	a, 0 (iy)
   0C38 28 09         [12] 2499 	jr	Z,00109$
                           2500 ;./mainloop.h:363: prepare_scr ();
   0C3A CDrCDr0A      [17] 2501 	call	_prepare_scr
                           2502 ;./mainloop.h:364: on_pant = n_pant;
   0C3D 3ArB7r01      [13] 2503 	ld	a,(#_n_pant + 0)
   0C40 32rB8r01      [13] 2504 	ld	(#_on_pant + 0),a
   0C43                    2505 00109$:
                           2506 ;./mainloop.h:383: HW_waitForVBlank ();
   0C43 CDr00r00      [17] 2507 	call	_SG_waitForVBlank
                           2508 ;./mainloop.h:384: HW_copySpritestoSAT ();
   0C46 CDr00r00      [17] 2509 	call	_SG_copySpritestoSAT
                           2510 ;./mainloop.h:385: update_list [update_index] = 0xff;
   0C49 3Er92         [ 7] 2511 	ld	a,#<(_update_list)
   0C4B 21r91r00      [10] 2512 	ld	hl,#_update_index
   0C4E 86            [ 7] 2513 	add	a, (hl)
   0C4F 6F            [ 4] 2514 	ld	l, a
   0C50 3Es00         [ 7] 2515 	ld	a, #>(_update_list)
   0C52 CE 00         [ 7] 2516 	adc	a, #0x00
   0C54 67            [ 4] 2517 	ld	h, a
   0C55 36 FF         [10] 2518 	ld	(hl),#0xFF
                           2519 ;./mainloop.h:386: HW_doUpdateList ();
   0C57 CDr00r00      [17] 2520 	call	_SG_doUpdateList
                           2521 ;./mainloop.h:387: clear_update_list ();
   0C5A CDr00r00      [17] 2522 	call	_clear_update_list
                           2523 ;./mainloop.h:391: pad_read ();
   0C5D CDr00r00      [17] 2524 	call	_pad_read
                           2525 ;./mainloop.h:392: a_button = (pad_this_frame & PAD_A);
   0C60 3Ar05r00      [13] 2526 	ld	a,(#_pad_this_frame + 0)
   0C63 E6 20         [ 7] 2527 	and	a, #0x20
   0C65 32r5Ar00      [13] 2528 	ld	(#_a_button + 0),a
                           2529 ;./mainloop.h:393: b_button = (pad_this_frame & PAD_B);
   0C68 3Ar05r00      [13] 2530 	ld	a,(#_pad_this_frame + 0)
   0C6B E6 10         [ 7] 2531 	and	a, #0x10
   0C6D 32r5Br00      [13] 2532 	ld	(#_b_button + 0),a
                           2533 ;./mainloop.h:397: ntsc_frame ++; if (ntsc_frame == 6) ntsc_frame = 0;
   0C70 21r90r00      [10] 2534 	ld	hl, #_ntsc_frame+0
   0C73 34            [11] 2535 	inc	(hl)
   0C74 3Ar90r00      [13] 2536 	ld	a,(#_ntsc_frame + 0)
   0C77 D6 06         [ 7] 2537 	sub	a, #0x06
   0C79 20 05         [12] 2538 	jr	NZ,00111$
   0C7B 21r90r00      [10] 2539 	ld	hl,#_ntsc_frame + 0
   0C7E 36 00         [10] 2540 	ld	(hl), #0x00
   0C80                    2541 00111$:
                           2542 ;./mainloop.h:399: if (paused == 0 && (ntsc == 0 || ntsc_frame)) {
   0C80 3ArBBr01      [13] 2543 	ld	a,(#_paused + 0)
   0C83 B7            [ 4] 2544 	or	a, a
   0C84 C2rEBr0D      [10] 2545 	jp	NZ,00141$
   0C87 3Ar8Fr00      [13] 2546 	ld	a,(#_ntsc + 0)
   0C8A B7            [ 4] 2547 	or	a, a
   0C8B 28 07         [12] 2548 	jr	Z,00140$
   0C8D 3Ar90r00      [13] 2549 	ld	a,(#_ntsc_frame + 0)
   0C90 B7            [ 4] 2550 	or	a, a
   0C91 CArEBr0D      [10] 2551 	jp	Z,00141$
   0C94                    2552 00140$:
                           2553 ;./mainloop.h:400: HW_initSprites ();
   0C94 CDr00r00      [17] 2554 	call	_SG_initSprites
                           2555 ;./mainloop.h:403: if (ticker) -- ticker; else ticker = 50;
   0C97 3Ar1Dr00      [13] 2556 	ld	a,(#_ticker + 0)
   0C9A B7            [ 4] 2557 	or	a, a
   0C9B 28 06         [12] 2558 	jr	Z,00113$
   0C9D 21r1Dr00      [10] 2559 	ld	hl, #_ticker+0
   0CA0 35            [11] 2560 	dec	(hl)
   0CA1 18 05         [12] 2561 	jr	00114$
   0CA3                    2562 00113$:
   0CA3 21r1Dr00      [10] 2563 	ld	hl,#_ticker + 0
   0CA6 36 32         [10] 2564 	ld	(hl), #0x32
   0CA8                    2565 00114$:
                           2566 ;./mainloop.h:404: half_life ^= 1;
   0CA8 3ArB9r01      [13] 2567 	ld	a,(#_half_life + 0)
   0CAB EE 01         [ 7] 2568 	xor	a, #0x01
   0CAD 32rB9r01      [13] 2569 	ld	(#_half_life + 0),a
                           2570 ;./mainloop.h:405: ++ frame_counter;
   0CB0 21rBAr01      [10] 2571 	ld	hl, #_frame_counter+0
   0CB3 34            [11] 2572 	inc	(hl)
                           2573 ;./mainloop/hotspots.h:6: if (hrt) {
   0CB4 3Ar79r00      [13] 2574 	ld	a,(#_hrt + 0)
   0CB7 B7            [ 4] 2575 	or	a, a
   0CB8 CAr88r0D      [10] 2576 	jp	Z,00127$
                           2577 ;./mainloop/hotspots.h:7: if (collide_in (prx + 4, pry + 8, hrx, hry)) {
   0CBB 3Ar54r00      [13] 2578 	ld	a,(#_pry + 0)
   0CBE C6 08         [ 7] 2579 	add	a, #0x08
   0CC0 57            [ 4] 2580 	ld	d,a
   0CC1 21r53r00      [10] 2581 	ld	hl,#_prx + 0
   0CC4 46            [ 7] 2582 	ld	b, (hl)
   0CC5 04            [ 4] 2583 	inc	b
   0CC6 04            [ 4] 2584 	inc	b
   0CC7 04            [ 4] 2585 	inc	b
   0CC8 04            [ 4] 2586 	inc	b
   0CC9 3Ar78r00      [13] 2587 	ld	a,(_hry)
   0CCC F5            [11] 2588 	push	af
   0CCD 33            [ 6] 2589 	inc	sp
   0CCE 3Ar77r00      [13] 2590 	ld	a,(_hrx)
   0CD1 F5            [11] 2591 	push	af
   0CD2 33            [ 6] 2592 	inc	sp
   0CD3 D5            [11] 2593 	push	de
   0CD4 33            [ 6] 2594 	inc	sp
   0CD5 C5            [11] 2595 	push	bc
   0CD6 33            [ 6] 2596 	inc	sp
   0CD7 CDr00r00      [17] 2597 	call	_collide_in
   0CDA F1            [10] 2598 	pop	af
   0CDB F1            [10] 2599 	pop	af
   0CDC 7D            [ 4] 2600 	ld	a,l
   0CDD B7            [ 4] 2601 	or	a, a
   0CDE CAr88r0D      [10] 2602 	jp	Z,00127$
                           2603 ;./mainloop/hotspots.h:128: gp_gen = 0; rdm = 1;
   0CE1 21 00 00      [10] 2604 	ld	hl,#0x0000
   0CE4 22r0Ar00      [16] 2605 	ld	(_gp_gen),hl
   0CE7 21r1Ar00      [10] 2606 	ld	hl,#_rdm + 0
   0CEA 36 01         [10] 2607 	ld	(hl), #0x01
                           2608 ;./mainloop/hotspots.h:129: switch (hrt) {
   0CEC 3Ar79r00      [13] 2609 	ld	a,(#_hrt + 0)
   0CEF 3D            [ 4] 2610 	dec	a
   0CF0 28 0D         [12] 2611 	jr	Z,00115$
   0CF2 3Ar79r00      [13] 2612 	ld	a,(#_hrt + 0)
   0CF5 FE 03         [ 7] 2613 	cp	a,#0x03
   0CF7 28 16         [12] 2614 	jr	Z,00116$
   0CF9 D6 04         [ 7] 2615 	sub	a, #0x04
   0CFB 28 27         [12] 2616 	jr	Z,00117$
   0CFD 18 5C         [12] 2617 	jr	00121$
                           2618 ;./mainloop/hotspots.h:131: case HOTSPOT_TYPE_OBJECT:
   0CFF                    2619 00115$:
                           2620 ;./mainloop/hotspots.h:145: ++ pobjs;
   0CFF 21r73r00      [10] 2621 	ld	hl, #_pobjs+0
   0D02 34            [11] 2622 	inc	(hl)
                           2623 ;./mainloop/hotspots.h:146: gp_gen = SFX_OBJECT;
   0D03 21r0Ar00      [10] 2624 	ld	hl,#_gp_gen + 0
   0D06 36r00         [10] 2625 	ld	(hl), #<(_s_02_object2_psg)
   0D08 21r0Br00      [10] 2626 	ld	hl,#_gp_gen + 1
   0D0B 36s00         [10] 2627 	ld	(hl), #>(_s_02_object2_psg)
                           2628 ;./mainloop/hotspots.h:148: break;
   0D0D 18 4C         [12] 2629 	jr	00121$
                           2630 ;./mainloop/hotspots.h:156: case HOTSPOT_TYPE_REFILL:
   0D0F                    2631 00116$:
                           2632 ;./mainloop/hotspots.h:157: plife += PLAYER_REFILL;
   0D0F 21r72r00      [10] 2633 	ld	hl, #_plife+0
   0D12 34            [11] 2634 	inc	(hl)
                           2635 ;./mainloop/hotspots.h:161: gp_gen = SFX_USE;
   0D13 21r0Ar00      [10] 2636 	ld	hl,#_gp_gen + 0
   0D16 36r00         [10] 2637 	ld	(hl), #<(_s_03_use2_psg)
   0D18 21r0Br00      [10] 2638 	ld	hl,#_gp_gen + 1
   0D1B 36s00         [10] 2639 	ld	(hl), #>(_s_03_use2_psg)
                           2640 ;./mainloop/hotspots.h:162: rdm = 2;
   0D1D 21r1Ar00      [10] 2641 	ld	hl,#_rdm + 0
   0D20 36 02         [10] 2642 	ld	(hl), #0x02
                           2643 ;./mainloop/hotspots.h:163: break;
   0D22 18 37         [12] 2644 	jr	00121$
                           2645 ;./mainloop/hotspots.h:165: case HOTSPOT_TYPE_AMMO:
   0D24                    2646 00117$:
                           2647 ;./mainloop/hotspots.h:166: gp_gen = SFX_OBJECT;
   0D24 21r0Ar00      [10] 2648 	ld	hl,#_gp_gen + 0
   0D27 36r00         [10] 2649 	ld	(hl), #<(_s_02_object2_psg)
   0D29 21r0Br00      [10] 2650 	ld	hl,#_gp_gen + 1
   0D2C 36s00         [10] 2651 	ld	(hl), #>(_s_02_object2_psg)
                           2652 ;./mainloop/hotspots.h:167: if (MAX_AMMO - pammo > AMMO_REFILL)
   0D2E FD 21r74r00   [14] 2653 	ld	iy,#_pammo
   0D32 FD 66 00      [19] 2654 	ld	h,0 (iy)
   0D35 2E 00         [ 7] 2655 	ld	l,#0x00
   0D37 3E 63         [ 7] 2656 	ld	a,#0x63
   0D39 94            [ 4] 2657 	sub	a, h
   0D3A 67            [ 4] 2658 	ld	h,a
   0D3B 3E 00         [ 7] 2659 	ld	a,#0x00
   0D3D 9D            [ 4] 2660 	sbc	a, l
   0D3E 6F            [ 4] 2661 	ld	l,a
   0D3F 3E 32         [ 7] 2662 	ld	a,#0x32
   0D41 BC            [ 4] 2663 	cp	a, h
   0D42 3E 00         [ 7] 2664 	ld	a,#0x00
   0D44 9D            [ 4] 2665 	sbc	a, l
   0D45 E2r4Ar0D      [10] 2666 	jp	PO, 00256$
   0D48 EE 80         [ 7] 2667 	xor	a, #0x80
   0D4A                    2668 00256$:
   0D4A F2r56r0D      [10] 2669 	jp	P,00119$
                           2670 ;./mainloop/hotspots.h:168: pammo += AMMO_REFILL;
   0D4D 21r74r00      [10] 2671 	ld	hl,#_pammo
   0D50 7E            [ 7] 2672 	ld	a,(hl)
   0D51 C6 32         [ 7] 2673 	add	a, #0x32
   0D53 77            [ 7] 2674 	ld	(hl),a
   0D54 18 05         [12] 2675 	jr	00121$
   0D56                    2676 00119$:
                           2677 ;./mainloop/hotspots.h:170: pammo = MAX_AMMO;
   0D56 21r74r00      [10] 2678 	ld	hl,#_pammo + 0
   0D59 36 63         [10] 2679 	ld	(hl), #0x63
                           2680 ;./mainloop/hotspots.h:192: }
   0D5B                    2681 00121$:
                           2682 ;./mainloop/hotspots.h:193: if (gp_gen) {
   0D5B 3Ar0Br00      [13] 2683 	ld	a,(#_gp_gen + 1)
   0D5E 21r0Ar00      [10] 2684 	ld	hl,#_gp_gen + 0
   0D61 B6            [ 7] 2685 	or	a,(hl)
   0D62 28 24         [12] 2686 	jr	Z,00127$
                           2687 ;./mainloop/hotspots.h:194: PSGSFXPlay (gp_gen, rdm);
   0D64 ED 5Br0Ar00   [20] 2688 	ld	de,(_gp_gen)
   0D68 3Ar1Ar00      [13] 2689 	ld	a,(_rdm)
   0D6B F5            [11] 2690 	push	af
   0D6C 33            [ 6] 2691 	inc	sp
   0D6D D5            [11] 2692 	push	de
   0D6E CDr00r00      [17] 2693 	call	_PSGSFXPlay
   0D71 F1            [10] 2694 	pop	af
   0D72 33            [ 6] 2695 	inc	sp
                           2696 ;./mainloop/hotspots.h:195: hrt = 0;
   0D73 FD 21r79r00   [14] 2697 	ld	iy,#_hrt
   0D77 FD 36 00 00   [19] 2698 	ld	0 (iy),#0x00
                           2699 ;./mainloop/hotspots.h:196: hact [n_pant] = 0;
   0D7B 3ArB7r01      [13] 2700 	ld	a,(#_n_pant + 0)
   0D7E C6rC8         [ 7] 2701 	add	a, #<(_hact)
   0D80 5F            [ 4] 2702 	ld	e,a
   0D81 3E 00         [ 7] 2703 	ld	a,#0x00
   0D83 CEs01         [ 7] 2704 	adc	a, #>(_hact)
   0D85 57            [ 4] 2705 	ld	d,a
   0D86 AF            [ 4] 2706 	xor	a, a
   0D87 12            [ 7] 2707 	ld	(de),a
   0D88                    2708 00127$:
                           2709 ;./mainloop.h:425: if (!warp_to_level) {
   0D88 3ArBEr01      [13] 2710 	ld	a,(#_warp_to_level + 0)
   0D8B B7            [ 4] 2711 	or	a, a
   0D8C 20 06         [12] 2712 	jr	NZ,00129$
                           2713 ;./mainloop.h:426: player_move ();
   0D8E CDr00r00      [17] 2714 	call	_player_move
                           2715 ;./mainloop.h:427: player_frame_selector ();
   0D91 CDrC3r08      [17] 2716 	call	_player_frame_selector
   0D94                    2717 00129$:
                           2718 ;./mainloop/win_level_condition.h:14: pobjs == PLAYER_MAX_OBJECTS
   0D94 FD 21r63r01   [14] 2719 	ld	iy,#_l_player_max_objects
   0D98 ED 5BrB5r01   [20] 2720 	ld	de,(_level)
   0D9C 16 00         [ 7] 2721 	ld	d,#0x00
   0D9E FD 19         [15] 2722 	add	iy, de
   0DA0 FD 56 00      [19] 2723 	ld	d, 0 (iy)
   0DA3 3Ar73r00      [13] 2724 	ld	a,(#_pobjs + 0)
   0DA6 92            [ 4] 2725 	sub	a, d
   0DA7 20 0D         [12] 2726 	jr	NZ,00131$
                           2727 ;./mainloop/win_level_condition.h:23: PSGStop ();
   0DA9 CDr00r00      [17] 2728 	call	_PSGStop
                           2729 ;./mainloop/win_level_condition.h:24: delay (50);
   0DAC 3E 32         [ 7] 2730 	ld	a,#0x32
   0DAE F5            [11] 2731 	push	af
   0DAF 33            [ 6] 2732 	inc	sp
   0DB0 CDr00r00      [17] 2733 	call	_delay
   0DB3 33            [ 6] 2734 	inc	sp
                           2735 ;./mainloop/win_level_condition.h:25: break;
   0DB4 18 5D         [12] 2736 	jr	00150$
   0DB6                    2737 00131$:
                           2738 ;./mainloop.h:447: if (propellers_on) propellers_do ();
   0DB6 3Ar37r02      [13] 2739 	ld	a,(#_propellers_on + 0)
   0DB9 B7            [ 4] 2740 	or	a, a
   0DBA 28 03         [12] 2741 	jr	Z,00133$
   0DBC CDr00r00      [17] 2742 	call	_propellers_do
   0DBF                    2743 00133$:
                           2744 ;./mainloop.h:464: cur_stp = HW_getStp (); 
   0DBF CDr00r00      [17] 2745 	call	_SG_getStp
   0DC2 22r25r00      [16] 2746 	ld	(_cur_stp),hl
                           2747 ;./mainloop.h:465: if (!warp_to_level)	player_render ();
   0DC5 3ArBEr01      [13] 2748 	ld	a,(#_warp_to_level + 0)
   0DC8 B7            [ 4] 2749 	or	a, a
   0DC9 20 03         [12] 2750 	jr	NZ,00135$
   0DCB CDr00r00      [17] 2751 	call	_player_render
   0DCE                    2752 00135$:
                           2753 ;./mainloop.h:469: enems_move ();
   0DCE CDr00r00      [17] 2754 	call	_enems_move
                           2755 ;./mainloop.h:473: if (warp_to_level) {
   0DD1 3ArBEr01      [13] 2756 	ld	a,(#_warp_to_level + 0)
   0DD4 B7            [ 4] 2757 	or	a, a
   0DD5 28 08         [12] 2758 	jr	Z,00137$
                           2759 ;./mainloop.h:474: update_cycle (); PSGStop (); break;
   0DD7 CDr00r00      [17] 2760 	call	_update_cycle
   0DDA CDr00r00      [17] 2761 	call	_PSGStop
   0DDD 18 34         [12] 2762 	jr	00150$
   0DDF                    2763 00137$:
                           2764 ;./mainloop.h:485: if (hrt) hotspots_paint ();
   0DDF 3Ar79r00      [13] 2765 	ld	a,(#_hrt + 0)
   0DE2 B7            [ 4] 2766 	or	a, a
   0DE3 28 03         [12] 2767 	jr	Z,00139$
   0DE5 CDrA7r01      [17] 2768 	call	_hotspots_paint
   0DE8                    2769 00139$:
                           2770 ;./mainloop.h:514: chac_chacs_do ();
   0DE8 CDr00r00      [17] 2771 	call	_chac_chacs_do
   0DEB                    2772 00141$:
                           2773 ;./mainloop/cheat.h:5: if ((pad0 & (PAD_B|PAD_SELECT|PAD_UP)) == (PAD_B|PAD_SELECT|PAD_UP)) break;
   0DEB 3Ar04r00      [13] 2774 	ld	a,(#_pad0 + 0)
   0DEE E6 31         [ 7] 2775 	and	a, #0x31
   0DF0 D6 31         [ 7] 2776 	sub	a, #0x31
   0DF2 28 1F         [12] 2777 	jr	Z,00150$
   0DF4 CDr00r00      [17] 2778 	call	_SG_queryPauseRequested
   0DF7 CB 45         [ 8] 2779 	bit	0,l
   0DF9 CAr09r0C      [10] 2780 	jp	Z,00149$
                           2781 ;./mainloop/pause.h:6: HW_resetPauseRequest ();
   0DFC CDr00r00      [17] 2782 	call	_SG_resetPauseRequest
                           2783 ;./mainloop/pause.h:7: paused ^= 1;
   0DFF 3ArBBr01      [13] 2784 	ld	a,(#_paused + 0)
   0E02 EE 01         [ 7] 2785 	xor	a, #0x01
   0E04 32rBBr01      [13] 2786 	ld	(#_paused + 0),a
                           2787 ;./mainloop/pause.h:8: music_pause (paused);
   0E07 3ArBBr01      [13] 2788 	ld	a,(_paused)
   0E0A F5            [11] 2789 	push	af
   0E0B 33            [ 6] 2790 	inc	sp
   0E0C CDr00r00      [17] 2791 	call	_music_pause
   0E0F 33            [ 6] 2792 	inc	sp
   0E10 C3r09r0C      [10] 2793 	jp	00149$
   0E13                    2794 00150$:
                           2795 ;./mainloop.h:529: PSGStop ();
   0E13 CDr00r00      [17] 2796 	call	_PSGStop
                           2797 ;./mainloop.h:530: PSGSFXStop ();
   0E16 CDr00r00      [17] 2798 	call	_PSGSFXStop
                           2799 ;./mainloop.h:531: HW_displayOff ();
   0E19 21 40 01      [10] 2800 	ld	hl,#0x0140
   0E1C E5            [11] 2801 	push	hl
   0E1D CDr00r00      [17] 2802 	call	_SG_VDPturnOffFeature
   0E20 F1            [10] 2803 	pop	af
                           2804 ;./mainloop.h:532: HW_initSprites ();
   0E21 CDr00r00      [17] 2805 	call	_SG_initSprites
                           2806 ;./mainloop.h:533: HW_copySpritestoSAT ();	
   0E24 C3r00r00      [10] 2807 	jp  _SG_copySpritestoSAT
                           2808 ;./game.c:143: void main(void) {
                           2809 ;	---------------------------------
                           2810 ; Function main
                           2811 ; ---------------------------------
   0E27                    2812 _main::
                           2813 ;./game.c:144: HW_displayOff ();
   0E27 21 40 01      [10] 2814 	ld	hl,#0x0140
   0E2A E5            [11] 2815 	push	hl
   0E2B CDr00r00      [17] 2816 	call	_SG_VDPturnOffFeature
                           2817 ;./game.c:145: HW_setSpriteMode (SG_SPRITEMODE_LARGE);
   0E2E 26 01         [ 7] 2818 	ld	h,#0x01
   0E30 E3            [19] 2819 	ex	(sp),hl
   0E31 33            [ 6] 2820 	inc	sp
   0E32 CDr00r00      [17] 2821 	call	_SG_setSpriteMode
   0E35 33            [ 6] 2822 	inc	sp
                           2823 ;./game.c:146: HW_setUpdateList (update_list);
   0E36 21r92r00      [10] 2824 	ld	hl,#_update_list
   0E39 E5            [11] 2825 	push	hl
   0E3A CDr00r00      [17] 2826 	call	_SG_setUpdateList
   0E3D F1            [10] 2827 	pop	af
                           2828 ;./game.c:147: first_game = 1;
   0E3E 21rB4r01      [10] 2829 	ld	hl,#_first_game + 0
   0E41 36 01         [10] 2830 	ld	(hl), #0x01
                           2831 ;./game.c:152: ntsc = 1;
   0E43 21r8Fr00      [10] 2832 	ld	hl,#_ntsc + 0
   0E46 36 01         [10] 2833 	ld	(hl), #0x01
                           2834 ;./game.c:156: unpack_bg_patterns (tsFONT_patterns_c, tsFONT_colours_c, 0, 7);
   0E48 11r00r00      [10] 2835 	ld	de,#_tsFONT_patterns_c
   0E4B 3E 07         [ 7] 2836 	ld	a,#0x07
   0E4D F5            [11] 2837 	push	af
   0E4E 33            [ 6] 2838 	inc	sp
   0E4F 21 00 00      [10] 2839 	ld	hl,#0x0000
   0E52 E5            [11] 2840 	push	hl
   0E53 21r00r00      [10] 2841 	ld	hl,#_tsFONT_colours_c
   0E56 E5            [11] 2842 	push	hl
   0E57 D5            [11] 2843 	push	de
   0E58 CDr00r00      [17] 2844 	call	_unpack_bg_patterns
   0E5B 21 07 00      [10] 2845 	ld	hl,#7
   0E5E 39            [11] 2846 	add	hl,sp
   0E5F F9            [ 6] 2847 	ld	sp,hl
                           2848 ;./game.c:158: credits ();
   0E60 CDrF9r06      [17] 2849 	call	_credits
                           2850 ;./game.c:161: unpack_bg_patterns (tsALL_patterns_c, tsALL_colours_c, 64*8, 7);
   0E63 11r00r00      [10] 2851 	ld	de,#_tsALL_patterns_c
   0E66 3E 07         [ 7] 2852 	ld	a,#0x07
   0E68 F5            [11] 2853 	push	af
   0E69 33            [ 6] 2854 	inc	sp
   0E6A 21 00 02      [10] 2855 	ld	hl,#0x0200
   0E6D E5            [11] 2856 	push	hl
   0E6E 21r00r00      [10] 2857 	ld	hl,#_tsALL_colours_c
   0E71 E5            [11] 2858 	push	hl
   0E72 D5            [11] 2859 	push	de
   0E73 CDr00r00      [17] 2860 	call	_unpack_bg_patterns
   0E76 21 07 00      [10] 2861 	ld	hl,#7
   0E79 39            [11] 2862 	add	hl,sp
   0E7A F9            [ 6] 2863 	ld	sp,hl
                           2864 ;./game.c:162: aPLib_depack_VRAM (SGT_BASE, ssALL_patterns_c);
   0E7B 21r00r00      [10] 2865 	ld	hl,#_ssALL_patterns_c
   0E7E E5            [11] 2866 	push	hl
   0E7F 21 00 38      [10] 2867 	ld	hl,#0x3800
   0E82 E5            [11] 2868 	push	hl
   0E83 CDr00r00      [17] 2869 	call	_aPLib_depack_VRAM
   0E86 F1            [10] 2870 	pop	af
   0E87 F1            [10] 2871 	pop	af
                           2872 ;./game.c:164: game_puri = 0;
   0E88 21r5Cr02      [10] 2873 	ld	hl,#_game_puri + 0
   0E8B 36 00         [10] 2874 	ld	(hl), #0x00
                           2875 ;./game.c:165: while (1) {	
   0E8D                    2876 00112$:
                           2877 ;./game.c:166: plife = PLAYER_LIFE;
   0E8D 21r72r00      [10] 2878 	ld	hl,#_plife + 0
   0E90 36 0A         [10] 2879 	ld	(hl), #0x0A
                           2880 ;./game.c:167: title ();
   0E92 CDr59r03      [17] 2881 	call	_title
                           2882 ;./game.c:172: game_init (); 
   0E95 CDr6Ar09      [17] 2883 	call	_game_init
                           2884 ;./game.c:173: game_loop ();
   0E98 CDrC5r0B      [17] 2885 	call	_game_loop
                           2886 ;./game.c:175: if (game_over) {
   0E9B 3ArBDr01      [13] 2887 	ld	a,(#_game_over + 0)
   0E9E B7            [ 4] 2888 	or	a, a
   0E9F 28 0F         [12] 2889 	jr	Z,00106$
                           2890 ;./game.c:176: pres (scr_game_over, MUSIC_GOVER);
   0EA1 21r00r00      [10] 2891 	ld	hl,#_m_n_gover_psg
   0EA4 E5            [11] 2892 	push	hl
   0EA5 21rD8r04      [10] 2893 	ld	hl,#_scr_game_over
   0EA8 E5            [11] 2894 	push	hl
   0EA9 CDrB5r02      [17] 2895 	call	_pres
   0EAC F1            [10] 2896 	pop	af
   0EAD F1            [10] 2897 	pop	af
                           2898 ;./game.c:177: break;
   0EAE 18 2B         [12] 2899 	jr	00110$
   0EB0                    2900 00106$:
                           2901 ;./game.c:179: pres (scr_sclear, MUSIC_SCLEAR);
   0EB0 21r00r00      [10] 2902 	ld	hl,#_m_n_sclear_psg
   0EB3 E5            [11] 2903 	push	hl
   0EB4 21r74r05      [10] 2904 	ld	hl,#_scr_sclear
   0EB7 E5            [11] 2905 	push	hl
   0EB8 CDrB5r02      [17] 2906 	call	_pres
   0EBB F1            [10] 2907 	pop	af
   0EBC F1            [10] 2908 	pop	af
                           2909 ;./game.c:180: level_done [level] = 1;
   0EBD 11r65r02      [10] 2910 	ld	de,#_level_done+0
   0EC0 2ArB5r01      [16] 2911 	ld	hl,(_level)
   0EC3 26 00         [ 7] 2912 	ld	h,#0x00
   0EC5 19            [11] 2913 	add	hl,de
   0EC6 36 01         [10] 2914 	ld	(hl),#0x01
                           2915 ;./game.c:181: if (level_done [0] && level_done [1] && level_done [2])
   0EC8 1A            [ 7] 2916 	ld	a,(de)
   0EC9 B7            [ 4] 2917 	or	a, a
   0ECA 28 0F         [12] 2918 	jr	Z,00110$
   0ECC 3Ar66r02      [13] 2919 	ld	a, (#_level_done + 1)
   0ECF B7            [ 4] 2920 	or	a, a
   0ED0 28 09         [12] 2921 	jr	Z,00110$
   0ED2 3Ar67r02      [13] 2922 	ld	a, (#_level_done + 2)
   0ED5 B7            [ 4] 2923 	or	a, a
   0ED6 28 03         [12] 2924 	jr	Z,00110$
                           2925 ;./game.c:182: game_ending ();
   0ED8 CDr2Ar06      [17] 2926 	call	_game_ending
                           2927 ;./game.c:183: break;
   0EDB                    2928 00110$:
                           2929 ;./game.c:187: first_game = 0;
   0EDB 21rB4r01      [10] 2930 	ld	hl,#_first_game + 0
   0EDE 36 00         [10] 2931 	ld	(hl), #0x00
   0EE0 18 AB         [12] 2932 	jr	00112$
                           2933 	.area _CODE
                           2934 	.area _INITIALIZER
                           2935 	.area _CABS (ABS)
