                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.2 #9293 (MINGW32)
                              4 ; This file was generated Wed Oct 24 13:21:59 2018
                              5 ;--------------------------------------------------------
                              6 	.module rand
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _srand
                             13 	.globl _rand8
                             14 	.globl _randres
                             15 	.globl _seed2
                             16 	.globl _seed1
                             17 ;--------------------------------------------------------
                             18 ; special function registers
                             19 ;--------------------------------------------------------
                             20 ;--------------------------------------------------------
                             21 ; ram data
                             22 ;--------------------------------------------------------
                             23 	.area _DATA
   0000                      24 _seed1::
   0000                      25 	.ds 2
   0002                      26 _seed2::
   0002                      27 	.ds 2
   0004                      28 _randres::
   0004                      29 	.ds 1
                             30 ;--------------------------------------------------------
                             31 ; ram data
                             32 ;--------------------------------------------------------
                             33 	.area _INITIALIZED
                             34 ;--------------------------------------------------------
                             35 ; absolute external ram data
                             36 ;--------------------------------------------------------
                             37 	.area _DABS (ABS)
                             38 ;--------------------------------------------------------
                             39 ; global & static initialisations
                             40 ;--------------------------------------------------------
                             41 	.area _HOME
                             42 	.area _GSINIT
                             43 	.area _GSFINAL
                             44 	.area _GSINIT
                             45 ;--------------------------------------------------------
                             46 ; Home
                             47 ;--------------------------------------------------------
                             48 	.area _HOME
                             49 	.area _HOME
                             50 ;--------------------------------------------------------
                             51 ; code
                             52 ;--------------------------------------------------------
                             53 	.area _CODE
                             54 ;utils/rand.c:10: unsigned char rand8 (void) {
                             55 ;	---------------------------------
                             56 ; Function rand8
                             57 ; ---------------------------------
   0000                      58 _rand8::
                             59 ;utils/rand.c:35: __endasm;
   0000                      60 	  rnd:
   0000 21 80 A2      [10]   61 	ld hl, #0xa280
   0003 11 DE C0      [10]   62 	ld de, #0xc0de
   0006 7C            [ 4]   63 	ld a,h ; t = x ^ (x << 1)
   0007 87            [ 4]   64 	add a,a
   0008 AC            [ 4]   65 	xor h
   0009 65            [ 4]   66 	ld h,l ; x = y
   000A 6A            [ 4]   67 	ld l,d ; y = z
   000B 53            [ 4]   68 	ld d,e ; z = w
   000C 5F            [ 4]   69 	ld e,a
   000D 1F            [ 4]   70 	rra ; t = t ^ (t >> 1)
   000E AB            [ 4]   71 	xor e
   000F 5F            [ 4]   72 	ld e,a
   0010 7A            [ 4]   73 	ld a,d ; w = w ^ ( w << 3 ) ^ t
   0011 87            [ 4]   74 	add a,a
   0012 87            [ 4]   75 	add a,a
   0013 87            [ 4]   76 	add a,a
   0014 AA            [ 4]   77 	xor d
   0015 AB            [ 4]   78 	xor e
   0016 5F            [ 4]   79 	ld e,a
   0017 22r01r00      [16]   80 	ld (rnd+1),hl
   001A ED 53r04r00   [20]   81 	ld (rnd+4),de
   001E 32r04r00      [13]   82 	ld (_randres), a
                             83 ;utils/rand.c:36: return randres;
   0021 FD 21r04r00   [14]   84 	ld	iy,#_randres
   0025 FD 6E 00      [19]   85 	ld	l,0 (iy)
   0028 C9            [10]   86 	ret
                             87 ;utils/rand.c:39: void srand (void) {
                             88 ;	---------------------------------
                             89 ; Function srand
                             90 ; ---------------------------------
   0029                      91 _srand::
                             92 ;utils/rand.c:45: __endasm;
   0029 2Ar00r00      [16]   93 	ld hl, (_seed1)
   002C 22r01r00      [16]   94 	ld (rnd+1), hl
   002F 2Ar02r00      [16]   95 	ld hl, (_seed2)
   0032 22r04r00      [16]   96 	ld (rnd+4), hl
   0035 C9            [10]   97 	ret
                             98 	.area _CODE
                             99 	.area _INITIALIZER
                            100 	.area _CABS (ABS)
