                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.2 #9293 (MINGW32)
                              4 ; This file was generated Sun Nov 04 15:02:35 2018
                              5 ;--------------------------------------------------------
                              6 	.module unrle
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _unrle
                             13 	.globl _unrle_adv
                             14 ;--------------------------------------------------------
                             15 ; special function registers
                             16 ;--------------------------------------------------------
                     00BF    17 _VDPControlPort	=	0x00bf
                     00BF    18 _VDPStatusPort	=	0x00bf
                     00BE    19 _VDPDataPort	=	0x00be
                     007E    20 _VDPVCounterPort	=	0x007e
                     007F    21 _VDPHCounterPort	=	0x007f
                     00DC    22 _IOPortL	=	0x00dc
                     00DD    23 _IOPortH	=	0x00dd
                             24 ;--------------------------------------------------------
                             25 ; ram data
                             26 ;--------------------------------------------------------
                             27 	.area _DATA
                             28 ;--------------------------------------------------------
                             29 ; ram data
                             30 ;--------------------------------------------------------
                             31 	.area _INITIALIZED
                             32 ;--------------------------------------------------------
                             33 ; absolute external ram data
                             34 ;--------------------------------------------------------
                             35 	.area _DABS (ABS)
                             36 ;--------------------------------------------------------
                             37 ; global & static initialisations
                             38 ;--------------------------------------------------------
                             39 	.area _HOME
                             40 	.area _GSINIT
                             41 	.area _GSFINAL
                             42 	.area _GSINIT
                             43 ;--------------------------------------------------------
                             44 ; Home
                             45 ;--------------------------------------------------------
                             46 	.area _HOME
                             47 	.area _HOME
                             48 ;--------------------------------------------------------
                             49 ; code
                             50 ;--------------------------------------------------------
                             51 	.area _CODE
                             52 ;utils/unrle.c:7: void unrle_adv (void) {
                             53 ;	---------------------------------
                             54 ; Function unrle_adv
                             55 ; ---------------------------------
   0000                      56 _unrle_adv::
                             57 ;utils/unrle.c:8: VDPDataPort = rdb;
   0000 3Ar00r00      [13]   58 	ld	a,(#_rdb + 0)
   0003 D3 BE         [11]   59 	out	(_VDPDataPort),a
                             60 ;utils/unrle.c:9: rds16 ++;
   0005 21r00r00      [10]   61 	ld	hl, #_rds16+0
   0008 34            [11]   62 	inc	(hl)
   0009 C0            [11]   63 	ret	NZ
   000A 21r01r00      [10]   64 	ld	hl, #_rds16+1
   000D 34            [11]   65 	inc	(hl)
   000E C9            [10]   66 	ret
                             67 ;utils/unrle.c:12: void unrle (void) {
                             68 ;	---------------------------------
                             69 ; Function unrle
                             70 ; ---------------------------------
   000F                      71 _unrle::
                             72 ;utils/unrle.c:13: VDPControlPort = LO (PNTADDRESS); VDPControlPort = HI (PNTADDRESS) | 0x40;
   000F 3E 00         [ 7]   73 	ld	a,#0x00
   0011 D3 BF         [11]   74 	out	(_VDPControlPort),a
   0013 3E 58         [ 7]   75 	ld	a,#0x58
   0015 D3 BF         [11]   76 	out	(_VDPControlPort),a
                             77 ;utils/unrle.c:15: rdc = *gp_gen ++; 	// run code
   0017 2Ar00r00      [16]   78 	ld	hl,(_gp_gen)
   001A 7E            [ 7]   79 	ld	a,(hl)
   001B 32r00r00      [13]   80 	ld	(#_rdc + 0),a
   001E 21r00r00      [10]   81 	ld	hl, #_gp_gen+0
   0021 34            [11]   82 	inc	(hl)
   0022 20 04         [12]   83 	jr	NZ,00134$
   0024 21r01r00      [10]   84 	ld	hl, #_gp_gen+1
   0027 34            [11]   85 	inc	(hl)
   0028                      86 00134$:
                             87 ;utils/unrle.c:16: rds16 = 0; while (rds16 < 768) {
   0028 21 00 00      [10]   88 	ld	hl,#0x0000
   002B 22r00r00      [16]   89 	ld	(_rds16),hl
   002E                      90 00109$:
   002E 3Ar01r00      [13]   91 	ld	a,(#_rds16 + 1)
   0031 EE 80         [ 7]   92 	xor	a, #0x80
   0033 D6 83         [ 7]   93 	sub	a, #0x83
   0035 D0            [11]   94 	ret	NC
                             95 ;utils/unrle.c:17: rda = *gp_gen ++;
   0036 2Ar00r00      [16]   96 	ld	hl,(_gp_gen)
   0039 7E            [ 7]   97 	ld	a,(hl)
   003A 32r00r00      [13]   98 	ld	(#_rda + 0),a
   003D 21r00r00      [10]   99 	ld	hl, #_gp_gen+0
   0040 34            [11]  100 	inc	(hl)
   0041 20 04         [12]  101 	jr	NZ,00135$
   0043 21r01r00      [10]  102 	ld	hl, #_gp_gen+1
   0046 34            [11]  103 	inc	(hl)
   0047                     104 00135$:
                            105 ;utils/unrle.c:18: if (rda == rdc) {
   0047 3Ar00r00      [13]  106 	ld	a,(#_rda + 0)
   004A FD 21r00r00   [14]  107 	ld	iy,#_rdc
   004E FD 96 00      [19]  108 	sub	a, 0 (iy)
   0051 20 27         [12]  109 	jr	NZ,00107$
                            110 ;utils/unrle.c:19: rda = *gp_gen ++;
   0053 2Ar00r00      [16]  111 	ld	hl,(_gp_gen)
   0056 7E            [ 7]  112 	ld	a,(hl)
   0057 32r00r00      [13]  113 	ld	(#_rda + 0),a
   005A 21r00r00      [10]  114 	ld	hl, #_gp_gen+0
   005D 34            [11]  115 	inc	(hl)
   005E 20 04         [12]  116 	jr	NZ,00138$
   0060 21r01r00      [10]  117 	ld	hl, #_gp_gen+1
   0063 34            [11]  118 	inc	(hl)
   0064                     119 00138$:
                            120 ;utils/unrle.c:20: if (rda == 0) break;
   0064 3Ar00r00      [13]  121 	ld	a,(#_rda + 0)
   0067 B7            [ 4]  122 	or	a, a
   0068 C8            [11]  123 	ret	Z
                            124 ;utils/unrle.c:21: while (rda --) unrle_adv ();
   0069                     125 00103$:
   0069 21r00r00      [10]  126 	ld	hl,#_rda + 0
   006C 56            [ 7]  127 	ld	d, (hl)
   006D 21r00r00      [10]  128 	ld	hl, #_rda+0
   0070 35            [11]  129 	dec	(hl)
   0071 7A            [ 4]  130 	ld	a,d
   0072 B7            [ 4]  131 	or	a, a
   0073 28 B9         [12]  132 	jr	Z,00109$
   0075 CDr00r00      [17]  133 	call	_unrle_adv
   0078 18 EF         [12]  134 	jr	00103$
   007A                     135 00107$:
                            136 ;utils/unrle.c:23: rdb = rda;
   007A 3Ar00r00      [13]  137 	ld	a,(#_rda + 0)
   007D 32r00r00      [13]  138 	ld	(#_rdb + 0),a
                            139 ;utils/unrle.c:24: unrle_adv ();
   0080 CDr00r00      [17]  140 	call	_unrle_adv
   0083 18 A9         [12]  141 	jr	00109$
                            142 	.area _CODE
                            143 	.area _INITIALIZER
                            144 	.area _CABS (ABS)
