                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.2 #9293 (MINGW32)
                              4 ; This file was generated Thu Oct 25 09:58:32 2018
                              5 ;--------------------------------------------------------
                              6 	.module SGlib
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _SG_setReg
                             13 	.globl _VDPReg
                             14 	.globl _VDPType
                             15 	.globl _gpit
                             16 	.globl _first_sprite
                             17 	.globl _SpriteTableEnd
                             18 	.globl _stp
                             19 	.globl _SpriteTable
                             20 	.globl _PreviousKeysStatus
                             21 	.globl _KeysStatus
                             22 	.globl _PauseRequested
                             23 	.globl _VDPBlank
                             24 	.globl _VDPReg_init
                             25 	.globl _SG_VDPturnOnFeature
                             26 	.globl _SG_VDPturnOffFeature
                             27 	.globl _SG_init
                             28 	.globl _SG_setBackdropColor
                             29 	.globl _SG_setSpriteMode
                             30 	.globl _SG_loadTilePatterns
                             31 	.globl _SG_loadTileColours
                             32 	.globl _SG_loadSpritePatterns
                             33 	.globl _SG_setTileatXY
                             34 	.globl _SG_setNextTileatXY
                             35 	.globl _SG_setTile
                             36 	.globl _SG_fillTile
                             37 	.globl _SG_loadTileMapArea
                             38 	.globl _SG_initSprites
                             39 	.globl _SG_addSprite
                             40 	.globl _SG_addMetaSprite1x1
                             41 	.globl _SG_addMetaSprite
                             42 	.globl _SG_finalizeSprites
                             43 	.globl _SG_getStp
                             44 	.globl _SG_setStp
                             45 	.globl _SG_copySpritestoSAT
                             46 	.globl _SG_waitForVBlank
                             47 	.globl _SG_getKeysStatus
                             48 	.globl _SG_queryPauseRequested
                             49 	.globl _SG_resetPauseRequest
                             50 	.globl _SG_VRAMmemset
                             51 	.globl _UNSAFE_SG_copySpritestoSAT
                             52 	.globl _UNSAFE_SG_VRAMmemcpy128
                             53 	.globl _SG_isr
                             54 	.globl _SG_nmi_isr
                             55 	.globl _SMS_VDPType
                             56 ;--------------------------------------------------------
                             57 ; special function registers
                             58 ;--------------------------------------------------------
                     00BF    59 _VDPControlPort	=	0x00bf
                     00BF    60 _VDPStatusPort	=	0x00bf
                     00BE    61 _VDPDataPort	=	0x00be
                     007E    62 _VDPVCounterPort	=	0x007e
                     007F    63 _VDPHCounterPort	=	0x007f
                     00DC    64 _IOPortL	=	0x00dc
                     00DD    65 _IOPortH	=	0x00dd
                             66 ;--------------------------------------------------------
                             67 ; ram data
                             68 ;--------------------------------------------------------
                             69 	.area _DATA
   0000                      70 _VDPBlank::
   0000                      71 	.ds 1
   0001                      72 _PauseRequested::
   0001                      73 	.ds 1
   0002                      74 _KeysStatus::
   0002                      75 	.ds 2
   0004                      76 _PreviousKeysStatus::
   0004                      77 	.ds 2
   0006                      78 _SpriteTable::
   0006                      79 	.ds 128
   0086                      80 _stp::
   0086                      81 	.ds 2
   0088                      82 _SpriteTableEnd::
   0088                      83 	.ds 2
   008A                      84 _first_sprite::
   008A                      85 	.ds 1
   008B                      86 _gpit::
   008B                      87 	.ds 1
   008C                      88 _VDPType::
   008C                      89 	.ds 1
                             90 ;--------------------------------------------------------
                             91 ; ram data
                             92 ;--------------------------------------------------------
                             93 	.area _INITIALIZED
   0000                      94 _VDPReg::
   0000                      95 	.ds 2
                             96 ;--------------------------------------------------------
                             97 ; absolute external ram data
                             98 ;--------------------------------------------------------
                             99 	.area _DABS (ABS)
                            100 ;--------------------------------------------------------
                            101 ; global & static initialisations
                            102 ;--------------------------------------------------------
                            103 	.area _HOME
                            104 	.area _GSINIT
                            105 	.area _GSFINAL
                            106 	.area _GSINIT
                            107 ;--------------------------------------------------------
                            108 ; Home
                            109 ;--------------------------------------------------------
                            110 	.area _HOME
                            111 	.area _HOME
                            112 ;--------------------------------------------------------
                            113 ; code
                            114 ;--------------------------------------------------------
                            115 	.area _CODE
                            116 ;lib/SGlib.c:167: void SG_setReg (unsigned char reg, unsigned char v) {
                            117 ;	---------------------------------
                            118 ; Function SG_setReg
                            119 ; ---------------------------------
   0000                     120 _SG_setReg::
                            121 ;lib/SGlib.c:168: VDPReg [reg] = v;
   0000 3Er00         [ 7]  122 	ld	a,#<(_VDPReg)
   0002 21 02 00      [10]  123 	ld	hl,#2
   0005 39            [11]  124 	add	hl,sp
   0006 86            [ 7]  125 	add	a, (hl)
   0007 5F            [ 4]  126 	ld	e,a
   0008 3Es00         [ 7]  127 	ld	a,#>(_VDPReg)
   000A CE 00         [ 7]  128 	adc	a, #0x00
   000C 57            [ 4]  129 	ld	d,a
   000D FD 21 03 00   [14]  130 	ld	iy,#3
   0011 FD 39         [15]  131 	add	iy,sp
   0013 FD 7E 00      [19]  132 	ld	a,0 (iy)
   0016 12            [ 7]  133 	ld	(de),a
                            134 ;lib/SGlib.c:169: SG_write_to_VDPRegister (reg, v);
   0017 F3            [ 4]  135 	di 
   0018 FD 7E 00      [19]  136 	ld	a,0 (iy)
   001B D3 BF         [11]  137 	out	(_VDPControlPort),a
   001D FD 21 02 00   [14]  138 	ld	iy,#2
   0021 FD 39         [15]  139 	add	iy,sp
   0023 FD 7E 00      [19]  140 	ld	a,0 (iy)
   0026 CB FF         [ 8]  141 	set	7, a
   0028 D3 BF         [11]  142 	out	(_VDPControlPort),a
   002A FB            [ 4]  143 	ei 
   002B C9            [10]  144 	ret
   002C                     145 _VDPReg_init:
   002C 02                  146 	.db #0x02	; 2
   002D A0                  147 	.db #0xA0	; 160
   002E 06                  148 	.db #0x06	; 6
   002F FF                  149 	.db #0xFF	; 255
   0030 03                  150 	.db #0x03	; 3
   0031 36                  151 	.db #0x36	; 54	'6'
   0032 07                  152 	.db #0x07	; 7
   0033 01                  153 	.db #0x01	; 1
                            154 ;lib/SGlib.c:172: void SG_VDPturnOnFeature (unsigned int feature) {
                            155 ;	---------------------------------
                            156 ; Function SG_VDPturnOnFeature
                            157 ; ---------------------------------
   0034                     158 _SG_VDPturnOnFeature::
   0034 DD E5         [15]  159 	push	ix
   0036 DD 21 00 00   [14]  160 	ld	ix,#0
   003A DD 39         [15]  161 	add	ix,sp
   003C F5            [11]  162 	push	af
                            163 ;lib/SGlib.c:174: VDPReg [HI (feature)] |= LO (feature);
   003D DD 5E 05      [19]  164 	ld	e,5 (ix)
   0040 16 00         [ 7]  165 	ld	d,#0x00
   0042 21r00r00      [10]  166 	ld	hl,#_VDPReg
   0045 19            [11]  167 	add	hl,de
   0046 4E            [ 7]  168 	ld	c,(hl)
   0047 DD 7E 04      [19]  169 	ld	a,4 (ix)
   004A DD 77 FE      [19]  170 	ld	-2 (ix),a
   004D DD 36 FF 00   [19]  171 	ld	-1 (ix),#0x00
   0051 06 00         [ 7]  172 	ld	b,#0x00
   0053 79            [ 4]  173 	ld	a,c
   0054 DD B6 FE      [19]  174 	or	a, -2 (ix)
   0057 4F            [ 4]  175 	ld	c,a
   0058 78            [ 4]  176 	ld	a,b
   0059 DD B6 FF      [19]  177 	or	a, -1 (ix)
   005C 47            [ 4]  178 	ld	b,a
   005D 71            [ 7]  179 	ld	(hl),c
                            180 ;lib/SGlib.c:175: SG_write_to_VDPRegister (HI (feature), VDPReg [HI (feature)]);
   005E F3            [ 4]  181 	di 
   005F 79            [ 4]  182 	ld	a,c
   0060 D3 BF         [11]  183 	out	(_VDPControlPort),a
   0062 7B            [ 4]  184 	ld	a,e
   0063 CB FF         [ 8]  185 	set	7, a
   0065 67            [ 4]  186 	ld	h,a
   0066 D3 BF         [11]  187 	out	(_VDPControlPort),a
   0068 FB            [ 4]  188 	ei 
   0069 DD F9         [10]  189 	ld	sp, ix
   006B DD E1         [14]  190 	pop	ix
   006D C9            [10]  191 	ret
                            192 ;lib/SGlib.c:178: void SG_VDPturnOffFeature (unsigned int feature) {
                            193 ;	---------------------------------
                            194 ; Function SG_VDPturnOffFeature
                            195 ; ---------------------------------
   006E                     196 _SG_VDPturnOffFeature::
   006E DD E5         [15]  197 	push	ix
   0070 DD 21 00 00   [14]  198 	ld	ix,#0
   0074 DD 39         [15]  199 	add	ix,sp
   0076 F5            [11]  200 	push	af
                            201 ;lib/SGlib.c:180: VDPReg [HI (feature)] &= ~LO (feature);
   0077 DD 5E 05      [19]  202 	ld	e,5 (ix)
   007A 16 00         [ 7]  203 	ld	d,#0x00
   007C 21r00r00      [10]  204 	ld	hl,#_VDPReg
   007F 19            [11]  205 	add	hl,de
   0080 E3            [19]  206 	ex	(sp), hl
   0081 E1            [10]  207 	pop	hl
   0082 E5            [11]  208 	push	hl
   0083 46            [ 7]  209 	ld	b,(hl)
   0084 DD 7E 04      [19]  210 	ld	a, 4 (ix)
   0087 2F            [ 4]  211 	cpl
   0088 4F            [ 4]  212 	ld	c,a
   0089 78            [ 4]  213 	ld	a,b
   008A A1            [ 4]  214 	and	a, c
   008B 47            [ 4]  215 	ld	b,a
   008C E1            [10]  216 	pop	hl
   008D E5            [11]  217 	push	hl
   008E 70            [ 7]  218 	ld	(hl),b
                            219 ;lib/SGlib.c:181: SG_write_to_VDPRegister (HI (feature), VDPReg [HI (feature)]);
   008F F3            [ 4]  220 	di 
   0090 78            [ 4]  221 	ld	a,b
   0091 D3 BF         [11]  222 	out	(_VDPControlPort),a
   0093 7B            [ 4]  223 	ld	a,e
   0094 CB FF         [ 8]  224 	set	7, a
   0096 67            [ 4]  225 	ld	h,a
   0097 D3 BF         [11]  226 	out	(_VDPControlPort),a
   0099 FB            [ 4]  227 	ei 
   009A DD F9         [10]  228 	ld	sp, ix
   009C DD E1         [14]  229 	pop	ix
   009E C9            [10]  230 	ret
                            231 ;lib/SGlib.c:199: void SG_init (void) {
                            232 ;	---------------------------------
                            233 ; Function SG_init
                            234 ; ---------------------------------
   009F                     235 _SG_init::
                            236 ;lib/SGlib.c:200: for (gpit = 0; gpit < 8; gpit++)
   009F FD 21r8Br00   [14]  237 	ld	iy,#_gpit
   00A3 FD 36 00 00   [19]  238 	ld	0 (iy),#0x00
   00A7 11r2Cr00      [10]  239 	ld	de,#_VDPReg_init+0
   00AA                     240 00112$:
                            241 ;lib/SGlib.c:201: SG_write_to_VDPRegister (gpit, VDPReg_init [gpit]);
   00AA F3            [ 4]  242 	di 
   00AB 2Ar8Br00      [16]  243 	ld	hl,(_gpit)
   00AE 26 00         [ 7]  244 	ld	h,#0x00
   00B0 19            [11]  245 	add	hl,de
   00B1 7E            [ 7]  246 	ld	a,(hl)
   00B2 D3 BF         [11]  247 	out	(_VDPControlPort),a
   00B4 FD 21r8Br00   [14]  248 	ld	iy,#_gpit
   00B8 FD 7E 00      [19]  249 	ld	a,0 (iy)
   00BB CB FF         [ 8]  250 	set	7, a
   00BD D3 BF         [11]  251 	out	(_VDPControlPort),a
   00BF FB            [ 4]  252 	ei 
                            253 ;lib/SGlib.c:200: for (gpit = 0; gpit < 8; gpit++)
   00C0 FD 21r8Br00   [14]  254 	ld	iy,#_gpit
   00C4 FD 34 00      [23]  255 	inc	0 (iy)
   00C7 FD 21r8Br00   [14]  256 	ld	iy,#_gpit
   00CB FD 7E 00      [19]  257 	ld	a,0 (iy)
   00CE D6 08         [ 7]  258 	sub	a, #0x08
   00D0 38 D8         [12]  259 	jr	C,00112$
                            260 ;lib/SGlib.c:204: first_sprite = 0;
   00D2 21r8Ar00      [10]  261 	ld	hl,#_first_sprite + 0
   00D5 36 00         [10]  262 	ld	(hl), #0x00
                            263 ;lib/SGlib.c:205: SpriteTableEnd = SpriteTable + 128;
   00D7 21r86r00      [10]  264 	ld	hl,#_SpriteTable+128
   00DA 22r88r00      [16]  265 	ld	(_SpriteTableEnd),hl
                            266 ;lib/SGlib.c:208: SG_initSprites ();
   00DD CDr4Cr03      [17]  267 	call	_SG_initSprites
                            268 ;lib/SGlib.c:209: SG_finalizeSprites ();
   00E0 CDr23r06      [17]  269 	call	_SG_finalizeSprites
                            270 ;lib/SGlib.c:210: UNSAFE_SG_copySpritestoSAT ();
   00E3 CDr9Ar06      [17]  271 	call	_UNSAFE_SG_copySpritestoSAT
                            272 ;lib/SGlib.c:187: while (VDPVCounterPort!=0x80);      // wait for line 0x80
   00E6                     273 00102$:
   00E6 DB 7E         [11]  274 	in	a,(_VDPVCounterPort)
   00E8 D6 80         [ 7]  275 	sub	a, #0x80
   00EA 20 FA         [12]  276 	jr	NZ,00102$
                            277 ;lib/SGlib.c:188: new_value=VDPVCounterPort;
   00EC DB 7E         [11]  278 	in	a,(_VDPVCounterPort)
   00EE 67            [ 4]  279 	ld	h,a
                            280 ;lib/SGlib.c:189: do {
   00EF                     281 00105$:
                            282 ;lib/SGlib.c:190: old_value=new_value;              // wait until VCounter 'goes back'
   00EF 54            [ 4]  283 	ld	d,h
                            284 ;lib/SGlib.c:191: new_value=VDPVCounterPort;
   00F0 DB 7E         [11]  285 	in	a,(_VDPVCounterPort)
                            286 ;lib/SGlib.c:192: } while (old_value<=new_value);
   00F2 67            [ 4]  287 	ld	h,a
   00F3 92            [ 4]  288 	sub	a, d
   00F4 30 F9         [12]  289 	jr	NC,00105$
                            290 ;lib/SGlib.c:193: if (old_value>=0xE7)
   00F6 7A            [ 4]  291 	ld	a,d
   00F7 D6 E7         [ 7]  292 	sub	a, #0xE7
   00F9 38 06         [12]  293 	jr	C,00109$
                            294 ;lib/SGlib.c:194: VDPType=VDP_PAL;                  // old value should be 0xF2
   00FB 21r8Cr00      [10]  295 	ld	hl,#_VDPType + 0
   00FE 36 80         [10]  296 	ld	(hl), #0x80
   0100 C9            [10]  297 	ret
   0101                     298 00109$:
                            299 ;lib/SGlib.c:196: VDPType=VDP_NTSC;                 // old value should be 0xDA
   0101 21r8Cr00      [10]  300 	ld	hl,#_VDPType + 0
   0104 36 40         [10]  301 	ld	(hl), #0x40
                            302 ;lib/SGlib.c:212: SMS_detect_VDP_type();
   0106 C9            [10]  303 	ret
                            304 ;lib/SGlib.c:215: void SG_setBackdropColor (unsigned char entry) {
                            305 ;	---------------------------------
                            306 ; Function SG_setBackdropColor
                            307 ; ---------------------------------
   0107                     308 _SG_setBackdropColor::
                            309 ;lib/SGlib.c:216: SG_write_to_VDPRegister (0x07, entry & 0x0f);
   0107 F3            [ 4]  310 	di 
   0108 FD 21 02 00   [14]  311 	ld	iy,#2
   010C FD 39         [15]  312 	add	iy,sp
   010E FD 7E 00      [19]  313 	ld	a,0 (iy)
   0111 E6 0F         [ 7]  314 	and	a, #0x0F
   0113 D3 BF         [11]  315 	out	(_VDPControlPort),a
   0115 3E 87         [ 7]  316 	ld	a,#0x87
   0117 D3 BF         [11]  317 	out	(_VDPControlPort),a
   0119 FB            [ 4]  318 	ei 
   011A C9            [10]  319 	ret
                            320 ;lib/SGlib.c:219: void SG_setSpriteMode (unsigned char mode) {
                            321 ;	---------------------------------
                            322 ; Function SG_setSpriteMode
                            323 ; ---------------------------------
   011B                     324 _SG_setSpriteMode::
                            325 ;lib/SGlib.c:220: if (mode & SG_SPRITEMODE_LARGE) {
   011B 21 02 00      [10]  326 	ld	hl, #2+0
   011E 39            [11]  327 	add	hl, sp
   011F 7E            [ 7]  328 	ld	a, (hl)
   0120 0F            [ 4]  329 	rrca
   0121 30 0A         [12]  330 	jr	NC,00102$
                            331 ;lib/SGlib.c:221: SG_VDPturnOnFeature (SG_VDPFEATURE_USELARGESPRITES);
   0123 21 02 01      [10]  332 	ld	hl,#0x0102
   0126 E5            [11]  333 	push	hl
   0127 CDr34r00      [17]  334 	call	_SG_VDPturnOnFeature
   012A F1            [10]  335 	pop	af
   012B 18 08         [12]  336 	jr	00103$
   012D                     337 00102$:
                            338 ;lib/SGlib.c:223: SG_VDPturnOffFeature (SG_VDPFEATURE_USELARGESPRITES);
   012D 21 02 01      [10]  339 	ld	hl,#0x0102
   0130 E5            [11]  340 	push	hl
   0131 CDr6Er00      [17]  341 	call	_SG_VDPturnOffFeature
   0134 F1            [10]  342 	pop	af
   0135                     343 00103$:
                            344 ;lib/SGlib.c:225: if (mode & SG_SPRITEMODE_ZOOMED) {
   0135 21 02 00      [10]  345 	ld	hl, #2+0
   0138 39            [11]  346 	add	hl, sp
   0139 7E            [ 7]  347 	ld	a, (hl)
   013A E6 02         [ 7]  348 	and	a, #0x02
   013C 28 09         [12]  349 	jr	Z,00105$
                            350 ;lib/SGlib.c:226: SG_VDPturnOnFeature (SG_VDPFEATURE_ZOOMSPRITES);
   013E 21 01 01      [10]  351 	ld	hl,#0x0101
   0141 E5            [11]  352 	push	hl
   0142 CDr34r00      [17]  353 	call	_SG_VDPturnOnFeature
   0145 F1            [10]  354 	pop	af
   0146 C9            [10]  355 	ret
   0147                     356 00105$:
                            357 ;lib/SGlib.c:228: SG_VDPturnOffFeature (SG_VDPFEATURE_ZOOMSPRITES);
   0147 21 01 01      [10]  358 	ld	hl,#0x0101
   014A E5            [11]  359 	push	hl
   014B CDr6Er00      [17]  360 	call	_SG_VDPturnOffFeature
   014E F1            [10]  361 	pop	af
   014F C9            [10]  362 	ret
                            363 ;lib/SGlib.c:233: void SG_loadTilePatterns (void *src, unsigned int tilefrom, unsigned int size) {
                            364 ;	---------------------------------
                            365 ; Function SG_loadTilePatterns
                            366 ; ---------------------------------
   0150                     367 _SG_loadTilePatterns::
   0150 DD E5         [15]  368 	push	ix
   0152 DD 21 00 00   [14]  369 	ld	ix,#0
   0156 DD 39         [15]  370 	add	ix,sp
                            371 ;lib/SGlib.c:234: SG_set_address_VRAM (PGTADDRESS + (tilefrom << 3));
   0158 F3            [ 4]  372 	di 
   0159 DD 7E 06      [19]  373 	ld	a,6 (ix)
   015C 07            [ 4]  374 	rlca
   015D 07            [ 4]  375 	rlca
   015E 07            [ 4]  376 	rlca
   015F E6 F8         [ 7]  377 	and	a,#0xF8
   0161 D3 BF         [11]  378 	out	(_VDPControlPort),a
   0163 DD 6E 06      [19]  379 	ld	l,6 (ix)
   0166 DD 66 07      [19]  380 	ld	h,7 (ix)
   0169 29            [11]  381 	add	hl, hl
   016A 29            [11]  382 	add	hl, hl
   016B 29            [11]  383 	add	hl, hl
   016C 16 00         [ 7]  384 	ld	d,#0x00
   016E 7C            [ 4]  385 	ld	a,h
   016F CB F7         [ 8]  386 	set	6, a
   0171 6F            [ 4]  387 	ld	l,a
   0172 D3 BF         [11]  388 	out	(_VDPControlPort),a
   0174 FB            [ 4]  389 	ei 
                            390 ;lib/SGlib.c:235: SG_byte_array_to_VDP_data (src, size);
   0175 DD 4E 08      [19]  391 	ld	c,8 (ix)
   0178 DD 46 09      [19]  392 	ld	b,9 (ix)
   017B DD 5E 04      [19]  393 	ld	e,4 (ix)
   017E DD 56 05      [19]  394 	ld	d,5 (ix)
                            395 ;lib/SGlib.c:148: do {
   0181                     396 00101$:
                            397 ;lib/SGlib.c:149: VDPDataPort = *(data ++);
   0181 1A            [ 7]  398 	ld	a,(de)
   0182 D3 BE         [11]  399 	out	(_VDPDataPort),a
   0184 13            [ 6]  400 	inc	de
                            401 ;lib/SGlib.c:150: } while (-- size);
   0185 69            [ 4]  402 	ld	l,c
   0186 60            [ 4]  403 	ld	h,b
   0187 2B            [ 6]  404 	dec	hl
   0188 4D            [ 4]  405 	ld	c, l
   0189 7C            [ 4]  406 	ld	a,h
   018A 47            [ 4]  407 	ld	b,a
   018B B5            [ 4]  408 	or	a,l
   018C 20 F3         [12]  409 	jr	NZ,00101$
                            410 ;lib/SGlib.c:235: SG_byte_array_to_VDP_data (src, size);
   018E DD E1         [14]  411 	pop	ix
   0190 C9            [10]  412 	ret
                            413 ;lib/SGlib.c:238: void SG_loadTileColours (void *src, unsigned int tilefrom, unsigned int size) {
                            414 ;	---------------------------------
                            415 ; Function SG_loadTileColours
                            416 ; ---------------------------------
   0191                     417 _SG_loadTileColours::
   0191 DD E5         [15]  418 	push	ix
   0193 DD 21 00 00   [14]  419 	ld	ix,#0
   0197 DD 39         [15]  420 	add	ix,sp
                            421 ;lib/SGlib.c:239: SG_set_address_VRAM (CGTADDRESS + (tilefrom << 3));
   0199 F3            [ 4]  422 	di 
   019A DD 7E 06      [19]  423 	ld	a,6 (ix)
   019D 07            [ 4]  424 	rlca
   019E 07            [ 4]  425 	rlca
   019F 07            [ 4]  426 	rlca
   01A0 E6 F8         [ 7]  427 	and	a,#0xF8
   01A2 D3 BF         [11]  428 	out	(_VDPControlPort),a
   01A4 DD 6E 06      [19]  429 	ld	l,6 (ix)
   01A7 DD 66 07      [19]  430 	ld	h,7 (ix)
   01AA 29            [11]  431 	add	hl, hl
   01AB 29            [11]  432 	add	hl, hl
   01AC 29            [11]  433 	add	hl, hl
   01AD 01 00 20      [10]  434 	ld	bc,#0x2000
   01B0 09            [11]  435 	add	hl,bc
   01B1 16 00         [ 7]  436 	ld	d,#0x00
   01B3 7C            [ 4]  437 	ld	a,h
   01B4 CB F7         [ 8]  438 	set	6, a
   01B6 6F            [ 4]  439 	ld	l,a
   01B7 D3 BF         [11]  440 	out	(_VDPControlPort),a
   01B9 FB            [ 4]  441 	ei 
                            442 ;lib/SGlib.c:240: SG_byte_array_to_VDP_data (src, size);
   01BA DD 4E 08      [19]  443 	ld	c,8 (ix)
   01BD DD 46 09      [19]  444 	ld	b,9 (ix)
   01C0 DD 5E 04      [19]  445 	ld	e,4 (ix)
   01C3 DD 56 05      [19]  446 	ld	d,5 (ix)
                            447 ;lib/SGlib.c:148: do {
   01C6                     448 00101$:
                            449 ;lib/SGlib.c:149: VDPDataPort = *(data ++);
   01C6 1A            [ 7]  450 	ld	a,(de)
   01C7 D3 BE         [11]  451 	out	(_VDPDataPort),a
   01C9 13            [ 6]  452 	inc	de
                            453 ;lib/SGlib.c:150: } while (-- size);
   01CA 69            [ 4]  454 	ld	l,c
   01CB 60            [ 4]  455 	ld	h,b
   01CC 2B            [ 6]  456 	dec	hl
   01CD 4D            [ 4]  457 	ld	c, l
   01CE 7C            [ 4]  458 	ld	a,h
   01CF 47            [ 4]  459 	ld	b,a
   01D0 B5            [ 4]  460 	or	a,l
   01D1 20 F3         [12]  461 	jr	NZ,00101$
                            462 ;lib/SGlib.c:240: SG_byte_array_to_VDP_data (src, size);
   01D3 DD E1         [14]  463 	pop	ix
   01D5 C9            [10]  464 	ret
                            465 ;lib/SGlib.c:243: void SG_loadSpritePatterns (void *src, unsigned int tilefrom, unsigned int size) {
                            466 ;	---------------------------------
                            467 ; Function SG_loadSpritePatterns
                            468 ; ---------------------------------
   01D6                     469 _SG_loadSpritePatterns::
   01D6 DD E5         [15]  470 	push	ix
   01D8 DD 21 00 00   [14]  471 	ld	ix,#0
   01DC DD 39         [15]  472 	add	ix,sp
                            473 ;lib/SGlib.c:244: SG_set_address_VRAM (SGTADDRESS + (tilefrom << 3));
   01DE F3            [ 4]  474 	di 
   01DF DD 7E 06      [19]  475 	ld	a,6 (ix)
   01E2 07            [ 4]  476 	rlca
   01E3 07            [ 4]  477 	rlca
   01E4 07            [ 4]  478 	rlca
   01E5 E6 F8         [ 7]  479 	and	a,#0xF8
   01E7 D3 BF         [11]  480 	out	(_VDPControlPort),a
   01E9 DD 6E 06      [19]  481 	ld	l,6 (ix)
   01EC DD 66 07      [19]  482 	ld	h,7 (ix)
   01EF 29            [11]  483 	add	hl, hl
   01F0 29            [11]  484 	add	hl, hl
   01F1 29            [11]  485 	add	hl, hl
   01F2 01 00 38      [10]  486 	ld	bc,#0x3800
   01F5 09            [11]  487 	add	hl,bc
   01F6 16 00         [ 7]  488 	ld	d,#0x00
   01F8 7C            [ 4]  489 	ld	a,h
   01F9 CB F7         [ 8]  490 	set	6, a
   01FB 6F            [ 4]  491 	ld	l,a
   01FC D3 BF         [11]  492 	out	(_VDPControlPort),a
   01FE FB            [ 4]  493 	ei 
                            494 ;lib/SGlib.c:245: SG_byte_array_to_VDP_data (src, size);
   01FF DD 4E 08      [19]  495 	ld	c,8 (ix)
   0202 DD 46 09      [19]  496 	ld	b,9 (ix)
   0205 DD 5E 04      [19]  497 	ld	e,4 (ix)
   0208 DD 56 05      [19]  498 	ld	d,5 (ix)
                            499 ;lib/SGlib.c:148: do {
   020B                     500 00101$:
                            501 ;lib/SGlib.c:149: VDPDataPort = *(data ++);
   020B 1A            [ 7]  502 	ld	a,(de)
   020C D3 BE         [11]  503 	out	(_VDPDataPort),a
   020E 13            [ 6]  504 	inc	de
                            505 ;lib/SGlib.c:150: } while (-- size);
   020F 69            [ 4]  506 	ld	l,c
   0210 60            [ 4]  507 	ld	h,b
   0211 2B            [ 6]  508 	dec	hl
   0212 4D            [ 4]  509 	ld	c, l
   0213 7C            [ 4]  510 	ld	a,h
   0214 47            [ 4]  511 	ld	b,a
   0215 B5            [ 4]  512 	or	a,l
   0216 20 F3         [12]  513 	jr	NZ,00101$
                            514 ;lib/SGlib.c:245: SG_byte_array_to_VDP_data (src, size);
   0218 DD E1         [14]  515 	pop	ix
   021A C9            [10]  516 	ret
                            517 ;lib/SGlib.c:248: void SG_setTileatXY (unsigned char x, unsigned char y, unsigned char tile) {
                            518 ;	---------------------------------
                            519 ; Function SG_setTileatXY
                            520 ; ---------------------------------
   021B                     521 _SG_setTileatXY::
   021B DD E5         [15]  522 	push	ix
   021D DD 21 00 00   [14]  523 	ld	ix,#0
   0221 DD 39         [15]  524 	add	ix,sp
                            525 ;lib/SGlib.c:249: SG_set_address_VRAM (PNTADDRESS + (y << 5) + x);
   0223 F3            [ 4]  526 	di 
   0224 DD 7E 05      [19]  527 	ld	a,5 (ix)
   0227 0F            [ 4]  528 	rrca
   0228 0F            [ 4]  529 	rrca
   0229 0F            [ 4]  530 	rrca
   022A E6 E0         [ 7]  531 	and	a,#0xE0
   022C DD 86 04      [19]  532 	add	a, 4 (ix)
   022F D3 BF         [11]  533 	out	(_VDPControlPort),a
   0231 DD 6E 05      [19]  534 	ld	l,5 (ix)
   0234 26 00         [ 7]  535 	ld	h,#0x00
   0236 29            [11]  536 	add	hl, hl
   0237 29            [11]  537 	add	hl, hl
   0238 29            [11]  538 	add	hl, hl
   0239 29            [11]  539 	add	hl, hl
   023A 29            [11]  540 	add	hl, hl
   023B 01 00 18      [10]  541 	ld	bc,#0x1800
   023E 09            [11]  542 	add	hl,bc
   023F DD 5E 04      [19]  543 	ld	e,4 (ix)
   0242 16 00         [ 7]  544 	ld	d,#0x00
   0244 19            [11]  545 	add	hl,de
   0245 5C            [ 4]  546 	ld	e, h
   0246 7B            [ 4]  547 	ld	a,e
   0247 CB 07         [ 8]  548 	rlc	a
   0249 9F            [ 4]  549 	sbc	a, a
   024A 57            [ 4]  550 	ld	d,a
   024B 7B            [ 4]  551 	ld	a,e
   024C CB F7         [ 8]  552 	set	6, a
   024E 67            [ 4]  553 	ld	h,a
   024F D3 BF         [11]  554 	out	(_VDPControlPort),a
   0251 FB            [ 4]  555 	ei 
                            556 ;lib/SGlib.c:250: SG_byte_to_VDP_data (tile);
   0252 DD 7E 06      [19]  557 	ld	a,6 (ix)
   0255 D3 BE         [11]  558 	out	(_VDPDataPort),a
   0257 DD E1         [14]  559 	pop	ix
   0259 C9            [10]  560 	ret
                            561 ;lib/SGlib.c:253: void SG_setNextTileatXY (unsigned char x, unsigned char y) {
                            562 ;	---------------------------------
                            563 ; Function SG_setNextTileatXY
                            564 ; ---------------------------------
   025A                     565 _SG_setNextTileatXY::
   025A DD E5         [15]  566 	push	ix
   025C DD 21 00 00   [14]  567 	ld	ix,#0
   0260 DD 39         [15]  568 	add	ix,sp
                            569 ;lib/SGlib.c:254: SG_set_address_VRAM (PNTADDRESS + (y << 5) + x);
   0262 F3            [ 4]  570 	di 
   0263 DD 7E 05      [19]  571 	ld	a,5 (ix)
   0266 0F            [ 4]  572 	rrca
   0267 0F            [ 4]  573 	rrca
   0268 0F            [ 4]  574 	rrca
   0269 E6 E0         [ 7]  575 	and	a,#0xE0
   026B DD 86 04      [19]  576 	add	a, 4 (ix)
   026E D3 BF         [11]  577 	out	(_VDPControlPort),a
   0270 DD 6E 05      [19]  578 	ld	l,5 (ix)
   0273 26 00         [ 7]  579 	ld	h,#0x00
   0275 29            [11]  580 	add	hl, hl
   0276 29            [11]  581 	add	hl, hl
   0277 29            [11]  582 	add	hl, hl
   0278 29            [11]  583 	add	hl, hl
   0279 29            [11]  584 	add	hl, hl
   027A 01 00 18      [10]  585 	ld	bc,#0x1800
   027D 09            [11]  586 	add	hl,bc
   027E DD 5E 04      [19]  587 	ld	e,4 (ix)
   0281 16 00         [ 7]  588 	ld	d,#0x00
   0283 19            [11]  589 	add	hl,de
   0284 5C            [ 4]  590 	ld	e, h
   0285 7B            [ 4]  591 	ld	a,e
   0286 CB 07         [ 8]  592 	rlc	a
   0288 9F            [ 4]  593 	sbc	a, a
   0289 57            [ 4]  594 	ld	d,a
   028A 7B            [ 4]  595 	ld	a,e
   028B CB F7         [ 8]  596 	set	6, a
   028D 67            [ 4]  597 	ld	h,a
   028E D3 BF         [11]  598 	out	(_VDPControlPort),a
   0290 FB            [ 4]  599 	ei 
   0291 DD E1         [14]  600 	pop	ix
   0293 C9            [10]  601 	ret
                            602 ;lib/SGlib.c:257: void SG_setTile (unsigned char tile) {
                            603 ;	---------------------------------
                            604 ; Function SG_setTile
                            605 ; ---------------------------------
   0294                     606 _SG_setTile::
                            607 ;lib/SGlib.c:258: SG_byte_to_VDP_data (tile);
   0294 21 02 00      [10]  608 	ld	hl, #2+0
   0297 39            [11]  609 	add	hl, sp
   0298 7E            [ 7]  610 	ld	a, (hl)
   0299 D3 BE         [11]  611 	out	(_VDPDataPort),a
   029B C9            [10]  612 	ret
                            613 ;lib/SGlib.c:261: void SG_fillTile (unsigned char tile, unsigned char count) {
                            614 ;	---------------------------------
                            615 ; Function SG_fillTile
                            616 ; ---------------------------------
   029C                     617 _SG_fillTile::
                            618 ;lib/SGlib.c:262: while (count --) SG_byte_to_VDP_data (tile);
   029C 21 02 00      [10]  619 	ld	hl, #2+0
   029F 39            [11]  620 	add	hl, sp
   02A0 56            [ 7]  621 	ld	d, (hl)
   02A1 21 03 00      [10]  622 	ld	hl, #3+0
   02A4 39            [11]  623 	add	hl, sp
   02A5 5E            [ 7]  624 	ld	e, (hl)
   02A6                     625 00101$:
   02A6 43            [ 4]  626 	ld	b,e
   02A7 1D            [ 4]  627 	dec	e
   02A8 78            [ 4]  628 	ld	a,b
   02A9 B7            [ 4]  629 	or	a, a
   02AA C8            [11]  630 	ret	Z
                            631 ;lib/SGlib.c:143: VDPDataPort = data;
   02AB 7A            [ 4]  632 	ld	a,d
   02AC D3 BE         [11]  633 	out	(_VDPDataPort),a
                            634 ;lib/SGlib.c:262: while (count --) SG_byte_to_VDP_data (tile);
   02AE 18 F6         [12]  635 	jr	00101$
                            636 ;lib/SGlib.c:265: void SG_loadTileMapArea (unsigned char x, unsigned char y,	void *src, unsigned char width, unsigned char height) {
                            637 ;	---------------------------------
                            638 ; Function SG_loadTileMapArea
                            639 ; ---------------------------------
   02B0                     640 _SG_loadTileMapArea::
   02B0 DD E5         [15]  641 	push	ix
   02B2 DD 21 00 00   [14]  642 	ld	ix,#0
   02B6 DD 39         [15]  643 	add	ix,sp
   02B8 F5            [11]  644 	push	af
                            645 ;lib/SGlib.c:266: for (gpit = y; gpit < (y + height); gpit ++) {
   02B9 DD 7E 05      [19]  646 	ld	a,5 (ix)
   02BC 32r8Br00      [13]  647 	ld	(#_gpit + 0),a
   02BF DD 7E 08      [19]  648 	ld	a,8 (ix)
   02C2 DD 77 FE      [19]  649 	ld	-2 (ix),a
   02C5                     650 00107$:
   02C5 DD 6E 05      [19]  651 	ld	l,5 (ix)
   02C8 26 00         [ 7]  652 	ld	h,#0x00
   02CA DD 5E 09      [19]  653 	ld	e,9 (ix)
   02CD 16 00         [ 7]  654 	ld	d,#0x00
   02CF 19            [11]  655 	add	hl,de
   02D0 5D            [ 4]  656 	ld	e,l
   02D1 54            [ 4]  657 	ld	d,h
   02D2 FD 21r8Br00   [14]  658 	ld	iy,#_gpit
   02D6 FD 4E 00      [19]  659 	ld	c,0 (iy)
   02D9 06 00         [ 7]  660 	ld	b,#0x00
   02DB 79            [ 4]  661 	ld	a,c
   02DC 93            [ 4]  662 	sub	a, e
   02DD 78            [ 4]  663 	ld	a,b
   02DE 9A            [ 4]  664 	sbc	a, d
   02DF E2rE4r02      [10]  665 	jp	PO, 00128$
   02E2 EE 80         [ 7]  666 	xor	a, #0x80
   02E4                     667 00128$:
   02E4 F2r47r03      [10]  668 	jp	P,00109$
                            669 ;lib/SGlib.c:267: SG_set_address_VRAM (PNTADDRESS+ (gpit << 5) + x);
   02E7 F3            [ 4]  670 	di 
   02E8 FD 21r8Br00   [14]  671 	ld	iy,#_gpit
   02EC FD 7E 00      [19]  672 	ld	a,0 (iy)
   02EF 0F            [ 4]  673 	rrca
   02F0 0F            [ 4]  674 	rrca
   02F1 0F            [ 4]  675 	rrca
   02F2 E6 E0         [ 7]  676 	and	a,#0xE0
   02F4 DD 86 04      [19]  677 	add	a, 4 (ix)
   02F7 D3 BF         [11]  678 	out	(_VDPControlPort),a
   02F9 69            [ 4]  679 	ld	l, c
   02FA 60            [ 4]  680 	ld	h, b
   02FB 29            [11]  681 	add	hl, hl
   02FC 29            [11]  682 	add	hl, hl
   02FD 29            [11]  683 	add	hl, hl
   02FE 29            [11]  684 	add	hl, hl
   02FF 29            [11]  685 	add	hl, hl
   0300 01 00 18      [10]  686 	ld	bc,#0x1800
   0303 09            [11]  687 	add	hl,bc
   0304 DD 5E 04      [19]  688 	ld	e,4 (ix)
   0307 16 00         [ 7]  689 	ld	d,#0x00
   0309 19            [11]  690 	add	hl,de
   030A 5C            [ 4]  691 	ld	e, h
   030B 7B            [ 4]  692 	ld	a,e
   030C CB 07         [ 8]  693 	rlc	a
   030E 9F            [ 4]  694 	sbc	a, a
   030F 57            [ 4]  695 	ld	d,a
   0310 7B            [ 4]  696 	ld	a,e
   0311 CB F7         [ 8]  697 	set	6, a
   0313 67            [ 4]  698 	ld	h,a
   0314 D3 BF         [11]  699 	out	(_VDPControlPort),a
   0316 FB            [ 4]  700 	ei 
                            701 ;lib/SGlib.c:268: SG_byte_brief_array_to_VDP_data (src, width);
   0317 DD 4E 06      [19]  702 	ld	c,6 (ix)
   031A DD 46 07      [19]  703 	ld	b,7 (ix)
   031D 59            [ 4]  704 	ld	e, c
   031E 50            [ 4]  705 	ld	d, b
   031F DD 7E FE      [19]  706 	ld	a,-2 (ix)
   0322 DD 77 FF      [19]  707 	ld	-1 (ix),a
                            708 ;lib/SGlib.c:155: do {
   0325                     709 00102$:
                            710 ;lib/SGlib.c:156: VDPDataPort = *(data ++);
   0325 1A            [ 7]  711 	ld	a,(de)
   0326 D3 BE         [11]  712 	out	(_VDPDataPort),a
   0328 13            [ 6]  713 	inc	de
                            714 ;lib/SGlib.c:157: } while (-- size);
   0329 DD 7E FF      [19]  715 	ld	a,-1 (ix)
   032C C6 FF         [ 7]  716 	add	a,#0xFF
   032E DD 77 FF      [19]  717 	ld	-1 (ix),a
   0331 B7            [ 4]  718 	or	a, a
   0332 20 F1         [12]  719 	jr	NZ,00102$
                            720 ;lib/SGlib.c:269: src = (unsigned char *) src + width;
   0334 DD 6E FE      [19]  721 	ld	l,-2 (ix)
   0337 26 00         [ 7]  722 	ld	h,#0x00
   0339 09            [11]  723 	add	hl,bc
   033A DD 75 06      [19]  724 	ld	6 (ix),l
   033D DD 74 07      [19]  725 	ld	7 (ix),h
                            726 ;lib/SGlib.c:266: for (gpit = y; gpit < (y + height); gpit ++) {
   0340 21r8Br00      [10]  727 	ld	hl, #_gpit+0
   0343 34            [11]  728 	inc	(hl)
   0344 C3rC5r02      [10]  729 	jp	00107$
   0347                     730 00109$:
   0347 DD F9         [10]  731 	ld	sp, ix
   0349 DD E1         [14]  732 	pop	ix
   034B C9            [10]  733 	ret
                            734 ;lib/SGlib.c:274: void SG_initSprites (void) { 
                            735 ;	---------------------------------
                            736 ; Function SG_initSprites
                            737 ; ---------------------------------
   034C                     738 _SG_initSprites::
                            739 ;lib/SGlib.c:275: for (gpit = 0; gpit < 128; gpit += 4) SpriteTable [gpit] = 0xd0;
   034C 21r8Br00      [10]  740 	ld	hl,#_gpit + 0
   034F 36 00         [10]  741 	ld	(hl), #0x00
   0351 11r06r00      [10]  742 	ld	de,#_SpriteTable+0
   0354                     743 00102$:
   0354 2Ar8Br00      [16]  744 	ld	hl,(_gpit)
   0357 26 00         [ 7]  745 	ld	h,#0x00
   0359 19            [11]  746 	add	hl,de
   035A 36 D0         [10]  747 	ld	(hl),#0xD0
   035C 21r8Br00      [10]  748 	ld	hl, #_gpit+0
   035F 34            [11]  749 	inc	(hl)
   0360 21r8Br00      [10]  750 	ld	hl, #_gpit+0
   0363 34            [11]  751 	inc	(hl)
   0364 21r8Br00      [10]  752 	ld	hl, #_gpit+0
   0367 34            [11]  753 	inc	(hl)
   0368 21r8Br00      [10]  754 	ld	hl, #_gpit+0
   036B 34            [11]  755 	inc	(hl)
   036C 3Ar8Br00      [13]  756 	ld	a,(#_gpit + 0)
   036F D6 80         [ 7]  757 	sub	a, #0x80
   0371 38 E1         [12]  758 	jr	C,00102$
                            759 ;lib/SGlib.c:276: stp = SpriteTable + (first_sprite << 2);
   0373 FD 21r8Ar00   [14]  760 	ld	iy,#_first_sprite
   0377 FD 6E 00      [19]  761 	ld	l,0 (iy)
   037A 26 00         [ 7]  762 	ld	h,#0x00
   037C 29            [11]  763 	add	hl, hl
   037D 29            [11]  764 	add	hl, hl
   037E 19            [11]  765 	add	hl,de
   037F 22r86r00      [16]  766 	ld	(_stp),hl
                            767 ;lib/SGlib.c:277: ++ first_sprite; first_sprite &= 31;
   0382 21r8Ar00      [10]  768 	ld	hl, #_first_sprite+0
   0385 34            [11]  769 	inc	(hl)
   0386 3Ar8Ar00      [13]  770 	ld	a,(#_first_sprite + 0)
   0389 E6 1F         [ 7]  771 	and	a, #0x1F
   038B 32r8Ar00      [13]  772 	ld	(#_first_sprite + 0),a
   038E C9            [10]  773 	ret
                            774 ;lib/SGlib.c:280: void SG_addSprite (unsigned char x, unsigned char y, unsigned char tile, unsigned char attr) {
                            775 ;	---------------------------------
                            776 ; Function SG_addSprite
                            777 ; ---------------------------------
   038F                     778 _SG_addSprite::
                            779 ;lib/SGlib.c:281: *stp ++ = y;
   038F 2Ar86r00      [16]  780 	ld	hl,(_stp)
   0392 FD 21 03 00   [14]  781 	ld	iy,#3
   0396 FD 39         [15]  782 	add	iy,sp
   0398 FD 7E 00      [19]  783 	ld	a,0 (iy)
   039B 77            [ 7]  784 	ld	(hl),a
   039C 21r86r00      [10]  785 	ld	hl, #_stp+0
   039F 34            [11]  786 	inc	(hl)
   03A0 20 04         [12]  787 	jr	NZ,00109$
   03A2 21r87r00      [10]  788 	ld	hl, #_stp+1
   03A5 34            [11]  789 	inc	(hl)
   03A6                     790 00109$:
                            791 ;lib/SGlib.c:282: *stp ++ = x;
   03A6 2Ar86r00      [16]  792 	ld	hl,(_stp)
   03A9 FD 21 02 00   [14]  793 	ld	iy,#2
   03AD FD 39         [15]  794 	add	iy,sp
   03AF FD 7E 00      [19]  795 	ld	a,0 (iy)
   03B2 77            [ 7]  796 	ld	(hl),a
   03B3 21r86r00      [10]  797 	ld	hl, #_stp+0
   03B6 34            [11]  798 	inc	(hl)
   03B7 20 04         [12]  799 	jr	NZ,00110$
   03B9 21r87r00      [10]  800 	ld	hl, #_stp+1
   03BC 34            [11]  801 	inc	(hl)
   03BD                     802 00110$:
                            803 ;lib/SGlib.c:283: *stp ++ = tile;
   03BD 2Ar86r00      [16]  804 	ld	hl,(_stp)
   03C0 FD 21 04 00   [14]  805 	ld	iy,#4
   03C4 FD 39         [15]  806 	add	iy,sp
   03C6 FD 7E 00      [19]  807 	ld	a,0 (iy)
   03C9 77            [ 7]  808 	ld	(hl),a
   03CA 21r86r00      [10]  809 	ld	hl, #_stp+0
   03CD 34            [11]  810 	inc	(hl)
   03CE 20 04         [12]  811 	jr	NZ,00111$
   03D0 21r87r00      [10]  812 	ld	hl, #_stp+1
   03D3 34            [11]  813 	inc	(hl)
   03D4                     814 00111$:
                            815 ;lib/SGlib.c:284: *stp ++ = attr;
   03D4 2Ar86r00      [16]  816 	ld	hl,(_stp)
   03D7 FD 21 05 00   [14]  817 	ld	iy,#5
   03DB FD 39         [15]  818 	add	iy,sp
   03DD FD 7E 00      [19]  819 	ld	a,0 (iy)
   03E0 77            [ 7]  820 	ld	(hl),a
   03E1 21r86r00      [10]  821 	ld	hl, #_stp+0
   03E4 34            [11]  822 	inc	(hl)
   03E5 20 04         [12]  823 	jr	NZ,00112$
   03E7 21r87r00      [10]  824 	ld	hl, #_stp+1
   03EA 34            [11]  825 	inc	(hl)
   03EB                     826 00112$:
                            827 ;lib/SGlib.c:285: stp += 4 * AUTOCYCLE_PRIME; if (stp > SpriteTableEnd) stp -= 128;
   03EB 21r86r00      [10]  828 	ld	hl,#_stp
   03EE 7E            [ 7]  829 	ld	a,(hl)
   03EF C6 1C         [ 7]  830 	add	a, #0x1C
   03F1 77            [ 7]  831 	ld	(hl),a
   03F2 23            [ 6]  832 	inc	hl
   03F3 7E            [ 7]  833 	ld	a,(hl)
   03F4 CE 00         [ 7]  834 	adc	a, #0x00
   03F6 77            [ 7]  835 	ld	(hl),a
   03F7 21r88r00      [10]  836 	ld	hl,#_SpriteTableEnd
   03FA 7E            [ 7]  837 	ld	a,(hl)
   03FB FD 21r86r00   [14]  838 	ld	iy,#_stp
   03FF FD 96 00      [19]  839 	sub	a, 0 (iy)
   0402 23            [ 6]  840 	inc	hl
   0403 7E            [ 7]  841 	ld	a,(hl)
   0404 FD 21r86r00   [14]  842 	ld	iy,#_stp
   0408 FD 9E 01      [19]  843 	sbc	a, 1 (iy)
   040B D0            [11]  844 	ret	NC
   040C 21r86r00      [10]  845 	ld	hl,#_stp
   040F 7E            [ 7]  846 	ld	a,(hl)
   0410 C6 80         [ 7]  847 	add	a,#0x80
   0412 77            [ 7]  848 	ld	(hl),a
   0413 23            [ 6]  849 	inc	hl
   0414 7E            [ 7]  850 	ld	a,(hl)
   0415 CE FF         [ 7]  851 	adc	a,#0xFF
   0417 77            [ 7]  852 	ld	(hl),a
   0418 C9            [10]  853 	ret
                            854 ;lib/SGlib.c:288: void SG_addMetaSprite1x1 (unsigned char x, unsigned char y, const unsigned char *mt) {
                            855 ;	---------------------------------
                            856 ; Function SG_addMetaSprite1x1
                            857 ; ---------------------------------
   0419                     858 _SG_addMetaSprite1x1::
   0419 DD E5         [15]  859 	push	ix
   041B DD 21 00 00   [14]  860 	ld	ix,#0
   041F DD 39         [15]  861 	add	ix,sp
                            862 ;lib/SGlib.c:289: mt += 2; 
   0421 DD 7E 06      [19]  863 	ld	a,6 (ix)
   0424 C6 02         [ 7]  864 	add	a, #0x02
   0426 DD 77 06      [19]  865 	ld	6 (ix),a
   0429 DD 7E 07      [19]  866 	ld	a,7 (ix)
   042C CE 00         [ 7]  867 	adc	a, #0x00
   042E DD 77 07      [19]  868 	ld	7 (ix),a
                            869 ;lib/SGlib.c:290: *stp ++ = y;
   0431 2Ar86r00      [16]  870 	ld	hl,(_stp)
   0434 DD 7E 05      [19]  871 	ld	a,5 (ix)
   0437 77            [ 7]  872 	ld	(hl),a
   0438 21r86r00      [10]  873 	ld	hl, #_stp+0
   043B 34            [11]  874 	inc	(hl)
   043C 20 04         [12]  875 	jr	NZ,00121$
   043E 21r87r00      [10]  876 	ld	hl, #_stp+1
   0441 34            [11]  877 	inc	(hl)
   0442                     878 00121$:
                            879 ;lib/SGlib.c:291: *stp ++ = x;
   0442 2Ar86r00      [16]  880 	ld	hl,(_stp)
   0445 DD 7E 04      [19]  881 	ld	a,4 (ix)
   0448 77            [ 7]  882 	ld	(hl),a
   0449 21r86r00      [10]  883 	ld	hl, #_stp+0
   044C 34            [11]  884 	inc	(hl)
   044D 20 04         [12]  885 	jr	NZ,00122$
   044F 21r87r00      [10]  886 	ld	hl, #_stp+1
   0452 34            [11]  887 	inc	(hl)
   0453                     888 00122$:
                            889 ;lib/SGlib.c:292: *stp ++ = *mt ++;
   0453 ED 5Br86r00   [20]  890 	ld	de,(_stp)
   0457 DD 6E 06      [19]  891 	ld	l,6 (ix)
   045A DD 66 07      [19]  892 	ld	h,7 (ix)
   045D 46            [ 7]  893 	ld	b,(hl)
   045E 23            [ 6]  894 	inc	hl
   045F DD 75 06      [19]  895 	ld	6 (ix),l
   0462 DD 74 07      [19]  896 	ld	7 (ix),h
   0465 78            [ 4]  897 	ld	a,b
   0466 12            [ 7]  898 	ld	(de),a
   0467 21r86r00      [10]  899 	ld	hl, #_stp+0
   046A 34            [11]  900 	inc	(hl)
   046B 20 04         [12]  901 	jr	NZ,00123$
   046D 21r87r00      [10]  902 	ld	hl, #_stp+1
   0470 34            [11]  903 	inc	(hl)
   0471                     904 00123$:
                            905 ;lib/SGlib.c:293: *stp ++ = *mt ++;
   0471 ED 5Br86r00   [20]  906 	ld	de,(_stp)
   0475 DD 6E 06      [19]  907 	ld	l,6 (ix)
   0478 DD 66 07      [19]  908 	ld	h,7 (ix)
   047B 46            [ 7]  909 	ld	b,(hl)
   047C 23            [ 6]  910 	inc	hl
   047D DD 75 06      [19]  911 	ld	6 (ix),l
   0480 DD 74 07      [19]  912 	ld	7 (ix),h
   0483 78            [ 4]  913 	ld	a,b
   0484 12            [ 7]  914 	ld	(de),a
   0485 21r86r00      [10]  915 	ld	hl, #_stp+0
   0488 34            [11]  916 	inc	(hl)
   0489 20 04         [12]  917 	jr	NZ,00124$
   048B 21r87r00      [10]  918 	ld	hl, #_stp+1
   048E 34            [11]  919 	inc	(hl)
   048F                     920 00124$:
                            921 ;lib/SGlib.c:294: stp += 4 * AUTOCYCLE_PRIME; if (stp > SpriteTableEnd) stp -= 128;
   048F 21r86r00      [10]  922 	ld	hl,#_stp
   0492 7E            [ 7]  923 	ld	a,(hl)
   0493 C6 1C         [ 7]  924 	add	a, #0x1C
   0495 77            [ 7]  925 	ld	(hl),a
   0496 23            [ 6]  926 	inc	hl
   0497 7E            [ 7]  927 	ld	a,(hl)
   0498 CE 00         [ 7]  928 	adc	a, #0x00
   049A 77            [ 7]  929 	ld	(hl),a
   049B 21r88r00      [10]  930 	ld	hl,#_SpriteTableEnd
   049E 7E            [ 7]  931 	ld	a,(hl)
   049F FD 21r86r00   [14]  932 	ld	iy,#_stp
   04A3 FD 96 00      [19]  933 	sub	a, 0 (iy)
   04A6 23            [ 6]  934 	inc	hl
   04A7 7E            [ 7]  935 	ld	a,(hl)
   04A8 FD 21r86r00   [14]  936 	ld	iy,#_stp
   04AC FD 9E 01      [19]  937 	sbc	a, 1 (iy)
   04AF 30 0C         [12]  938 	jr	NC,00102$
   04B1 21r86r00      [10]  939 	ld	hl,#_stp
   04B4 7E            [ 7]  940 	ld	a,(hl)
   04B5 C6 80         [ 7]  941 	add	a,#0x80
   04B7 77            [ 7]  942 	ld	(hl),a
   04B8 23            [ 6]  943 	inc	hl
   04B9 7E            [ 7]  944 	ld	a,(hl)
   04BA CE FF         [ 7]  945 	adc	a,#0xFF
   04BC 77            [ 7]  946 	ld	(hl),a
   04BD                     947 00102$:
                            948 ;lib/SGlib.c:296: if (*mt == 0x80) return;
   04BD DD 6E 06      [19]  949 	ld	l,6 (ix)
   04C0 DD 66 07      [19]  950 	ld	h,7 (ix)
   04C3 7E            [ 7]  951 	ld	a,(hl)
   04C4 D6 80         [ 7]  952 	sub	a, #0x80
   04C6 CAr5Ar05      [10]  953 	jp	Z,00107$
   04C9 18 03         [12]  954 	jr	00104$
   04CB C3r5Ar05      [10]  955 	jp	00107$
   04CE                     956 00104$:
                            957 ;lib/SGlib.c:298: mt += 2; 
   04CE 23            [ 6]  958 	inc	hl
   04CF 23            [ 6]  959 	inc	hl
   04D0 DD 75 06      [19]  960 	ld	6 (ix),l
   04D3 DD 74 07      [19]  961 	ld	7 (ix),h
                            962 ;lib/SGlib.c:299: *stp ++ = y;
   04D6 2Ar86r00      [16]  963 	ld	hl,(_stp)
   04D9 DD 7E 05      [19]  964 	ld	a,5 (ix)
   04DC 77            [ 7]  965 	ld	(hl),a
   04DD 21r86r00      [10]  966 	ld	hl, #_stp+0
   04E0 34            [11]  967 	inc	(hl)
   04E1 20 04         [12]  968 	jr	NZ,00127$
   04E3 21r87r00      [10]  969 	ld	hl, #_stp+1
   04E6 34            [11]  970 	inc	(hl)
   04E7                     971 00127$:
                            972 ;lib/SGlib.c:300: *stp ++ = x;
   04E7 2Ar86r00      [16]  973 	ld	hl,(_stp)
   04EA DD 7E 04      [19]  974 	ld	a,4 (ix)
   04ED 77            [ 7]  975 	ld	(hl),a
   04EE 21r86r00      [10]  976 	ld	hl, #_stp+0
   04F1 34            [11]  977 	inc	(hl)
   04F2 20 04         [12]  978 	jr	NZ,00128$
   04F4 21r87r00      [10]  979 	ld	hl, #_stp+1
   04F7 34            [11]  980 	inc	(hl)
   04F8                     981 00128$:
                            982 ;lib/SGlib.c:301: *stp ++ = *mt ++;
   04F8 ED 5Br86r00   [20]  983 	ld	de,(_stp)
   04FC DD 6E 06      [19]  984 	ld	l,6 (ix)
   04FF DD 66 07      [19]  985 	ld	h,7 (ix)
   0502 46            [ 7]  986 	ld	b,(hl)
   0503 23            [ 6]  987 	inc	hl
   0504 DD 75 06      [19]  988 	ld	6 (ix),l
   0507 DD 74 07      [19]  989 	ld	7 (ix),h
   050A 78            [ 4]  990 	ld	a,b
   050B 12            [ 7]  991 	ld	(de),a
   050C 21r86r00      [10]  992 	ld	hl, #_stp+0
   050F 34            [11]  993 	inc	(hl)
   0510 20 04         [12]  994 	jr	NZ,00129$
   0512 21r87r00      [10]  995 	ld	hl, #_stp+1
   0515 34            [11]  996 	inc	(hl)
   0516                     997 00129$:
                            998 ;lib/SGlib.c:302: *stp ++ = *mt ++;
   0516 ED 5Br86r00   [20]  999 	ld	de,(_stp)
   051A DD 6E 06      [19] 1000 	ld	l,6 (ix)
   051D DD 66 07      [19] 1001 	ld	h,7 (ix)
   0520 7E            [ 7] 1002 	ld	a,(hl)
   0521 12            [ 7] 1003 	ld	(de),a
   0522 21r86r00      [10] 1004 	ld	hl, #_stp+0
   0525 34            [11] 1005 	inc	(hl)
   0526 20 04         [12] 1006 	jr	NZ,00130$
   0528 21r87r00      [10] 1007 	ld	hl, #_stp+1
   052B 34            [11] 1008 	inc	(hl)
   052C                    1009 00130$:
                           1010 ;lib/SGlib.c:303: stp += 4 * AUTOCYCLE_PRIME; if (stp > SpriteTableEnd) stp -= 128;
   052C 21r86r00      [10] 1011 	ld	hl,#_stp
   052F 7E            [ 7] 1012 	ld	a,(hl)
   0530 C6 1C         [ 7] 1013 	add	a, #0x1C
   0532 77            [ 7] 1014 	ld	(hl),a
   0533 23            [ 6] 1015 	inc	hl
   0534 7E            [ 7] 1016 	ld	a,(hl)
   0535 CE 00         [ 7] 1017 	adc	a, #0x00
   0537 77            [ 7] 1018 	ld	(hl),a
   0538 21r88r00      [10] 1019 	ld	hl,#_SpriteTableEnd
   053B 7E            [ 7] 1020 	ld	a,(hl)
   053C FD 21r86r00   [14] 1021 	ld	iy,#_stp
   0540 FD 96 00      [19] 1022 	sub	a, 0 (iy)
   0543 23            [ 6] 1023 	inc	hl
   0544 7E            [ 7] 1024 	ld	a,(hl)
   0545 FD 21r86r00   [14] 1025 	ld	iy,#_stp
   0549 FD 9E 01      [19] 1026 	sbc	a, 1 (iy)
   054C 30 0C         [12] 1027 	jr	NC,00107$
   054E 21r86r00      [10] 1028 	ld	hl,#_stp
   0551 7E            [ 7] 1029 	ld	a,(hl)
   0552 C6 80         [ 7] 1030 	add	a,#0x80
   0554 77            [ 7] 1031 	ld	(hl),a
   0555 23            [ 6] 1032 	inc	hl
   0556 7E            [ 7] 1033 	ld	a,(hl)
   0557 CE FF         [ 7] 1034 	adc	a,#0xFF
   0559 77            [ 7] 1035 	ld	(hl),a
   055A                    1036 00107$:
   055A DD E1         [14] 1037 	pop	ix
   055C C9            [10] 1038 	ret
                           1039 ;lib/SGlib.c:306: void SG_addMetaSprite (unsigned char x, unsigned char y, const unsigned char *mt) {
                           1040 ;	---------------------------------
                           1041 ; Function SG_addMetaSprite
                           1042 ; ---------------------------------
   055D                    1043 _SG_addMetaSprite::
   055D DD E5         [15] 1044 	push	ix
   055F DD 21 00 00   [14] 1045 	ld	ix,#0
   0563 DD 39         [15] 1046 	add	ix,sp
                           1047 ;lib/SGlib.c:307: while (0x80 != (*stp = *mt ++)) {
   0565                    1048 00103$:
   0565 ED 5Br86r00   [20] 1049 	ld	de,(_stp)
   0569 DD 6E 06      [19] 1050 	ld	l,6 (ix)
   056C DD 66 07      [19] 1051 	ld	h,7 (ix)
   056F 46            [ 7] 1052 	ld	b,(hl)
   0570 23            [ 6] 1053 	inc	hl
   0571 DD 75 06      [19] 1054 	ld	6 (ix),l
   0574 DD 74 07      [19] 1055 	ld	7 (ix),h
   0577 78            [ 4] 1056 	ld	a,b
   0578 12            [ 7] 1057 	ld	(de),a
   0579 78            [ 4] 1058 	ld	a,b
   057A D6 80         [ 7] 1059 	sub	a, #0x80
   057C CAr20r06      [10] 1060 	jp	Z,00106$
   057F 2Ar86r00      [16] 1061 	ld	hl,(_stp)
                           1062 ;lib/SGlib.c:308: *stp += y; stp ++;
   0582 7E            [ 7] 1063 	ld	a, (hl)
   0583 DD 86 05      [19] 1064 	add	a, 5 (ix)
   0586 77            [ 7] 1065 	ld	(hl),a
   0587 21r86r00      [10] 1066 	ld	hl, #_stp+0
   058A 34            [11] 1067 	inc	(hl)
   058B 20 04         [12] 1068 	jr	NZ,00121$
   058D 21r87r00      [10] 1069 	ld	hl, #_stp+1
   0590 34            [11] 1070 	inc	(hl)
   0591                    1071 00121$:
                           1072 ;lib/SGlib.c:309: *stp ++ = x + *mt++;
   0591 ED 5Br86r00   [20] 1073 	ld	de,(_stp)
   0595 DD 6E 06      [19] 1074 	ld	l,6 (ix)
   0598 DD 66 07      [19] 1075 	ld	h,7 (ix)
   059B 46            [ 7] 1076 	ld	b,(hl)
   059C 23            [ 6] 1077 	inc	hl
   059D DD 75 06      [19] 1078 	ld	6 (ix),l
   05A0 DD 74 07      [19] 1079 	ld	7 (ix),h
   05A3 DD 7E 04      [19] 1080 	ld	a,4 (ix)
   05A6 80            [ 4] 1081 	add	a, b
   05A7 12            [ 7] 1082 	ld	(de),a
   05A8 21r86r00      [10] 1083 	ld	hl, #_stp+0
   05AB 34            [11] 1084 	inc	(hl)
   05AC 20 04         [12] 1085 	jr	NZ,00122$
   05AE 21r87r00      [10] 1086 	ld	hl, #_stp+1
   05B1 34            [11] 1087 	inc	(hl)
   05B2                    1088 00122$:
                           1089 ;lib/SGlib.c:310: *stp ++ = *mt ++;
   05B2 ED 5Br86r00   [20] 1090 	ld	de,(_stp)
   05B6 DD 6E 06      [19] 1091 	ld	l,6 (ix)
   05B9 DD 66 07      [19] 1092 	ld	h,7 (ix)
   05BC 46            [ 7] 1093 	ld	b,(hl)
   05BD 23            [ 6] 1094 	inc	hl
   05BE DD 75 06      [19] 1095 	ld	6 (ix),l
   05C1 DD 74 07      [19] 1096 	ld	7 (ix),h
   05C4 78            [ 4] 1097 	ld	a,b
   05C5 12            [ 7] 1098 	ld	(de),a
   05C6 21r86r00      [10] 1099 	ld	hl, #_stp+0
   05C9 34            [11] 1100 	inc	(hl)
   05CA 20 04         [12] 1101 	jr	NZ,00123$
   05CC 21r87r00      [10] 1102 	ld	hl, #_stp+1
   05CF 34            [11] 1103 	inc	(hl)
   05D0                    1104 00123$:
                           1105 ;lib/SGlib.c:311: *stp ++ = *mt ++;
   05D0 ED 5Br86r00   [20] 1106 	ld	de,(_stp)
   05D4 DD 6E 06      [19] 1107 	ld	l,6 (ix)
   05D7 DD 66 07      [19] 1108 	ld	h,7 (ix)
   05DA 46            [ 7] 1109 	ld	b,(hl)
   05DB 23            [ 6] 1110 	inc	hl
   05DC DD 75 06      [19] 1111 	ld	6 (ix),l
   05DF DD 74 07      [19] 1112 	ld	7 (ix),h
   05E2 78            [ 4] 1113 	ld	a,b
   05E3 12            [ 7] 1114 	ld	(de),a
   05E4 21r86r00      [10] 1115 	ld	hl, #_stp+0
   05E7 34            [11] 1116 	inc	(hl)
   05E8 20 04         [12] 1117 	jr	NZ,00124$
   05EA 21r87r00      [10] 1118 	ld	hl, #_stp+1
   05ED 34            [11] 1119 	inc	(hl)
   05EE                    1120 00124$:
                           1121 ;lib/SGlib.c:312: stp += 4 * AUTOCYCLE_PRIME; if (stp > SpriteTableEnd) stp -= 128;
   05EE 21r86r00      [10] 1122 	ld	hl,#_stp
   05F1 7E            [ 7] 1123 	ld	a,(hl)
   05F2 C6 1C         [ 7] 1124 	add	a, #0x1C
   05F4 77            [ 7] 1125 	ld	(hl),a
   05F5 23            [ 6] 1126 	inc	hl
   05F6 7E            [ 7] 1127 	ld	a,(hl)
   05F7 CE 00         [ 7] 1128 	adc	a, #0x00
   05F9 77            [ 7] 1129 	ld	(hl),a
   05FA 21r88r00      [10] 1130 	ld	hl,#_SpriteTableEnd
   05FD 7E            [ 7] 1131 	ld	a,(hl)
   05FE FD 21r86r00   [14] 1132 	ld	iy,#_stp
   0602 FD 96 00      [19] 1133 	sub	a, 0 (iy)
   0605 23            [ 6] 1134 	inc	hl
   0606 7E            [ 7] 1135 	ld	a,(hl)
   0607 FD 21r86r00   [14] 1136 	ld	iy,#_stp
   060B FD 9E 01      [19] 1137 	sbc	a, 1 (iy)
   060E D2r65r05      [10] 1138 	jp	NC,00103$
   0611 21r86r00      [10] 1139 	ld	hl,#_stp
   0614 7E            [ 7] 1140 	ld	a,(hl)
   0615 C6 80         [ 7] 1141 	add	a,#0x80
   0617 77            [ 7] 1142 	ld	(hl),a
   0618 23            [ 6] 1143 	inc	hl
   0619 7E            [ 7] 1144 	ld	a,(hl)
   061A CE FF         [ 7] 1145 	adc	a,#0xFF
   061C 77            [ 7] 1146 	ld	(hl),a
   061D C3r65r05      [10] 1147 	jp	00103$
   0620                    1148 00106$:
   0620 DD E1         [14] 1149 	pop	ix
   0622 C9            [10] 1150 	ret
                           1151 ;lib/SGlib.c:316: void SG_finalizeSprites (void) {
                           1152 ;	---------------------------------
                           1153 ; Function SG_finalizeSprites
                           1154 ; ---------------------------------
   0623                    1155 _SG_finalizeSprites::
                           1156 ;lib/SGlib.c:318: }
   0623 C9            [10] 1157 	ret
                           1158 ;lib/SGlib.c:320: unsigned char *SG_getStp (void) {
                           1159 ;	---------------------------------
                           1160 ; Function SG_getStp
                           1161 ; ---------------------------------
   0624                    1162 _SG_getStp::
                           1163 ;lib/SGlib.c:321: return stp;
   0624 2Ar86r00      [16] 1164 	ld	hl,(_stp)
   0627 C9            [10] 1165 	ret
                           1166 ;lib/SGlib.c:324: void SG_setStp (unsigned char *s) {
                           1167 ;	---------------------------------
                           1168 ; Function SG_setStp
                           1169 ; ---------------------------------
   0628                    1170 _SG_setStp::
                           1171 ;lib/SGlib.c:325: stp = s;
   0628 21 02 00      [10] 1172 	ld	hl, #2+0
   062B 39            [11] 1173 	add	hl, sp
   062C 7E            [ 7] 1174 	ld	a, (hl)
   062D 32r86r00      [13] 1175 	ld	(#_stp + 0),a
   0630 21 03 00      [10] 1176 	ld	hl, #2+1
   0633 39            [11] 1177 	add	hl, sp
   0634 7E            [ 7] 1178 	ld	a, (hl)
   0635 32r87r00      [13] 1179 	ld	(#_stp + 1),a
   0638 C9            [10] 1180 	ret
                           1181 ;lib/SGlib.c:367: void SG_copySpritestoSAT (void) {
                           1182 ;	---------------------------------
                           1183 ; Function SG_copySpritestoSAT
                           1184 ; ---------------------------------
   0639                    1185 _SG_copySpritestoSAT::
                           1186 ;lib/SGlib.c:368: SG_set_address_VRAM (SATADDRESS);
   0639 F3            [ 4] 1187 	di 
   063A 3E 00         [ 7] 1188 	ld	a,#0x00
   063C D3 BF         [11] 1189 	out	(_VDPControlPort),a
   063E 3E 5B         [ 7] 1190 	ld	a,#0x5B
   0640 D3 BF         [11] 1191 	out	(_VDPControlPort),a
   0642 FB            [ 4] 1192 	ei 
                           1193 ;lib/SGlib.c:369: SG_byte_brief_array_to_VDP_data (SpriteTable, MAXSPRITES*4);
   0643 11r06r00      [10] 1194 	ld	de,#_SpriteTable
   0646 06 80         [ 7] 1195 	ld	b,#0x80
                           1196 ;lib/SGlib.c:155: do {
   0648                    1197 00101$:
                           1198 ;lib/SGlib.c:156: VDPDataPort = *(data ++);
   0648 1A            [ 7] 1199 	ld	a,(de)
   0649 D3 BE         [11] 1200 	out	(_VDPDataPort),a
   064B 13            [ 6] 1201 	inc	de
                           1202 ;lib/SGlib.c:157: } while (-- size);
   064C 10 FA         [13] 1203 	djnz	00101$
                           1204 ;lib/SGlib.c:369: SG_byte_brief_array_to_VDP_data (SpriteTable, MAXSPRITES*4);
   064E C9            [10] 1205 	ret
                           1206 ;lib/SGlib.c:372: void SG_waitForVBlank (void) {
                           1207 ;	---------------------------------
                           1208 ; Function SG_waitForVBlank
                           1209 ; ---------------------------------
   064F                    1210 _SG_waitForVBlank::
                           1211 ;lib/SGlib.c:373: VDPBlank = false;
   064F 21r00r00      [10] 1212 	ld	hl,#_VDPBlank + 0
   0652 36 00         [10] 1213 	ld	(hl), #0x00
                           1214 ;lib/SGlib.c:374: while (!VDPBlank);
   0654                    1215 00101$:
   0654 21r00r00      [10] 1216 	ld	hl,#_VDPBlank+0
   0657 CB 46         [12] 1217 	bit	0, (hl)
   0659 28 F9         [12] 1218 	jr	Z,00101$
   065B C9            [10] 1219 	ret
                           1220 ;lib/SGlib.c:377: unsigned int SG_getKeysStatus (void) {
                           1221 ;	---------------------------------
                           1222 ; Function SG_getKeysStatus
                           1223 ; ---------------------------------
   065C                    1224 _SG_getKeysStatus::
                           1225 ;lib/SGlib.c:378: return (KeysStatus);
   065C 2Ar02r00      [16] 1226 	ld	hl,(_KeysStatus)
   065F C9            [10] 1227 	ret
                           1228 ;lib/SGlib.c:381: _Bool SG_queryPauseRequested (void) {
                           1229 ;	---------------------------------
                           1230 ; Function SG_queryPauseRequested
                           1231 ; ---------------------------------
   0660                    1232 _SG_queryPauseRequested::
                           1233 ;lib/SGlib.c:382: return (PauseRequested);
   0660 FD 21r01r00   [14] 1234 	ld	iy,#_PauseRequested
   0664 FD 6E 00      [19] 1235 	ld	l,0 (iy)
   0667 C9            [10] 1236 	ret
                           1237 ;lib/SGlib.c:385: void SG_resetPauseRequest (void) {
                           1238 ;	---------------------------------
                           1239 ; Function SG_resetPauseRequest
                           1240 ; ---------------------------------
   0668                    1241 _SG_resetPauseRequest::
                           1242 ;lib/SGlib.c:386: PauseRequested = false;
   0668 21r01r00      [10] 1243 	ld	hl,#_PauseRequested + 0
   066B 36 00         [10] 1244 	ld	(hl), #0x00
   066D C9            [10] 1245 	ret
                           1246 ;lib/SGlib.c:390: void SG_VRAMmemset (unsigned int dst, unsigned char value, unsigned int size) {
                           1247 ;	---------------------------------
                           1248 ; Function SG_VRAMmemset
                           1249 ; ---------------------------------
   066E                    1250 _SG_VRAMmemset::
                           1251 ;lib/SGlib.c:391: SG_set_address_VRAM (dst);
   066E F3            [ 4] 1252 	di 
   066F FD 21 02 00   [14] 1253 	ld	iy,#2
   0673 FD 39         [15] 1254 	add	iy,sp
   0675 FD 7E 00      [19] 1255 	ld	a, 0 (iy)
   0678 D3 BF         [11] 1256 	out	(_VDPControlPort),a
   067A FD 7E 01      [19] 1257 	ld	a, 1 (iy)
   067D 2E 00         [ 7] 1258 	ld	l, #0x00
   067F CB F7         [ 8] 1259 	set	6, a
   0681 67            [ 4] 1260 	ld	h,a
   0682 D3 BF         [11] 1261 	out	(_VDPControlPort),a
   0684 FB            [ 4] 1262 	ei 
                           1263 ;lib/SGlib.c:392: while (size>0) {
   0685 21 04 00      [10] 1264 	ld	hl, #4+0
   0688 39            [11] 1265 	add	hl, sp
   0689 56            [ 7] 1266 	ld	d, (hl)
   068A 21 05 00      [10] 1267 	ld	hl, #5
   068D 39            [11] 1268 	add	hl, sp
   068E 4E            [ 7] 1269 	ld	c, (hl)
   068F 23            [ 6] 1270 	inc	hl
   0690 46            [ 7] 1271 	ld	b, (hl)
   0691                    1272 00101$:
   0691 78            [ 4] 1273 	ld	a,b
   0692 B1            [ 4] 1274 	or	a,c
   0693 C8            [11] 1275 	ret	Z
                           1276 ;lib/SGlib.c:143: VDPDataPort = data;
   0694 7A            [ 4] 1277 	ld	a,d
   0695 D3 BE         [11] 1278 	out	(_VDPDataPort),a
                           1279 ;lib/SGlib.c:394: size--;
   0697 0B            [ 6] 1280 	dec	bc
   0698 18 F7         [12] 1281 	jr	00101$
                           1282 ;lib/SGlib.c:401: void UNSAFE_SG_copySpritestoSAT (void) {
                           1283 ;	---------------------------------
                           1284 ; Function UNSAFE_SG_copySpritestoSAT
                           1285 ; ---------------------------------
   069A                    1286 _UNSAFE_SG_copySpritestoSAT::
                           1287 ;lib/SGlib.c:402: SG_set_address_VRAM (SATADDRESS);
   069A F3            [ 4] 1288 	di 
   069B 3E 00         [ 7] 1289 	ld	a,#0x00
   069D D3 BF         [11] 1290 	out	(_VDPControlPort),a
   069F 3E 5B         [ 7] 1291 	ld	a,#0x5B
   06A1 D3 BF         [11] 1292 	out	(_VDPControlPort),a
   06A3 FB            [ 4] 1293 	ei 
                           1294 ;lib/SGlib.c:411: __endasm;
   06A4 0E BE         [ 7] 1295 	ld c,#_VDPDataPort
   06A6 21r06r00      [10] 1296 	ld hl,#_SpriteTable
   06A9 CDr00rFF      [17] 1297 	call _outi_block-32*4*2
   06AC C9            [10] 1298 	ret
                           1299 ;lib/SGlib.c:414: void UNSAFE_SG_VRAMmemcpy128 (unsigned int dst, void *src) {
                           1300 ;	---------------------------------
                           1301 ; Function UNSAFE_SG_VRAMmemcpy128
                           1302 ; ---------------------------------
   06AD                    1303 _UNSAFE_SG_VRAMmemcpy128::
                           1304 ;lib/SGlib.c:415: SG_set_address_VRAM (dst);
   06AD F3            [ 4] 1305 	di 
   06AE FD 21 02 00   [14] 1306 	ld	iy,#2
   06B2 FD 39         [15] 1307 	add	iy,sp
   06B4 FD 7E 00      [19] 1308 	ld	a, 0 (iy)
   06B7 D3 BF         [11] 1309 	out	(_VDPControlPort),a
   06B9 FD 7E 01      [19] 1310 	ld	a, 1 (iy)
   06BC 2E 00         [ 7] 1311 	ld	l, #0x00
   06BE CB F7         [ 8] 1312 	set	6, a
   06C0 67            [ 4] 1313 	ld	h,a
   06C1 D3 BF         [11] 1314 	out	(_VDPControlPort),a
   06C3 FB            [ 4] 1315 	ei 
                           1316 ;lib/SGlib.c:421: __endasm;
   06C4 0E BE         [ 7] 1317 	ld c,#_VDPDataPort
   06C6 FD 6E 02      [19] 1318 	ld l, 2 (iy)
   06C9 FD 66 03      [19] 1319 	ld h, 3 (iy)
   06CC CDr00rFF      [17] 1320 	call _outi_block-128*2
   06CF C9            [10] 1321 	ret
                           1322 ;lib/SGlib.c:426: void SG_isr (void) __interrupt {
                           1323 ;	---------------------------------
                           1324 ; Function SG_isr
                           1325 ; ---------------------------------
   06D0                    1326 _SG_isr::
   06D0 F5            [11] 1327 	push	af
   06D1 C5            [11] 1328 	push	bc
   06D2 D5            [11] 1329 	push	de
   06D3 E5            [11] 1330 	push	hl
   06D4 FD E5         [15] 1331 	push	iy
   06D6 DD E5         [15] 1332 	push	ix
   06D8 DD 21 00 00   [14] 1333 	ld	ix,#0
   06DC DD 39         [15] 1334 	add	ix,sp
   06DE 3B            [ 6] 1335 	dec	sp
                           1336 ;lib/SGlib.c:427: volatile unsigned char VDPStatus = VDPStatusPort;	/* this also aknowledge interrupt at VDP */
   06DF DB BF         [11] 1337 	in	a,(_VDPStatusPort)
   06E1 DD 77 FF      [19] 1338 	ld	-1 (ix),a
                           1339 ;lib/SGlib.c:432: if (VDPStatus & 0x80) {
   06E4 DD CB FF 7E   [20] 1340 	bit	7, -1 (ix)
   06E8 28 2D         [12] 1341 	jr	Z,00102$
                           1342 ;lib/SGlib.c:433: VDPBlank = true;				 /* frame interrupt */
   06EA 21r00r00      [10] 1343 	ld	hl,#_VDPBlank + 0
   06ED 36 01         [10] 1344 	ld	(hl), #0x01
                           1345 ;lib/SGlib.c:435: PreviousKeysStatus = KeysStatus;
   06EF 2Ar02r00      [16] 1346 	ld	hl,(_KeysStatus)
   06F2 22r04r00      [16] 1347 	ld	(_PreviousKeysStatus),hl
                           1348 ;lib/SGlib.c:436: KeysStatus = ~ (( (IOPortH)<<8)|IOPortL);
   06F5 DB DD         [11] 1349 	in	a,(_IOPortH)
   06F7 47            [ 4] 1350 	ld	b,a
   06F8 0E 00         [ 7] 1351 	ld	c,#0x00
   06FA DB DC         [11] 1352 	in	a,(_IOPortL)
   06FC 6F            [ 4] 1353 	ld	l,a
   06FD 26 00         [ 7] 1354 	ld	h,#0x00
   06FF 79            [ 4] 1355 	ld	a,c
   0700 B5            [ 4] 1356 	or	a, l
   0701 57            [ 4] 1357 	ld	d,a
   0702 78            [ 4] 1358 	ld	a,b
   0703 B4            [ 4] 1359 	or	a, h
   0704 5F            [ 4] 1360 	ld	e,a
   0705 7A            [ 4] 1361 	ld	a,d
   0706 2F            [ 4] 1362 	cpl
   0707 FD 21r02r00   [14] 1363 	ld	iy,#_KeysStatus
   070B FD 77 00      [19] 1364 	ld	0 (iy),a
   070E 7B            [ 4] 1365 	ld	a,e
   070F 2F            [ 4] 1366 	cpl
   0710 FD 21r02r00   [14] 1367 	ld	iy,#_KeysStatus
   0714 FD 77 01      [19] 1368 	ld	1 (iy),a
   0717                    1369 00102$:
                           1370 ;lib/SGlib.c:439: ENABLE_INTERRUPTS;
   0717 FB            [ 4] 1371 	ei 
   0718 33            [ 6] 1372 	inc	sp
   0719 DD E1         [14] 1373 	pop	ix
   071B FD E1         [14] 1374 	pop	iy
   071D E1            [10] 1375 	pop	hl
   071E D1            [10] 1376 	pop	de
   071F C1            [10] 1377 	pop	bc
   0720 F1            [10] 1378 	pop	af
   0721 ED 4D         [14] 1379 	reti
                           1380 ;lib/SGlib.c:442: void SG_nmi_isr (void) __critical __interrupt {		/* this is for NMI */
                           1381 ;	---------------------------------
                           1382 ; Function SG_nmi_isr
                           1383 ; ---------------------------------
   0723                    1384 _SG_nmi_isr::
   0723 F5            [11] 1385 	push	af
   0724 C5            [11] 1386 	push	bc
   0725 D5            [11] 1387 	push	de
   0726 E5            [11] 1388 	push	hl
   0727 FD E5         [15] 1389 	push	iy
                           1390 ;lib/SGlib.c:443: PauseRequested = true;
   0729 21r01r00      [10] 1391 	ld	hl,#_PauseRequested + 0
   072C 36 01         [10] 1392 	ld	(hl), #0x01
   072E FD E1         [14] 1393 	pop	iy
   0730 E1            [10] 1394 	pop	hl
   0731 D1            [10] 1395 	pop	de
   0732 C1            [10] 1396 	pop	bc
   0733 F1            [10] 1397 	pop	af
   0734 ED 45         [14] 1398 	retn
                           1399 ;lib/SGlib.c:446: unsigned char SMS_VDPType (void) {
                           1400 ;	---------------------------------
                           1401 ; Function SMS_VDPType
                           1402 ; ---------------------------------
   0736                    1403 _SMS_VDPType::
                           1404 ;lib/SGlib.c:447: return VDPType;
   0736 FD 21r8Cr00   [14] 1405 	ld	iy,#_VDPType
   073A FD 6E 00      [19] 1406 	ld	l,0 (iy)
   073D C9            [10] 1407 	ret
                           1408 	.area _CODE
                           1409 	.area _INITIALIZER
   0000                    1410 __xinit__VDPReg:
   0000 02                 1411 	.db #0x02	; 2
   0001 A0                 1412 	.db #0xA0	; 160
                           1413 	.area _CABS (ABS)
