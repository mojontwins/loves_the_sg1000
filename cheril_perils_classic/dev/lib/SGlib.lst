                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.2 #9293 (MINGW32)
                              4 ; This file was generated Sun Nov 04 13:35:14 2018
                              5 ;--------------------------------------------------------
                              6 	.module SGlib
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _SG_setReg
                             13 	.globl _PSGSFXFrame
                             14 	.globl _PSGFrame
                             15 	.globl _VDPReg
                             16 	.globl _ulpMsb
                             17 	.globl _ulp
                             18 	.globl _updateList
                             19 	.globl _VDPType
                             20 	.globl _libgpit
                             21 	.globl _first_sprite
                             22 	.globl _SpriteTableEnd
                             23 	.globl _stp
                             24 	.globl _SpriteTable
                             25 	.globl _KeysStatus
                             26 	.globl _PauseRequested
                             27 	.globl _VDPBlank
                             28 	.globl _VDPReg_init
                             29 	.globl _SG_VDPturnOnFeature
                             30 	.globl _SG_VDPturnOffFeature
                             31 	.globl _SG_init
                             32 	.globl _SG_setBackdropColor
                             33 	.globl _SG_setSpriteMode
                             34 	.globl _SG_loadTilePatterns
                             35 	.globl _SG_loadTileColours
                             36 	.globl _SG_loadSpritePatterns
                             37 	.globl _SG_setTileatXY
                             38 	.globl _SG_setNextTileatXY
                             39 	.globl _SG_setTile
                             40 	.globl _SG_fillTile
                             41 	.globl _SG_loadTileMapArea
                             42 	.globl _SG_initSprites
                             43 	.globl _SG_addSprite
                             44 	.globl _SG_addMetaSprite1x1
                             45 	.globl _SG_addMetaSprite
                             46 	.globl _SG_finalizeSprites
                             47 	.globl _SG_getStp
                             48 	.globl _SG_setStp
                             49 	.globl _SG_waitForVBlank
                             50 	.globl _SG_getKeysStatus
                             51 	.globl _SG_queryPauseRequested
                             52 	.globl _SG_resetPauseRequest
                             53 	.globl _SG_VRAMmemset
                             54 	.globl _SG_copySpritestoSAT
                             55 	.globl _SG_VRAMmemcpy128
                             56 	.globl _SG_setUpdateList
                             57 	.globl _SG_doUpdateList
                             58 	.globl _SG_isr
                             59 	.globl _SG_nmi_isr
                             60 ;--------------------------------------------------------
                             61 ; special function registers
                             62 ;--------------------------------------------------------
                     00BF    63 _VDPControlPort	=	0x00bf
                     00BF    64 _VDPStatusPort	=	0x00bf
                     00BE    65 _VDPDataPort	=	0x00be
                     007E    66 _VDPVCounterPort	=	0x007e
                     007F    67 _VDPHCounterPort	=	0x007f
                     00DC    68 _IOPortL	=	0x00dc
                     00DD    69 _IOPortH	=	0x00dd
                             70 ;--------------------------------------------------------
                             71 ; ram data
                             72 ;--------------------------------------------------------
                             73 	.area _DATA
   0000                      74 _VDPBlank::
   0000                      75 	.ds 1
   0001                      76 _PauseRequested::
   0001                      77 	.ds 1
   0002                      78 _KeysStatus::
   0002                      79 	.ds 1
   0003                      80 _SpriteTable::
   0003                      81 	.ds 128
   0083                      82 _stp::
   0083                      83 	.ds 2
   0085                      84 _SpriteTableEnd::
   0085                      85 	.ds 2
   0087                      86 _first_sprite::
   0087                      87 	.ds 1
   0088                      88 _libgpit::
   0088                      89 	.ds 1
   0089                      90 _VDPType::
   0089                      91 	.ds 1
   008A                      92 _updateList::
   008A                      93 	.ds 2
   008C                      94 _ulp::
   008C                      95 	.ds 2
   008E                      96 _ulpMsb::
   008E                      97 	.ds 1
                             98 ;--------------------------------------------------------
                             99 ; ram data
                            100 ;--------------------------------------------------------
                            101 	.area _INITIALIZED
   0000                     102 _VDPReg::
   0000                     103 	.ds 2
                            104 ;--------------------------------------------------------
                            105 ; absolute external ram data
                            106 ;--------------------------------------------------------
                            107 	.area _DABS (ABS)
                            108 ;--------------------------------------------------------
                            109 ; global & static initialisations
                            110 ;--------------------------------------------------------
                            111 	.area _HOME
                            112 	.area _GSINIT
                            113 	.area _GSFINAL
                            114 	.area _GSINIT
                            115 ;--------------------------------------------------------
                            116 ; Home
                            117 ;--------------------------------------------------------
                            118 	.area _HOME
                            119 	.area _HOME
                            120 ;--------------------------------------------------------
                            121 ; code
                            122 ;--------------------------------------------------------
                            123 	.area _CODE
                            124 ;lib/SGlib.c:142: void SG_setReg (unsigned char reg, unsigned char v) {
                            125 ;	---------------------------------
                            126 ; Function SG_setReg
                            127 ; ---------------------------------
   0000                     128 _SG_setReg::
                            129 ;lib/SGlib.c:143: VDPReg [reg] = v;
   0000 3Er00         [ 7]  130 	ld	a,#<(_VDPReg)
   0002 21 02 00      [10]  131 	ld	hl,#2
   0005 39            [11]  132 	add	hl,sp
   0006 86            [ 7]  133 	add	a, (hl)
   0007 5F            [ 4]  134 	ld	e,a
   0008 3Es00         [ 7]  135 	ld	a,#>(_VDPReg)
   000A CE 00         [ 7]  136 	adc	a, #0x00
   000C 57            [ 4]  137 	ld	d,a
   000D FD 21 03 00   [14]  138 	ld	iy,#3
   0011 FD 39         [15]  139 	add	iy,sp
   0013 FD 7E 00      [19]  140 	ld	a,0 (iy)
   0016 12            [ 7]  141 	ld	(de),a
                            142 ;lib/SGlib.c:144: SG_write_to_VDPRegister (reg, v);
   0017 F3            [ 4]  143 	di 
   0018 FD 7E 00      [19]  144 	ld	a,0 (iy)
   001B D3 BF         [11]  145 	out	(_VDPControlPort),a
   001D FD 21 02 00   [14]  146 	ld	iy,#2
   0021 FD 39         [15]  147 	add	iy,sp
   0023 FD 7E 00      [19]  148 	ld	a,0 (iy)
   0026 CB FF         [ 8]  149 	set	7, a
   0028 D3 BF         [11]  150 	out	(_VDPControlPort),a
   002A FB            [ 4]  151 	ei 
   002B C9            [10]  152 	ret
   002C                     153 _VDPReg_init:
   002C 02                  154 	.db #0x02	; 2
   002D A0                  155 	.db #0xA0	; 160
   002E 06                  156 	.db #0x06	; 6
   002F FF                  157 	.db #0xFF	; 255
   0030 03                  158 	.db #0x03	; 3
   0031 36                  159 	.db #0x36	; 54	'6'
   0032 07                  160 	.db #0x07	; 7
   0033 01                  161 	.db #0x01	; 1
                            162 ;lib/SGlib.c:147: void SG_VDPturnOnFeature (unsigned int feature) {
                            163 ;	---------------------------------
                            164 ; Function SG_VDPturnOnFeature
                            165 ; ---------------------------------
   0034                     166 _SG_VDPturnOnFeature::
   0034 DD E5         [15]  167 	push	ix
   0036 DD 21 00 00   [14]  168 	ld	ix,#0
   003A DD 39         [15]  169 	add	ix,sp
   003C F5            [11]  170 	push	af
                            171 ;lib/SGlib.c:149: VDPReg [HI (feature)] |= LO (feature);
   003D DD 5E 05      [19]  172 	ld	e,5 (ix)
   0040 16 00         [ 7]  173 	ld	d,#0x00
   0042 21r00r00      [10]  174 	ld	hl,#_VDPReg
   0045 19            [11]  175 	add	hl,de
   0046 4E            [ 7]  176 	ld	c,(hl)
   0047 DD 7E 04      [19]  177 	ld	a,4 (ix)
   004A DD 77 FE      [19]  178 	ld	-2 (ix),a
   004D DD 36 FF 00   [19]  179 	ld	-1 (ix),#0x00
   0051 06 00         [ 7]  180 	ld	b,#0x00
   0053 79            [ 4]  181 	ld	a,c
   0054 DD B6 FE      [19]  182 	or	a, -2 (ix)
   0057 4F            [ 4]  183 	ld	c,a
   0058 78            [ 4]  184 	ld	a,b
   0059 DD B6 FF      [19]  185 	or	a, -1 (ix)
   005C 47            [ 4]  186 	ld	b,a
   005D 71            [ 7]  187 	ld	(hl),c
                            188 ;lib/SGlib.c:150: SG_write_to_VDPRegister (HI (feature), VDPReg [HI (feature)]);
   005E F3            [ 4]  189 	di 
   005F 79            [ 4]  190 	ld	a,c
   0060 D3 BF         [11]  191 	out	(_VDPControlPort),a
   0062 7B            [ 4]  192 	ld	a,e
   0063 CB FF         [ 8]  193 	set	7, a
   0065 67            [ 4]  194 	ld	h,a
   0066 D3 BF         [11]  195 	out	(_VDPControlPort),a
   0068 FB            [ 4]  196 	ei 
   0069 DD F9         [10]  197 	ld	sp, ix
   006B DD E1         [14]  198 	pop	ix
   006D C9            [10]  199 	ret
                            200 ;lib/SGlib.c:153: void SG_VDPturnOffFeature (unsigned int feature) {
                            201 ;	---------------------------------
                            202 ; Function SG_VDPturnOffFeature
                            203 ; ---------------------------------
   006E                     204 _SG_VDPturnOffFeature::
   006E DD E5         [15]  205 	push	ix
   0070 DD 21 00 00   [14]  206 	ld	ix,#0
   0074 DD 39         [15]  207 	add	ix,sp
   0076 F5            [11]  208 	push	af
                            209 ;lib/SGlib.c:155: VDPReg [HI (feature)] &= ~LO (feature);
   0077 DD 5E 05      [19]  210 	ld	e,5 (ix)
   007A 16 00         [ 7]  211 	ld	d,#0x00
   007C 21r00r00      [10]  212 	ld	hl,#_VDPReg
   007F 19            [11]  213 	add	hl,de
   0080 E3            [19]  214 	ex	(sp), hl
   0081 E1            [10]  215 	pop	hl
   0082 E5            [11]  216 	push	hl
   0083 46            [ 7]  217 	ld	b,(hl)
   0084 DD 7E 04      [19]  218 	ld	a, 4 (ix)
   0087 2F            [ 4]  219 	cpl
   0088 4F            [ 4]  220 	ld	c,a
   0089 78            [ 4]  221 	ld	a,b
   008A A1            [ 4]  222 	and	a, c
   008B 47            [ 4]  223 	ld	b,a
   008C E1            [10]  224 	pop	hl
   008D E5            [11]  225 	push	hl
   008E 70            [ 7]  226 	ld	(hl),b
                            227 ;lib/SGlib.c:156: SG_write_to_VDPRegister (HI (feature), VDPReg [HI (feature)]);
   008F F3            [ 4]  228 	di 
   0090 78            [ 4]  229 	ld	a,b
   0091 D3 BF         [11]  230 	out	(_VDPControlPort),a
   0093 7B            [ 4]  231 	ld	a,e
   0094 CB FF         [ 8]  232 	set	7, a
   0096 67            [ 4]  233 	ld	h,a
   0097 D3 BF         [11]  234 	out	(_VDPControlPort),a
   0099 FB            [ 4]  235 	ei 
   009A DD F9         [10]  236 	ld	sp, ix
   009C DD E1         [14]  237 	pop	ix
   009E C9            [10]  238 	ret
                            239 ;lib/SGlib.c:175: void SG_init (void) {
                            240 ;	---------------------------------
                            241 ; Function SG_init
                            242 ; ---------------------------------
   009F                     243 _SG_init::
                            244 ;lib/SGlib.c:176: for (libgpit = 0; libgpit < 8; libgpit++)
   009F FD 21r88r00   [14]  245 	ld	iy,#_libgpit
   00A3 FD 36 00 00   [19]  246 	ld	0 (iy),#0x00
   00A7 11r2Cr00      [10]  247 	ld	de,#_VDPReg_init+0
   00AA                     248 00102$:
                            249 ;lib/SGlib.c:177: SG_write_to_VDPRegister (libgpit, VDPReg_init [libgpit]);
   00AA F3            [ 4]  250 	di 
   00AB 2Ar88r00      [16]  251 	ld	hl,(_libgpit)
   00AE 26 00         [ 7]  252 	ld	h,#0x00
   00B0 19            [11]  253 	add	hl,de
   00B1 7E            [ 7]  254 	ld	a,(hl)
   00B2 D3 BF         [11]  255 	out	(_VDPControlPort),a
   00B4 FD 21r88r00   [14]  256 	ld	iy,#_libgpit
   00B8 FD 7E 00      [19]  257 	ld	a,0 (iy)
   00BB CB FF         [ 8]  258 	set	7, a
   00BD D3 BF         [11]  259 	out	(_VDPControlPort),a
   00BF FB            [ 4]  260 	ei 
                            261 ;lib/SGlib.c:176: for (libgpit = 0; libgpit < 8; libgpit++)
   00C0 FD 21r88r00   [14]  262 	ld	iy,#_libgpit
   00C4 FD 34 00      [23]  263 	inc	0 (iy)
   00C7 FD 21r88r00   [14]  264 	ld	iy,#_libgpit
   00CB FD 7E 00      [19]  265 	ld	a,0 (iy)
   00CE D6 08         [ 7]  266 	sub	a, #0x08
   00D0 38 D8         [12]  267 	jr	C,00102$
                            268 ;lib/SGlib.c:180: first_sprite = 0;
   00D2 21r87r00      [10]  269 	ld	hl,#_first_sprite + 0
   00D5 36 00         [10]  270 	ld	(hl), #0x00
                            271 ;lib/SGlib.c:181: SpriteTableEnd = SpriteTable + 128;
   00D7 21r83r00      [10]  272 	ld	hl,#_SpriteTable+128
   00DA 22r85r00      [16]  273 	ld	(_SpriteTableEnd),hl
                            274 ;lib/SGlib.c:184: SG_initSprites ();
   00DD CDr3Fr03      [17]  275 	call	_SG_initSprites
                            276 ;lib/SGlib.c:185: SG_finalizeSprites ();
   00E0 CDrE6r05      [17]  277 	call	_SG_finalizeSprites
                            278 ;lib/SGlib.c:186: SG_copySpritestoSAT ();
   00E3 C3r4Br06      [10]  279 	jp  _SG_copySpritestoSAT
                            280 ;lib/SGlib.c:191: void SG_setBackdropColor (unsigned char entry) {
                            281 ;	---------------------------------
                            282 ; Function SG_setBackdropColor
                            283 ; ---------------------------------
   00E6                     284 _SG_setBackdropColor::
                            285 ;lib/SGlib.c:192: SG_write_to_VDPRegister (0x07, entry & 0x0f);
   00E6 F3            [ 4]  286 	di 
   00E7 FD 21 02 00   [14]  287 	ld	iy,#2
   00EB FD 39         [15]  288 	add	iy,sp
   00ED FD 7E 00      [19]  289 	ld	a,0 (iy)
   00F0 E6 0F         [ 7]  290 	and	a, #0x0F
   00F2 D3 BF         [11]  291 	out	(_VDPControlPort),a
   00F4 3E 87         [ 7]  292 	ld	a,#0x87
   00F6 D3 BF         [11]  293 	out	(_VDPControlPort),a
   00F8 FB            [ 4]  294 	ei 
   00F9 C9            [10]  295 	ret
                            296 ;lib/SGlib.c:195: void SG_setSpriteMode (unsigned char mode) {
                            297 ;	---------------------------------
                            298 ; Function SG_setSpriteMode
                            299 ; ---------------------------------
   00FA                     300 _SG_setSpriteMode::
                            301 ;lib/SGlib.c:196: if (mode & SG_SPRITEMODE_LARGE) {
   00FA 21 02 00      [10]  302 	ld	hl, #2+0
   00FD 39            [11]  303 	add	hl, sp
   00FE 7E            [ 7]  304 	ld	a, (hl)
   00FF 0F            [ 4]  305 	rrca
   0100 30 0A         [12]  306 	jr	NC,00102$
                            307 ;lib/SGlib.c:197: SG_VDPturnOnFeature (SG_VDPFEATURE_USELARGESPRITES);
   0102 21 02 01      [10]  308 	ld	hl,#0x0102
   0105 E5            [11]  309 	push	hl
   0106 CDr34r00      [17]  310 	call	_SG_VDPturnOnFeature
   0109 F1            [10]  311 	pop	af
   010A 18 08         [12]  312 	jr	00103$
   010C                     313 00102$:
                            314 ;lib/SGlib.c:199: SG_VDPturnOffFeature (SG_VDPFEATURE_USELARGESPRITES);
   010C 21 02 01      [10]  315 	ld	hl,#0x0102
   010F E5            [11]  316 	push	hl
   0110 CDr6Er00      [17]  317 	call	_SG_VDPturnOffFeature
   0113 F1            [10]  318 	pop	af
   0114                     319 00103$:
                            320 ;lib/SGlib.c:201: if (mode & SG_SPRITEMODE_ZOOMED) {
   0114 21 02 00      [10]  321 	ld	hl, #2+0
   0117 39            [11]  322 	add	hl, sp
   0118 7E            [ 7]  323 	ld	a, (hl)
   0119 E6 02         [ 7]  324 	and	a, #0x02
   011B 28 09         [12]  325 	jr	Z,00105$
                            326 ;lib/SGlib.c:202: SG_VDPturnOnFeature (SG_VDPFEATURE_ZOOMSPRITES);
   011D 21 01 01      [10]  327 	ld	hl,#0x0101
   0120 E5            [11]  328 	push	hl
   0121 CDr34r00      [17]  329 	call	_SG_VDPturnOnFeature
   0124 F1            [10]  330 	pop	af
   0125 C9            [10]  331 	ret
   0126                     332 00105$:
                            333 ;lib/SGlib.c:204: SG_VDPturnOffFeature (SG_VDPFEATURE_ZOOMSPRITES);
   0126 21 01 01      [10]  334 	ld	hl,#0x0101
   0129 E5            [11]  335 	push	hl
   012A CDr6Er00      [17]  336 	call	_SG_VDPturnOffFeature
   012D F1            [10]  337 	pop	af
   012E C9            [10]  338 	ret
                            339 ;lib/SGlib.c:209: void SG_loadTilePatterns (void *src, unsigned int tilefrom, unsigned int size) {
                            340 ;	---------------------------------
                            341 ; Function SG_loadTilePatterns
                            342 ; ---------------------------------
   012F                     343 _SG_loadTilePatterns::
   012F DD E5         [15]  344 	push	ix
   0131 DD 21 00 00   [14]  345 	ld	ix,#0
   0135 DD 39         [15]  346 	add	ix,sp
                            347 ;lib/SGlib.c:210: SG_set_address_VRAM (PGTADDRESS + (tilefrom << 3));
   0137 F3            [ 4]  348 	di 
   0138 DD 7E 06      [19]  349 	ld	a,6 (ix)
   013B 07            [ 4]  350 	rlca
   013C 07            [ 4]  351 	rlca
   013D 07            [ 4]  352 	rlca
   013E E6 F8         [ 7]  353 	and	a,#0xF8
   0140 D3 BF         [11]  354 	out	(_VDPControlPort),a
   0142 DD 6E 06      [19]  355 	ld	l,6 (ix)
   0145 DD 66 07      [19]  356 	ld	h,7 (ix)
   0148 29            [11]  357 	add	hl, hl
   0149 29            [11]  358 	add	hl, hl
   014A 29            [11]  359 	add	hl, hl
   014B 16 00         [ 7]  360 	ld	d,#0x00
   014D 7C            [ 4]  361 	ld	a,h
   014E CB F7         [ 8]  362 	set	6, a
   0150 6F            [ 4]  363 	ld	l,a
   0151 D3 BF         [11]  364 	out	(_VDPControlPort),a
   0153 FB            [ 4]  365 	ei 
                            366 ;lib/SGlib.c:211: SG_byte_array_to_VDP_data (src, size);
   0154 DD 4E 08      [19]  367 	ld	c,8 (ix)
   0157 DD 46 09      [19]  368 	ld	b,9 (ix)
   015A DD 5E 04      [19]  369 	ld	e,4 (ix)
   015D DD 56 05      [19]  370 	ld	d,5 (ix)
                            371 ;lib/SGlib.c:125: do {
   0160                     372 00101$:
                            373 ;lib/SGlib.c:126: VDPDataPort = *(data ++);
   0160 1A            [ 7]  374 	ld	a,(de)
   0161 D3 BE         [11]  375 	out	(_VDPDataPort),a
   0163 13            [ 6]  376 	inc	de
                            377 ;lib/SGlib.c:127: } while (-- size);
   0164 69            [ 4]  378 	ld	l,c
   0165 60            [ 4]  379 	ld	h,b
   0166 2B            [ 6]  380 	dec	hl
   0167 4D            [ 4]  381 	ld	c, l
   0168 7C            [ 4]  382 	ld	a,h
   0169 47            [ 4]  383 	ld	b,a
   016A B5            [ 4]  384 	or	a,l
   016B 20 F3         [12]  385 	jr	NZ,00101$
                            386 ;lib/SGlib.c:211: SG_byte_array_to_VDP_data (src, size);
   016D DD E1         [14]  387 	pop	ix
   016F C9            [10]  388 	ret
                            389 ;lib/SGlib.c:214: void SG_loadTileColours (void *src, unsigned int tilefrom, unsigned int size) {
                            390 ;	---------------------------------
                            391 ; Function SG_loadTileColours
                            392 ; ---------------------------------
   0170                     393 _SG_loadTileColours::
   0170 DD E5         [15]  394 	push	ix
   0172 DD 21 00 00   [14]  395 	ld	ix,#0
   0176 DD 39         [15]  396 	add	ix,sp
                            397 ;lib/SGlib.c:215: SG_set_address_VRAM (CGTADDRESS + (tilefrom << 3));
   0178 F3            [ 4]  398 	di 
   0179 DD 7E 06      [19]  399 	ld	a,6 (ix)
   017C 07            [ 4]  400 	rlca
   017D 07            [ 4]  401 	rlca
   017E 07            [ 4]  402 	rlca
   017F E6 F8         [ 7]  403 	and	a,#0xF8
   0181 D3 BF         [11]  404 	out	(_VDPControlPort),a
   0183 DD 6E 06      [19]  405 	ld	l,6 (ix)
   0186 DD 66 07      [19]  406 	ld	h,7 (ix)
   0189 29            [11]  407 	add	hl, hl
   018A 29            [11]  408 	add	hl, hl
   018B 29            [11]  409 	add	hl, hl
   018C 01 00 20      [10]  410 	ld	bc,#0x2000
   018F 09            [11]  411 	add	hl,bc
   0190 16 00         [ 7]  412 	ld	d,#0x00
   0192 7C            [ 4]  413 	ld	a,h
   0193 CB F7         [ 8]  414 	set	6, a
   0195 6F            [ 4]  415 	ld	l,a
   0196 D3 BF         [11]  416 	out	(_VDPControlPort),a
   0198 FB            [ 4]  417 	ei 
                            418 ;lib/SGlib.c:216: SG_byte_array_to_VDP_data (src, size);
   0199 DD 4E 08      [19]  419 	ld	c,8 (ix)
   019C DD 46 09      [19]  420 	ld	b,9 (ix)
   019F DD 5E 04      [19]  421 	ld	e,4 (ix)
   01A2 DD 56 05      [19]  422 	ld	d,5 (ix)
                            423 ;lib/SGlib.c:125: do {
   01A5                     424 00101$:
                            425 ;lib/SGlib.c:126: VDPDataPort = *(data ++);
   01A5 1A            [ 7]  426 	ld	a,(de)
   01A6 D3 BE         [11]  427 	out	(_VDPDataPort),a
   01A8 13            [ 6]  428 	inc	de
                            429 ;lib/SGlib.c:127: } while (-- size);
   01A9 69            [ 4]  430 	ld	l,c
   01AA 60            [ 4]  431 	ld	h,b
   01AB 2B            [ 6]  432 	dec	hl
   01AC 4D            [ 4]  433 	ld	c, l
   01AD 7C            [ 4]  434 	ld	a,h
   01AE 47            [ 4]  435 	ld	b,a
   01AF B5            [ 4]  436 	or	a,l
   01B0 20 F3         [12]  437 	jr	NZ,00101$
                            438 ;lib/SGlib.c:216: SG_byte_array_to_VDP_data (src, size);
   01B2 DD E1         [14]  439 	pop	ix
   01B4 C9            [10]  440 	ret
                            441 ;lib/SGlib.c:219: void SG_loadSpritePatterns (void *src, unsigned int tilefrom, unsigned int size) {
                            442 ;	---------------------------------
                            443 ; Function SG_loadSpritePatterns
                            444 ; ---------------------------------
   01B5                     445 _SG_loadSpritePatterns::
   01B5 DD E5         [15]  446 	push	ix
   01B7 DD 21 00 00   [14]  447 	ld	ix,#0
   01BB DD 39         [15]  448 	add	ix,sp
                            449 ;lib/SGlib.c:220: SG_set_address_VRAM (SGTADDRESS + (tilefrom << 3));
   01BD F3            [ 4]  450 	di 
   01BE DD 7E 06      [19]  451 	ld	a,6 (ix)
   01C1 07            [ 4]  452 	rlca
   01C2 07            [ 4]  453 	rlca
   01C3 07            [ 4]  454 	rlca
   01C4 E6 F8         [ 7]  455 	and	a,#0xF8
   01C6 D3 BF         [11]  456 	out	(_VDPControlPort),a
   01C8 DD 6E 06      [19]  457 	ld	l,6 (ix)
   01CB DD 66 07      [19]  458 	ld	h,7 (ix)
   01CE 29            [11]  459 	add	hl, hl
   01CF 29            [11]  460 	add	hl, hl
   01D0 29            [11]  461 	add	hl, hl
   01D1 01 00 38      [10]  462 	ld	bc,#0x3800
   01D4 09            [11]  463 	add	hl,bc
   01D5 16 00         [ 7]  464 	ld	d,#0x00
   01D7 7C            [ 4]  465 	ld	a,h
   01D8 CB F7         [ 8]  466 	set	6, a
   01DA 6F            [ 4]  467 	ld	l,a
   01DB D3 BF         [11]  468 	out	(_VDPControlPort),a
   01DD FB            [ 4]  469 	ei 
                            470 ;lib/SGlib.c:221: SG_byte_array_to_VDP_data (src, size);
   01DE DD 4E 08      [19]  471 	ld	c,8 (ix)
   01E1 DD 46 09      [19]  472 	ld	b,9 (ix)
   01E4 DD 5E 04      [19]  473 	ld	e,4 (ix)
   01E7 DD 56 05      [19]  474 	ld	d,5 (ix)
                            475 ;lib/SGlib.c:125: do {
   01EA                     476 00101$:
                            477 ;lib/SGlib.c:126: VDPDataPort = *(data ++);
   01EA 1A            [ 7]  478 	ld	a,(de)
   01EB D3 BE         [11]  479 	out	(_VDPDataPort),a
   01ED 13            [ 6]  480 	inc	de
                            481 ;lib/SGlib.c:127: } while (-- size);
   01EE 69            [ 4]  482 	ld	l,c
   01EF 60            [ 4]  483 	ld	h,b
   01F0 2B            [ 6]  484 	dec	hl
   01F1 4D            [ 4]  485 	ld	c, l
   01F2 7C            [ 4]  486 	ld	a,h
   01F3 47            [ 4]  487 	ld	b,a
   01F4 B5            [ 4]  488 	or	a,l
   01F5 20 F3         [12]  489 	jr	NZ,00101$
                            490 ;lib/SGlib.c:221: SG_byte_array_to_VDP_data (src, size);
   01F7 DD E1         [14]  491 	pop	ix
   01F9 C9            [10]  492 	ret
                            493 ;lib/SGlib.c:224: void SG_setTileatXY (unsigned char x, unsigned char y, unsigned char tile) {
                            494 ;	---------------------------------
                            495 ; Function SG_setTileatXY
                            496 ; ---------------------------------
   01FA                     497 _SG_setTileatXY::
   01FA DD E5         [15]  498 	push	ix
   01FC DD 21 00 00   [14]  499 	ld	ix,#0
   0200 DD 39         [15]  500 	add	ix,sp
                            501 ;lib/SGlib.c:225: SG_set_address_VRAM (PNTADDRESS + (y << 5) + x);
   0202 F3            [ 4]  502 	di 
   0203 DD 7E 05      [19]  503 	ld	a,5 (ix)
   0206 0F            [ 4]  504 	rrca
   0207 0F            [ 4]  505 	rrca
   0208 0F            [ 4]  506 	rrca
   0209 E6 E0         [ 7]  507 	and	a,#0xE0
   020B DD 86 04      [19]  508 	add	a, 4 (ix)
   020E D3 BF         [11]  509 	out	(_VDPControlPort),a
   0210 DD 6E 05      [19]  510 	ld	l,5 (ix)
   0213 26 00         [ 7]  511 	ld	h,#0x00
   0215 29            [11]  512 	add	hl, hl
   0216 29            [11]  513 	add	hl, hl
   0217 29            [11]  514 	add	hl, hl
   0218 29            [11]  515 	add	hl, hl
   0219 29            [11]  516 	add	hl, hl
   021A 01 00 18      [10]  517 	ld	bc,#0x1800
   021D 09            [11]  518 	add	hl,bc
   021E DD 5E 04      [19]  519 	ld	e,4 (ix)
   0221 16 00         [ 7]  520 	ld	d,#0x00
   0223 19            [11]  521 	add	hl,de
   0224 5C            [ 4]  522 	ld	e, h
   0225 7B            [ 4]  523 	ld	a,e
   0226 CB 07         [ 8]  524 	rlc	a
   0228 9F            [ 4]  525 	sbc	a, a
   0229 57            [ 4]  526 	ld	d,a
   022A 7B            [ 4]  527 	ld	a,e
   022B CB F7         [ 8]  528 	set	6, a
   022D 67            [ 4]  529 	ld	h,a
   022E D3 BF         [11]  530 	out	(_VDPControlPort),a
   0230 FB            [ 4]  531 	ei 
                            532 ;lib/SGlib.c:226: SG_byte_to_VDP_data (tile);
   0231 DD 7E 06      [19]  533 	ld	a,6 (ix)
   0234 D3 BE         [11]  534 	out	(_VDPDataPort),a
   0236 DD E1         [14]  535 	pop	ix
   0238 C9            [10]  536 	ret
                            537 ;lib/SGlib.c:229: void SG_setNextTileatXY (unsigned char x, unsigned char y) {
                            538 ;	---------------------------------
                            539 ; Function SG_setNextTileatXY
                            540 ; ---------------------------------
   0239                     541 _SG_setNextTileatXY::
   0239 DD E5         [15]  542 	push	ix
   023B DD 21 00 00   [14]  543 	ld	ix,#0
   023F DD 39         [15]  544 	add	ix,sp
                            545 ;lib/SGlib.c:230: SG_set_address_VRAM (PNTADDRESS + (y << 5) + x);
   0241 F3            [ 4]  546 	di 
   0242 DD 7E 05      [19]  547 	ld	a,5 (ix)
   0245 0F            [ 4]  548 	rrca
   0246 0F            [ 4]  549 	rrca
   0247 0F            [ 4]  550 	rrca
   0248 E6 E0         [ 7]  551 	and	a,#0xE0
   024A DD 86 04      [19]  552 	add	a, 4 (ix)
   024D D3 BF         [11]  553 	out	(_VDPControlPort),a
   024F DD 6E 05      [19]  554 	ld	l,5 (ix)
   0252 26 00         [ 7]  555 	ld	h,#0x00
   0254 29            [11]  556 	add	hl, hl
   0255 29            [11]  557 	add	hl, hl
   0256 29            [11]  558 	add	hl, hl
   0257 29            [11]  559 	add	hl, hl
   0258 29            [11]  560 	add	hl, hl
   0259 01 00 18      [10]  561 	ld	bc,#0x1800
   025C 09            [11]  562 	add	hl,bc
   025D DD 5E 04      [19]  563 	ld	e,4 (ix)
   0260 16 00         [ 7]  564 	ld	d,#0x00
   0262 19            [11]  565 	add	hl,de
   0263 5C            [ 4]  566 	ld	e, h
   0264 7B            [ 4]  567 	ld	a,e
   0265 CB 07         [ 8]  568 	rlc	a
   0267 9F            [ 4]  569 	sbc	a, a
   0268 57            [ 4]  570 	ld	d,a
   0269 7B            [ 4]  571 	ld	a,e
   026A CB F7         [ 8]  572 	set	6, a
   026C 67            [ 4]  573 	ld	h,a
   026D D3 BF         [11]  574 	out	(_VDPControlPort),a
   026F FB            [ 4]  575 	ei 
   0270 DD E1         [14]  576 	pop	ix
   0272 C9            [10]  577 	ret
                            578 ;lib/SGlib.c:233: void SG_setTile (unsigned char tile) {
                            579 ;	---------------------------------
                            580 ; Function SG_setTile
                            581 ; ---------------------------------
   0273                     582 _SG_setTile::
                            583 ;lib/SGlib.c:234: SG_byte_to_VDP_data (tile);
   0273 21 02 00      [10]  584 	ld	hl, #2+0
   0276 39            [11]  585 	add	hl, sp
   0277 7E            [ 7]  586 	ld	a, (hl)
   0278 D3 BE         [11]  587 	out	(_VDPDataPort),a
   027A C9            [10]  588 	ret
                            589 ;lib/SGlib.c:237: void SG_fillTile (unsigned char tile, unsigned int count) {
                            590 ;	---------------------------------
                            591 ; Function SG_fillTile
                            592 ; ---------------------------------
   027B                     593 _SG_fillTile::
   027B 3B            [ 6]  594 	dec	sp
                            595 ;lib/SGlib.c:238: while (count --) SG_byte_to_VDP_data (tile);
   027C 21 03 00      [10]  596 	ld	hl, #3+0
   027F 39            [11]  597 	add	hl, sp
   0280 7E            [ 7]  598 	ld	a, (hl)
   0281 FD 21 00 00   [14]  599 	ld	iy,#0
   0285 FD 39         [15]  600 	add	iy,sp
   0287 FD 77 00      [19]  601 	ld	0 (iy),a
   028A 21 04 00      [10]  602 	ld	hl, #4
   028D 39            [11]  603 	add	hl, sp
   028E 5E            [ 7]  604 	ld	e, (hl)
   028F 23            [ 6]  605 	inc	hl
   0290 56            [ 7]  606 	ld	d, (hl)
   0291                     607 00101$:
   0291 43            [ 4]  608 	ld	b,e
   0292 4A            [ 4]  609 	ld	c,d
   0293 1B            [ 6]  610 	dec	de
   0294 79            [ 4]  611 	ld	a,c
   0295 B0            [ 4]  612 	or	a,b
   0296 28 09         [12]  613 	jr	Z,00105$
                            614 ;lib/SGlib.c:121: VDPDataPort = data;
   0298 21 00 00      [10]  615 	ld	hl, #0+0
   029B 39            [11]  616 	add	hl, sp
   029C 7E            [ 7]  617 	ld	a, (hl)
   029D D3 BE         [11]  618 	out	(_VDPDataPort),a
                            619 ;lib/SGlib.c:238: while (count --) SG_byte_to_VDP_data (tile);
   029F 18 F0         [12]  620 	jr	00101$
   02A1                     621 00105$:
   02A1 33            [ 6]  622 	inc	sp
   02A2 C9            [10]  623 	ret
                            624 ;lib/SGlib.c:241: void SG_loadTileMapArea (unsigned char x, unsigned char y,	void *src, unsigned char width, unsigned char height) {
                            625 ;	---------------------------------
                            626 ; Function SG_loadTileMapArea
                            627 ; ---------------------------------
   02A3                     628 _SG_loadTileMapArea::
   02A3 DD E5         [15]  629 	push	ix
   02A5 DD 21 00 00   [14]  630 	ld	ix,#0
   02A9 DD 39         [15]  631 	add	ix,sp
   02AB F5            [11]  632 	push	af
                            633 ;lib/SGlib.c:242: for (libgpit = y; libgpit < (y + height); libgpit ++) {
   02AC DD 7E 05      [19]  634 	ld	a,5 (ix)
   02AF 32r88r00      [13]  635 	ld	(#_libgpit + 0),a
   02B2 DD 7E 08      [19]  636 	ld	a,8 (ix)
   02B5 DD 77 FE      [19]  637 	ld	-2 (ix),a
   02B8                     638 00107$:
   02B8 DD 6E 05      [19]  639 	ld	l,5 (ix)
   02BB 26 00         [ 7]  640 	ld	h,#0x00
   02BD DD 5E 09      [19]  641 	ld	e,9 (ix)
   02C0 16 00         [ 7]  642 	ld	d,#0x00
   02C2 19            [11]  643 	add	hl,de
   02C3 5D            [ 4]  644 	ld	e,l
   02C4 54            [ 4]  645 	ld	d,h
   02C5 FD 21r88r00   [14]  646 	ld	iy,#_libgpit
   02C9 FD 4E 00      [19]  647 	ld	c,0 (iy)
   02CC 06 00         [ 7]  648 	ld	b,#0x00
   02CE 79            [ 4]  649 	ld	a,c
   02CF 93            [ 4]  650 	sub	a, e
   02D0 78            [ 4]  651 	ld	a,b
   02D1 9A            [ 4]  652 	sbc	a, d
   02D2 E2rD7r02      [10]  653 	jp	PO, 00128$
   02D5 EE 80         [ 7]  654 	xor	a, #0x80
   02D7                     655 00128$:
   02D7 F2r3Ar03      [10]  656 	jp	P,00109$
                            657 ;lib/SGlib.c:243: SG_set_address_VRAM (PNTADDRESS+ (libgpit << 5) + x);
   02DA F3            [ 4]  658 	di 
   02DB FD 21r88r00   [14]  659 	ld	iy,#_libgpit
   02DF FD 7E 00      [19]  660 	ld	a,0 (iy)
   02E2 0F            [ 4]  661 	rrca
   02E3 0F            [ 4]  662 	rrca
   02E4 0F            [ 4]  663 	rrca
   02E5 E6 E0         [ 7]  664 	and	a,#0xE0
   02E7 DD 86 04      [19]  665 	add	a, 4 (ix)
   02EA D3 BF         [11]  666 	out	(_VDPControlPort),a
   02EC 69            [ 4]  667 	ld	l, c
   02ED 60            [ 4]  668 	ld	h, b
   02EE 29            [11]  669 	add	hl, hl
   02EF 29            [11]  670 	add	hl, hl
   02F0 29            [11]  671 	add	hl, hl
   02F1 29            [11]  672 	add	hl, hl
   02F2 29            [11]  673 	add	hl, hl
   02F3 01 00 18      [10]  674 	ld	bc,#0x1800
   02F6 09            [11]  675 	add	hl,bc
   02F7 DD 5E 04      [19]  676 	ld	e,4 (ix)
   02FA 16 00         [ 7]  677 	ld	d,#0x00
   02FC 19            [11]  678 	add	hl,de
   02FD 5C            [ 4]  679 	ld	e, h
   02FE 7B            [ 4]  680 	ld	a,e
   02FF CB 07         [ 8]  681 	rlc	a
   0301 9F            [ 4]  682 	sbc	a, a
   0302 57            [ 4]  683 	ld	d,a
   0303 7B            [ 4]  684 	ld	a,e
   0304 CB F7         [ 8]  685 	set	6, a
   0306 67            [ 4]  686 	ld	h,a
   0307 D3 BF         [11]  687 	out	(_VDPControlPort),a
   0309 FB            [ 4]  688 	ei 
                            689 ;lib/SGlib.c:244: SG_byte_brief_array_to_VDP_data (src, width);
   030A DD 4E 06      [19]  690 	ld	c,6 (ix)
   030D DD 46 07      [19]  691 	ld	b,7 (ix)
   0310 59            [ 4]  692 	ld	e, c
   0311 50            [ 4]  693 	ld	d, b
   0312 DD 7E FE      [19]  694 	ld	a,-2 (ix)
   0315 DD 77 FF      [19]  695 	ld	-1 (ix),a
                            696 ;lib/SGlib.c:131: do {
   0318                     697 00102$:
                            698 ;lib/SGlib.c:132: VDPDataPort = *(data ++);
   0318 1A            [ 7]  699 	ld	a,(de)
   0319 D3 BE         [11]  700 	out	(_VDPDataPort),a
   031B 13            [ 6]  701 	inc	de
                            702 ;lib/SGlib.c:133: } while (-- size);
   031C DD 7E FF      [19]  703 	ld	a,-1 (ix)
   031F C6 FF         [ 7]  704 	add	a,#0xFF
   0321 DD 77 FF      [19]  705 	ld	-1 (ix),a
   0324 B7            [ 4]  706 	or	a, a
   0325 20 F1         [12]  707 	jr	NZ,00102$
                            708 ;lib/SGlib.c:245: src = (unsigned char *) src + width;
   0327 DD 6E FE      [19]  709 	ld	l,-2 (ix)
   032A 26 00         [ 7]  710 	ld	h,#0x00
   032C 09            [11]  711 	add	hl,bc
   032D DD 75 06      [19]  712 	ld	6 (ix),l
   0330 DD 74 07      [19]  713 	ld	7 (ix),h
                            714 ;lib/SGlib.c:242: for (libgpit = y; libgpit < (y + height); libgpit ++) {
   0333 21r88r00      [10]  715 	ld	hl, #_libgpit+0
   0336 34            [11]  716 	inc	(hl)
   0337 C3rB8r02      [10]  717 	jp	00107$
   033A                     718 00109$:
   033A DD F9         [10]  719 	ld	sp, ix
   033C DD E1         [14]  720 	pop	ix
   033E C9            [10]  721 	ret
                            722 ;lib/SGlib.c:257: void SG_initSprites (void) { 		
                            723 ;	---------------------------------
                            724 ; Function SG_initSprites
                            725 ; ---------------------------------
   033F                     726 _SG_initSprites::
                            727 ;lib/SGlib.c:265: __endasm;
   033F 21r03r00      [10]  728 	ld hl, #_SpriteTable
   0342 11r03r00      [10]  729 	ld de, #_SpriteTable
   0345 36 C0         [10]  730 	ld (hl), #0xc0
   0347 13            [ 6]  731 	inc de
   0348 01 80 00      [10]  732 	ld bc, #128
   034B ED B0         [21]  733 	ldir
                            734 ;lib/SGlib.c:266: stp = SpriteTable + (first_sprite << 2);		
   034D 11r03r00      [10]  735 	ld	de,#_SpriteTable+0
   0350 FD 21r87r00   [14]  736 	ld	iy,#_first_sprite
   0354 FD 6E 00      [19]  737 	ld	l,0 (iy)
   0357 26 00         [ 7]  738 	ld	h,#0x00
   0359 29            [11]  739 	add	hl, hl
   035A 29            [11]  740 	add	hl, hl
   035B 19            [11]  741 	add	hl,de
   035C 22r83r00      [16]  742 	ld	(_stp),hl
                            743 ;lib/SGlib.c:267: first_sprite = (first_sprite + AUTOCYCLE_INIT_PRIME) & 31;
   035F 3Ar87r00      [13]  744 	ld	a,(#_first_sprite + 0)
   0362 C6 03         [ 7]  745 	add	a, #0x03
   0364 E6 1F         [ 7]  746 	and	a, #0x1F
   0366 32r87r00      [13]  747 	ld	(#_first_sprite + 0),a
   0369 C9            [10]  748 	ret
                            749 ;lib/SGlib.c:274: void SG_addSprite (unsigned char x, unsigned char y, unsigned char tile, unsigned char attr) {
                            750 ;	---------------------------------
                            751 ; Function SG_addSprite
                            752 ; ---------------------------------
   036A                     753 _SG_addSprite::
                            754 ;lib/SGlib.c:275: *stp ++ = y;
   036A 2Ar83r00      [16]  755 	ld	hl,(_stp)
   036D FD 21 03 00   [14]  756 	ld	iy,#3
   0371 FD 39         [15]  757 	add	iy,sp
   0373 FD 7E 00      [19]  758 	ld	a,0 (iy)
   0376 77            [ 7]  759 	ld	(hl),a
   0377 21r83r00      [10]  760 	ld	hl, #_stp+0
   037A 34            [11]  761 	inc	(hl)
   037B 20 04         [12]  762 	jr	NZ,00110$
   037D 21r84r00      [10]  763 	ld	hl, #_stp+1
   0380 34            [11]  764 	inc	(hl)
   0381                     765 00110$:
                            766 ;lib/SGlib.c:276: *stp ++ = x;
   0381 2Ar83r00      [16]  767 	ld	hl,(_stp)
   0384 FD 21 02 00   [14]  768 	ld	iy,#2
   0388 FD 39         [15]  769 	add	iy,sp
   038A FD 7E 00      [19]  770 	ld	a,0 (iy)
   038D 77            [ 7]  771 	ld	(hl),a
   038E 21r83r00      [10]  772 	ld	hl, #_stp+0
   0391 34            [11]  773 	inc	(hl)
   0392 20 04         [12]  774 	jr	NZ,00111$
   0394 21r84r00      [10]  775 	ld	hl, #_stp+1
   0397 34            [11]  776 	inc	(hl)
   0398                     777 00111$:
                            778 ;lib/SGlib.c:277: *stp ++ = tile;
   0398 2Ar83r00      [16]  779 	ld	hl,(_stp)
   039B FD 21 04 00   [14]  780 	ld	iy,#4
   039F FD 39         [15]  781 	add	iy,sp
   03A1 FD 7E 00      [19]  782 	ld	a,0 (iy)
   03A4 77            [ 7]  783 	ld	(hl),a
   03A5 21r83r00      [10]  784 	ld	hl, #_stp+0
   03A8 34            [11]  785 	inc	(hl)
   03A9 20 04         [12]  786 	jr	NZ,00112$
   03AB 21r84r00      [10]  787 	ld	hl, #_stp+1
   03AE 34            [11]  788 	inc	(hl)
   03AF                     789 00112$:
                            790 ;lib/SGlib.c:278: *stp ++ = attr;
   03AF 2Ar83r00      [16]  791 	ld	hl,(_stp)
   03B2 FD 21 05 00   [14]  792 	ld	iy,#5
   03B6 FD 39         [15]  793 	add	iy,sp
   03B8 FD 7E 00      [19]  794 	ld	a,0 (iy)
   03BB 77            [ 7]  795 	ld	(hl),a
   03BC 21r83r00      [10]  796 	ld	hl, #_stp+0
   03BF 34            [11]  797 	inc	(hl)
   03C0 20 04         [12]  798 	jr	NZ,00113$
   03C2 21r84r00      [10]  799 	ld	hl, #_stp+1
   03C5 34            [11]  800 	inc	(hl)
   03C6                     801 00113$:
                            802 ;lib/SGlib.c:271: stp += 4 * (AUTOCYCLE_PRIME-1); if (stp >= SpriteTableEnd) stp -= 128;
   03C6 21r83r00      [10]  803 	ld	hl,#_stp
   03C9 7E            [ 7]  804 	ld	a,(hl)
   03CA C6 08         [ 7]  805 	add	a, #0x08
   03CC 77            [ 7]  806 	ld	(hl),a
   03CD 23            [ 6]  807 	inc	hl
   03CE 7E            [ 7]  808 	ld	a,(hl)
   03CF CE 00         [ 7]  809 	adc	a, #0x00
   03D1 77            [ 7]  810 	ld	(hl),a
   03D2 21r85r00      [10]  811 	ld	hl,#_SpriteTableEnd
   03D5 3Ar83r00      [13]  812 	ld	a,(#_stp + 0)
   03D8 96            [ 7]  813 	sub	a, (hl)
   03D9 3Ar84r00      [13]  814 	ld	a,(#_stp + 1)
   03DC 23            [ 6]  815 	inc	hl
   03DD 9E            [ 7]  816 	sbc	a, (hl)
   03DE D8            [11]  817 	ret	C
   03DF 21r83r00      [10]  818 	ld	hl,#_stp
   03E2 7E            [ 7]  819 	ld	a,(hl)
   03E3 C6 80         [ 7]  820 	add	a,#0x80
   03E5 77            [ 7]  821 	ld	(hl),a
   03E6 23            [ 6]  822 	inc	hl
   03E7 7E            [ 7]  823 	ld	a,(hl)
   03E8 CE FF         [ 7]  824 	adc	a,#0xFF
   03EA 77            [ 7]  825 	ld	(hl),a
                            826 ;lib/SGlib.c:279: nextSprite ();
   03EB C9            [10]  827 	ret
                            828 ;lib/SGlib.c:282: void SG_addMetaSprite1x1 (unsigned char x, unsigned char y, const unsigned char *mt) {
                            829 ;	---------------------------------
                            830 ; Function SG_addMetaSprite1x1
                            831 ; ---------------------------------
   03EC                     832 _SG_addMetaSprite1x1::
   03EC DD E5         [15]  833 	push	ix
   03EE DD 21 00 00   [14]  834 	ld	ix,#0
   03F2 DD 39         [15]  835 	add	ix,sp
                            836 ;lib/SGlib.c:283: mt += 2; 
   03F4 DD 7E 06      [19]  837 	ld	a,6 (ix)
   03F7 C6 02         [ 7]  838 	add	a, #0x02
   03F9 DD 77 06      [19]  839 	ld	6 (ix),a
   03FC DD 7E 07      [19]  840 	ld	a,7 (ix)
   03FF CE 00         [ 7]  841 	adc	a, #0x00
   0401 DD 77 07      [19]  842 	ld	7 (ix),a
                            843 ;lib/SGlib.c:284: *stp ++ = y;
   0404 2Ar83r00      [16]  844 	ld	hl,(_stp)
   0407 DD 7E 05      [19]  845 	ld	a,5 (ix)
   040A 77            [ 7]  846 	ld	(hl),a
   040B 21r83r00      [10]  847 	ld	hl, #_stp+0
   040E 34            [11]  848 	inc	(hl)
   040F 20 04         [12]  849 	jr	NZ,00123$
   0411 21r84r00      [10]  850 	ld	hl, #_stp+1
   0414 34            [11]  851 	inc	(hl)
   0415                     852 00123$:
                            853 ;lib/SGlib.c:285: *stp ++ = x;
   0415 2Ar83r00      [16]  854 	ld	hl,(_stp)
   0418 DD 7E 04      [19]  855 	ld	a,4 (ix)
   041B 77            [ 7]  856 	ld	(hl),a
   041C 21r83r00      [10]  857 	ld	hl, #_stp+0
   041F 34            [11]  858 	inc	(hl)
   0420 20 04         [12]  859 	jr	NZ,00124$
   0422 21r84r00      [10]  860 	ld	hl, #_stp+1
   0425 34            [11]  861 	inc	(hl)
   0426                     862 00124$:
                            863 ;lib/SGlib.c:286: *stp ++ = *mt ++;
   0426 ED 5Br83r00   [20]  864 	ld	de,(_stp)
   042A DD 6E 06      [19]  865 	ld	l,6 (ix)
   042D DD 66 07      [19]  866 	ld	h,7 (ix)
   0430 46            [ 7]  867 	ld	b,(hl)
   0431 23            [ 6]  868 	inc	hl
   0432 DD 75 06      [19]  869 	ld	6 (ix),l
   0435 DD 74 07      [19]  870 	ld	7 (ix),h
   0438 78            [ 4]  871 	ld	a,b
   0439 12            [ 7]  872 	ld	(de),a
   043A 21r83r00      [10]  873 	ld	hl, #_stp+0
   043D 34            [11]  874 	inc	(hl)
   043E 20 04         [12]  875 	jr	NZ,00125$
   0440 21r84r00      [10]  876 	ld	hl, #_stp+1
   0443 34            [11]  877 	inc	(hl)
   0444                     878 00125$:
                            879 ;lib/SGlib.c:287: *stp ++ = *mt ++;
   0444 ED 5Br83r00   [20]  880 	ld	de,(_stp)
   0448 DD 6E 06      [19]  881 	ld	l,6 (ix)
   044B DD 66 07      [19]  882 	ld	h,7 (ix)
   044E 46            [ 7]  883 	ld	b,(hl)
   044F 23            [ 6]  884 	inc	hl
   0450 DD 75 06      [19]  885 	ld	6 (ix),l
   0453 DD 74 07      [19]  886 	ld	7 (ix),h
   0456 78            [ 4]  887 	ld	a,b
   0457 12            [ 7]  888 	ld	(de),a
   0458 21r83r00      [10]  889 	ld	hl, #_stp+0
   045B 34            [11]  890 	inc	(hl)
   045C 20 04         [12]  891 	jr	NZ,00126$
   045E 21r84r00      [10]  892 	ld	hl, #_stp+1
   0461 34            [11]  893 	inc	(hl)
   0462                     894 00126$:
                            895 ;lib/SGlib.c:271: stp += 4 * (AUTOCYCLE_PRIME-1); if (stp >= SpriteTableEnd) stp -= 128;
   0462 21r83r00      [10]  896 	ld	hl,#_stp
   0465 7E            [ 7]  897 	ld	a,(hl)
   0466 C6 08         [ 7]  898 	add	a, #0x08
   0468 77            [ 7]  899 	ld	(hl),a
   0469 23            [ 6]  900 	inc	hl
   046A 7E            [ 7]  901 	ld	a,(hl)
   046B CE 00         [ 7]  902 	adc	a, #0x00
   046D 77            [ 7]  903 	ld	(hl),a
   046E 21r85r00      [10]  904 	ld	hl,#_SpriteTableEnd
   0471 3Ar83r00      [13]  905 	ld	a,(#_stp + 0)
   0474 96            [ 7]  906 	sub	a, (hl)
   0475 3Ar84r00      [13]  907 	ld	a,(#_stp + 1)
   0478 23            [ 6]  908 	inc	hl
   0479 9E            [ 7]  909 	sbc	a, (hl)
   047A 38 0C         [12]  910 	jr	C,00105$
   047C 21r83r00      [10]  911 	ld	hl,#_stp
   047F 7E            [ 7]  912 	ld	a,(hl)
   0480 C6 80         [ 7]  913 	add	a,#0x80
   0482 77            [ 7]  914 	ld	(hl),a
   0483 23            [ 6]  915 	inc	hl
   0484 7E            [ 7]  916 	ld	a,(hl)
   0485 CE FF         [ 7]  917 	adc	a,#0xFF
   0487 77            [ 7]  918 	ld	(hl),a
                            919 ;lib/SGlib.c:288: nextSprite ();
   0488                     920 00105$:
                            921 ;lib/SGlib.c:290: if (*mt == 0x80) return;
   0488 DD 6E 06      [19]  922 	ld	l,6 (ix)
   048B DD 66 07      [19]  923 	ld	h,7 (ix)
   048E 7E            [ 7]  924 	ld	a,(hl)
   048F D6 80         [ 7]  925 	sub	a, #0x80
   0491 CAr1Dr05      [10]  926 	jp	Z,00109$
   0494 18 03         [12]  927 	jr	00102$
   0496 C3r1Dr05      [10]  928 	jp	00109$
   0499                     929 00102$:
                            930 ;lib/SGlib.c:292: mt += 2; 
   0499 23            [ 6]  931 	inc	hl
   049A 23            [ 6]  932 	inc	hl
   049B DD 75 06      [19]  933 	ld	6 (ix),l
   049E DD 74 07      [19]  934 	ld	7 (ix),h
                            935 ;lib/SGlib.c:293: *stp ++ = y;
   04A1 2Ar83r00      [16]  936 	ld	hl,(_stp)
   04A4 DD 7E 05      [19]  937 	ld	a,5 (ix)
   04A7 77            [ 7]  938 	ld	(hl),a
   04A8 21r83r00      [10]  939 	ld	hl, #_stp+0
   04AB 34            [11]  940 	inc	(hl)
   04AC 20 04         [12]  941 	jr	NZ,00129$
   04AE 21r84r00      [10]  942 	ld	hl, #_stp+1
   04B1 34            [11]  943 	inc	(hl)
   04B2                     944 00129$:
                            945 ;lib/SGlib.c:294: *stp ++ = x;
   04B2 2Ar83r00      [16]  946 	ld	hl,(_stp)
   04B5 DD 7E 04      [19]  947 	ld	a,4 (ix)
   04B8 77            [ 7]  948 	ld	(hl),a
   04B9 21r83r00      [10]  949 	ld	hl, #_stp+0
   04BC 34            [11]  950 	inc	(hl)
   04BD 20 04         [12]  951 	jr	NZ,00130$
   04BF 21r84r00      [10]  952 	ld	hl, #_stp+1
   04C2 34            [11]  953 	inc	(hl)
   04C3                     954 00130$:
                            955 ;lib/SGlib.c:295: *stp ++ = *mt ++;
   04C3 ED 5Br83r00   [20]  956 	ld	de,(_stp)
   04C7 DD 6E 06      [19]  957 	ld	l,6 (ix)
   04CA DD 66 07      [19]  958 	ld	h,7 (ix)
   04CD 46            [ 7]  959 	ld	b,(hl)
   04CE 23            [ 6]  960 	inc	hl
   04CF DD 75 06      [19]  961 	ld	6 (ix),l
   04D2 DD 74 07      [19]  962 	ld	7 (ix),h
   04D5 78            [ 4]  963 	ld	a,b
   04D6 12            [ 7]  964 	ld	(de),a
   04D7 21r83r00      [10]  965 	ld	hl, #_stp+0
   04DA 34            [11]  966 	inc	(hl)
   04DB 20 04         [12]  967 	jr	NZ,00131$
   04DD 21r84r00      [10]  968 	ld	hl, #_stp+1
   04E0 34            [11]  969 	inc	(hl)
   04E1                     970 00131$:
                            971 ;lib/SGlib.c:296: *stp ++ = *mt ++;
   04E1 ED 5Br83r00   [20]  972 	ld	de,(_stp)
   04E5 DD 6E 06      [19]  973 	ld	l,6 (ix)
   04E8 DD 66 07      [19]  974 	ld	h,7 (ix)
   04EB 7E            [ 7]  975 	ld	a,(hl)
   04EC 12            [ 7]  976 	ld	(de),a
   04ED 21r83r00      [10]  977 	ld	hl, #_stp+0
   04F0 34            [11]  978 	inc	(hl)
   04F1 20 04         [12]  979 	jr	NZ,00132$
   04F3 21r84r00      [10]  980 	ld	hl, #_stp+1
   04F6 34            [11]  981 	inc	(hl)
   04F7                     982 00132$:
                            983 ;lib/SGlib.c:271: stp += 4 * (AUTOCYCLE_PRIME-1); if (stp >= SpriteTableEnd) stp -= 128;
   04F7 21r83r00      [10]  984 	ld	hl,#_stp
   04FA 7E            [ 7]  985 	ld	a,(hl)
   04FB C6 08         [ 7]  986 	add	a, #0x08
   04FD 77            [ 7]  987 	ld	(hl),a
   04FE 23            [ 6]  988 	inc	hl
   04FF 7E            [ 7]  989 	ld	a,(hl)
   0500 CE 00         [ 7]  990 	adc	a, #0x00
   0502 77            [ 7]  991 	ld	(hl),a
   0503 21r85r00      [10]  992 	ld	hl,#_SpriteTableEnd
   0506 3Ar83r00      [13]  993 	ld	a,(#_stp + 0)
   0509 96            [ 7]  994 	sub	a, (hl)
   050A 3Ar84r00      [13]  995 	ld	a,(#_stp + 1)
   050D 23            [ 6]  996 	inc	hl
   050E 9E            [ 7]  997 	sbc	a, (hl)
   050F 38 0C         [12]  998 	jr	C,00109$
   0511 21r83r00      [10]  999 	ld	hl,#_stp
   0514 7E            [ 7] 1000 	ld	a,(hl)
   0515 C6 80         [ 7] 1001 	add	a,#0x80
   0517 77            [ 7] 1002 	ld	(hl),a
   0518 23            [ 6] 1003 	inc	hl
   0519 7E            [ 7] 1004 	ld	a,(hl)
   051A CE FF         [ 7] 1005 	adc	a,#0xFF
   051C 77            [ 7] 1006 	ld	(hl),a
                           1007 ;lib/SGlib.c:297: nextSprite ();
   051D                    1008 00109$:
   051D DD E1         [14] 1009 	pop	ix
   051F C9            [10] 1010 	ret
                           1011 ;lib/SGlib.c:300: void SG_addMetaSprite (unsigned char x, unsigned char y, const unsigned char *mt) {
                           1012 ;	---------------------------------
                           1013 ; Function SG_addMetaSprite
                           1014 ; ---------------------------------
   0520                    1015 _SG_addMetaSprite::
   0520 DD E5         [15] 1016 	push	ix
   0522 DD 21 00 00   [14] 1017 	ld	ix,#0
   0526 DD 39         [15] 1018 	add	ix,sp
                           1019 ;lib/SGlib.c:301: while (0x80 != (*stp = *mt ++)) {
   0528                    1020 00103$:
   0528 ED 5Br83r00   [20] 1021 	ld	de,(_stp)
   052C DD 6E 06      [19] 1022 	ld	l,6 (ix)
   052F DD 66 07      [19] 1023 	ld	h,7 (ix)
   0532 46            [ 7] 1024 	ld	b,(hl)
   0533 23            [ 6] 1025 	inc	hl
   0534 DD 75 06      [19] 1026 	ld	6 (ix),l
   0537 DD 74 07      [19] 1027 	ld	7 (ix),h
   053A 78            [ 4] 1028 	ld	a,b
   053B 12            [ 7] 1029 	ld	(de),a
   053C 78            [ 4] 1030 	ld	a,b
   053D D6 80         [ 7] 1031 	sub	a, #0x80
   053F CArE3r05      [10] 1032 	jp	Z,00106$
   0542 2Ar83r00      [16] 1033 	ld	hl,(_stp)
                           1034 ;lib/SGlib.c:302: *stp += y; stp ++;
   0545 7E            [ 7] 1035 	ld	a, (hl)
   0546 DD 86 05      [19] 1036 	add	a, 5 (ix)
   0549 77            [ 7] 1037 	ld	(hl),a
   054A 21r83r00      [10] 1038 	ld	hl, #_stp+0
   054D 34            [11] 1039 	inc	(hl)
   054E 20 04         [12] 1040 	jr	NZ,00121$
   0550 21r84r00      [10] 1041 	ld	hl, #_stp+1
   0553 34            [11] 1042 	inc	(hl)
   0554                    1043 00121$:
                           1044 ;lib/SGlib.c:303: *stp ++ = x + *mt++;
   0554 ED 5Br83r00   [20] 1045 	ld	de,(_stp)
   0558 DD 6E 06      [19] 1046 	ld	l,6 (ix)
   055B DD 66 07      [19] 1047 	ld	h,7 (ix)
   055E 46            [ 7] 1048 	ld	b,(hl)
   055F 23            [ 6] 1049 	inc	hl
   0560 DD 75 06      [19] 1050 	ld	6 (ix),l
   0563 DD 74 07      [19] 1051 	ld	7 (ix),h
   0566 DD 7E 04      [19] 1052 	ld	a,4 (ix)
   0569 80            [ 4] 1053 	add	a, b
   056A 12            [ 7] 1054 	ld	(de),a
   056B 21r83r00      [10] 1055 	ld	hl, #_stp+0
   056E 34            [11] 1056 	inc	(hl)
   056F 20 04         [12] 1057 	jr	NZ,00122$
   0571 21r84r00      [10] 1058 	ld	hl, #_stp+1
   0574 34            [11] 1059 	inc	(hl)
   0575                    1060 00122$:
                           1061 ;lib/SGlib.c:304: *stp ++ = *mt ++;
   0575 ED 5Br83r00   [20] 1062 	ld	de,(_stp)
   0579 DD 6E 06      [19] 1063 	ld	l,6 (ix)
   057C DD 66 07      [19] 1064 	ld	h,7 (ix)
   057F 46            [ 7] 1065 	ld	b,(hl)
   0580 23            [ 6] 1066 	inc	hl
   0581 DD 75 06      [19] 1067 	ld	6 (ix),l
   0584 DD 74 07      [19] 1068 	ld	7 (ix),h
   0587 78            [ 4] 1069 	ld	a,b
   0588 12            [ 7] 1070 	ld	(de),a
   0589 21r83r00      [10] 1071 	ld	hl, #_stp+0
   058C 34            [11] 1072 	inc	(hl)
   058D 20 04         [12] 1073 	jr	NZ,00123$
   058F 21r84r00      [10] 1074 	ld	hl, #_stp+1
   0592 34            [11] 1075 	inc	(hl)
   0593                    1076 00123$:
                           1077 ;lib/SGlib.c:305: *stp ++ = *mt ++;
   0593 ED 5Br83r00   [20] 1078 	ld	de,(_stp)
   0597 DD 6E 06      [19] 1079 	ld	l,6 (ix)
   059A DD 66 07      [19] 1080 	ld	h,7 (ix)
   059D 46            [ 7] 1081 	ld	b,(hl)
   059E 23            [ 6] 1082 	inc	hl
   059F DD 75 06      [19] 1083 	ld	6 (ix),l
   05A2 DD 74 07      [19] 1084 	ld	7 (ix),h
   05A5 78            [ 4] 1085 	ld	a,b
   05A6 12            [ 7] 1086 	ld	(de),a
   05A7 21r83r00      [10] 1087 	ld	hl, #_stp+0
   05AA 34            [11] 1088 	inc	(hl)
   05AB 20 04         [12] 1089 	jr	NZ,00124$
   05AD 21r84r00      [10] 1090 	ld	hl, #_stp+1
   05B0 34            [11] 1091 	inc	(hl)
   05B1                    1092 00124$:
                           1093 ;lib/SGlib.c:306: stp += 4 * AUTOCYCLE_PRIME; if (stp > SpriteTableEnd) stp -= 128;
   05B1 21r83r00      [10] 1094 	ld	hl,#_stp
   05B4 7E            [ 7] 1095 	ld	a,(hl)
   05B5 C6 0C         [ 7] 1096 	add	a, #0x0C
   05B7 77            [ 7] 1097 	ld	(hl),a
   05B8 23            [ 6] 1098 	inc	hl
   05B9 7E            [ 7] 1099 	ld	a,(hl)
   05BA CE 00         [ 7] 1100 	adc	a, #0x00
   05BC 77            [ 7] 1101 	ld	(hl),a
   05BD 21r85r00      [10] 1102 	ld	hl,#_SpriteTableEnd
   05C0 7E            [ 7] 1103 	ld	a,(hl)
   05C1 FD 21r83r00   [14] 1104 	ld	iy,#_stp
   05C5 FD 96 00      [19] 1105 	sub	a, 0 (iy)
   05C8 23            [ 6] 1106 	inc	hl
   05C9 7E            [ 7] 1107 	ld	a,(hl)
   05CA FD 21r83r00   [14] 1108 	ld	iy,#_stp
   05CE FD 9E 01      [19] 1109 	sbc	a, 1 (iy)
   05D1 D2r28r05      [10] 1110 	jp	NC,00103$
   05D4 21r83r00      [10] 1111 	ld	hl,#_stp
   05D7 7E            [ 7] 1112 	ld	a,(hl)
   05D8 C6 80         [ 7] 1113 	add	a,#0x80
   05DA 77            [ 7] 1114 	ld	(hl),a
   05DB 23            [ 6] 1115 	inc	hl
   05DC 7E            [ 7] 1116 	ld	a,(hl)
   05DD CE FF         [ 7] 1117 	adc	a,#0xFF
   05DF 77            [ 7] 1118 	ld	(hl),a
   05E0 C3r28r05      [10] 1119 	jp	00103$
   05E3                    1120 00106$:
   05E3 DD E1         [14] 1121 	pop	ix
   05E5 C9            [10] 1122 	ret
                           1123 ;lib/SGlib.c:310: void SG_finalizeSprites (void) {
                           1124 ;	---------------------------------
                           1125 ; Function SG_finalizeSprites
                           1126 ; ---------------------------------
   05E6                    1127 _SG_finalizeSprites::
                           1128 ;lib/SGlib.c:312: }
   05E6 C9            [10] 1129 	ret
                           1130 ;lib/SGlib.c:314: unsigned char *SG_getStp (void) {
                           1131 ;	---------------------------------
                           1132 ; Function SG_getStp
                           1133 ; ---------------------------------
   05E7                    1134 _SG_getStp::
                           1135 ;lib/SGlib.c:315: return stp;
   05E7 2Ar83r00      [16] 1136 	ld	hl,(_stp)
   05EA C9            [10] 1137 	ret
                           1138 ;lib/SGlib.c:318: void SG_setStp (unsigned char *s) {
                           1139 ;	---------------------------------
                           1140 ; Function SG_setStp
                           1141 ; ---------------------------------
   05EB                    1142 _SG_setStp::
                           1143 ;lib/SGlib.c:319: stp = s;
   05EB 21 02 00      [10] 1144 	ld	hl, #2+0
   05EE 39            [11] 1145 	add	hl, sp
   05EF 7E            [ 7] 1146 	ld	a, (hl)
   05F0 32r83r00      [13] 1147 	ld	(#_stp + 0),a
   05F3 21 03 00      [10] 1148 	ld	hl, #2+1
   05F6 39            [11] 1149 	add	hl, sp
   05F7 7E            [ 7] 1150 	ld	a, (hl)
   05F8 32r84r00      [13] 1151 	ld	(#_stp + 1),a
   05FB C9            [10] 1152 	ret
                           1153 ;lib/SGlib.c:370: void SG_waitForVBlank (void) {
                           1154 ;	---------------------------------
                           1155 ; Function SG_waitForVBlank
                           1156 ; ---------------------------------
   05FC                    1157 _SG_waitForVBlank::
                           1158 ;lib/SGlib.c:371: VDPBlank = false;
   05FC 21r00r00      [10] 1159 	ld	hl,#_VDPBlank + 0
   05FF 36 00         [10] 1160 	ld	(hl), #0x00
                           1161 ;lib/SGlib.c:372: while (!VDPBlank);
   0601                    1162 00101$:
   0601 21r00r00      [10] 1163 	ld	hl,#_VDPBlank+0
   0604 CB 46         [12] 1164 	bit	0, (hl)
   0606 28 F9         [12] 1165 	jr	Z,00101$
   0608 C9            [10] 1166 	ret
                           1167 ;lib/SGlib.c:376: unsigned char SG_getKeysStatus (void) {
                           1168 ;	---------------------------------
                           1169 ; Function SG_getKeysStatus
                           1170 ; ---------------------------------
   0609                    1171 _SG_getKeysStatus::
                           1172 ;lib/SGlib.c:377: return (KeysStatus);
   0609 FD 21r02r00   [14] 1173 	ld	iy,#_KeysStatus
   060D FD 6E 00      [19] 1174 	ld	l,0 (iy)
   0610 C9            [10] 1175 	ret
                           1176 ;lib/SGlib.c:385: _Bool SG_queryPauseRequested (void) {
                           1177 ;	---------------------------------
                           1178 ; Function SG_queryPauseRequested
                           1179 ; ---------------------------------
   0611                    1180 _SG_queryPauseRequested::
                           1181 ;lib/SGlib.c:386: return (PauseRequested);
   0611 FD 21r01r00   [14] 1182 	ld	iy,#_PauseRequested
   0615 FD 6E 00      [19] 1183 	ld	l,0 (iy)
   0618 C9            [10] 1184 	ret
                           1185 ;lib/SGlib.c:389: void SG_resetPauseRequest (void) {
                           1186 ;	---------------------------------
                           1187 ; Function SG_resetPauseRequest
                           1188 ; ---------------------------------
   0619                    1189 _SG_resetPauseRequest::
                           1190 ;lib/SGlib.c:390: PauseRequested = false;
   0619 21r01r00      [10] 1191 	ld	hl,#_PauseRequested + 0
   061C 36 00         [10] 1192 	ld	(hl), #0x00
   061E C9            [10] 1193 	ret
                           1194 ;lib/SGlib.c:393: void SG_VRAMmemset (unsigned int dst, unsigned char value, unsigned int size) {
                           1195 ;	---------------------------------
                           1196 ; Function SG_VRAMmemset
                           1197 ; ---------------------------------
   061F                    1198 _SG_VRAMmemset::
                           1199 ;lib/SGlib.c:394: SG_set_address_VRAM (dst);
   061F F3            [ 4] 1200 	di 
   0620 FD 21 02 00   [14] 1201 	ld	iy,#2
   0624 FD 39         [15] 1202 	add	iy,sp
   0626 FD 7E 00      [19] 1203 	ld	a, 0 (iy)
   0629 D3 BF         [11] 1204 	out	(_VDPControlPort),a
   062B FD 7E 01      [19] 1205 	ld	a, 1 (iy)
   062E 2E 00         [ 7] 1206 	ld	l, #0x00
   0630 CB F7         [ 8] 1207 	set	6, a
   0632 67            [ 4] 1208 	ld	h,a
   0633 D3 BF         [11] 1209 	out	(_VDPControlPort),a
   0635 FB            [ 4] 1210 	ei 
                           1211 ;lib/SGlib.c:395: while (size>0) {
   0636 21 04 00      [10] 1212 	ld	hl, #4+0
   0639 39            [11] 1213 	add	hl, sp
   063A 56            [ 7] 1214 	ld	d, (hl)
   063B 21 05 00      [10] 1215 	ld	hl, #5
   063E 39            [11] 1216 	add	hl, sp
   063F 4E            [ 7] 1217 	ld	c, (hl)
   0640 23            [ 6] 1218 	inc	hl
   0641 46            [ 7] 1219 	ld	b, (hl)
   0642                    1220 00101$:
   0642 78            [ 4] 1221 	ld	a,b
   0643 B1            [ 4] 1222 	or	a,c
   0644 C8            [11] 1223 	ret	Z
                           1224 ;lib/SGlib.c:121: VDPDataPort = data;
   0645 7A            [ 4] 1225 	ld	a,d
   0646 D3 BE         [11] 1226 	out	(_VDPDataPort),a
                           1227 ;lib/SGlib.c:397: size--;
   0648 0B            [ 6] 1228 	dec	bc
   0649 18 F7         [12] 1229 	jr	00101$
                           1230 ;lib/SGlib.c:406: void SG_copySpritestoSAT (void) {
                           1231 ;	---------------------------------
                           1232 ; Function SG_copySpritestoSAT
                           1233 ; ---------------------------------
   064B                    1234 _SG_copySpritestoSAT::
                           1235 ;lib/SGlib.c:407: SG_set_address_VRAM (SATADDRESS);
   064B F3            [ 4] 1236 	di 
   064C 3E 00         [ 7] 1237 	ld	a,#0x00
   064E D3 BF         [11] 1238 	out	(_VDPControlPort),a
   0650 3E 5B         [ 7] 1239 	ld	a,#0x5B
   0652 D3 BF         [11] 1240 	out	(_VDPControlPort),a
   0654 FB            [ 4] 1241 	ei 
                           1242 ;lib/SGlib.c:416: __endasm;
   0655 0E BE         [ 7] 1243 	ld c,#_VDPDataPort
   0657 21r03r00      [10] 1244 	ld hl,#_SpriteTable
   065A CDr00rFF      [17] 1245 	call _outi_block-32*4*2
   065D C9            [10] 1246 	ret
                           1247 ;lib/SGlib.c:419: void SG_VRAMmemcpy128 (unsigned int dst, void *src) {
                           1248 ;	---------------------------------
                           1249 ; Function SG_VRAMmemcpy128
                           1250 ; ---------------------------------
   065E                    1251 _SG_VRAMmemcpy128::
                           1252 ;lib/SGlib.c:420: SG_set_address_VRAM (dst);
   065E F3            [ 4] 1253 	di 
   065F FD 21 02 00   [14] 1254 	ld	iy,#2
   0663 FD 39         [15] 1255 	add	iy,sp
   0665 FD 7E 00      [19] 1256 	ld	a, 0 (iy)
   0668 D3 BF         [11] 1257 	out	(_VDPControlPort),a
   066A FD 7E 01      [19] 1258 	ld	a, 1 (iy)
   066D 2E 00         [ 7] 1259 	ld	l, #0x00
   066F CB F7         [ 8] 1260 	set	6, a
   0671 67            [ 4] 1261 	ld	h,a
   0672 D3 BF         [11] 1262 	out	(_VDPControlPort),a
   0674 FB            [ 4] 1263 	ei 
                           1264 ;lib/SGlib.c:426: __endasm;
   0675 0E BE         [ 7] 1265 	ld c,#_VDPDataPort
   0677 FD 6E 02      [19] 1266 	ld l, 2 (iy)
   067A FD 66 03      [19] 1267 	ld h, 3 (iy)
   067D CDr00rFF      [17] 1268 	call _outi_block-128*2
   0680 C9            [10] 1269 	ret
                           1270 ;lib/SGlib.c:432: void SG_setUpdateList (unsigned char *ul) {
                           1271 ;	---------------------------------
                           1272 ; Function SG_setUpdateList
                           1273 ; ---------------------------------
   0681                    1274 _SG_setUpdateList::
                           1275 ;lib/SGlib.c:433: updateList = ul;
   0681 21 02 00      [10] 1276 	ld	hl, #2+0
   0684 39            [11] 1277 	add	hl, sp
   0685 7E            [ 7] 1278 	ld	a, (hl)
   0686 32r8Ar00      [13] 1279 	ld	(#_updateList + 0),a
   0689 21 03 00      [10] 1280 	ld	hl, #2+1
   068C 39            [11] 1281 	add	hl, sp
   068D 7E            [ 7] 1282 	ld	a, (hl)
   068E 32r8Br00      [13] 1283 	ld	(#_updateList + 1),a
   0691 C9            [10] 1284 	ret
                           1285 ;lib/SGlib.c:436: void SG_doUpdateList (void) {
                           1286 ;	---------------------------------
                           1287 ; Function SG_doUpdateList
                           1288 ; ---------------------------------
   0692                    1289 _SG_doUpdateList::
                           1290 ;lib/SGlib.c:437: ulp = updateList;
   0692 2Ar8Ar00      [16] 1291 	ld	hl,(_updateList)
   0695 22r8Cr00      [16] 1292 	ld	(_ulp),hl
                           1293 ;lib/SGlib.c:438: while (1) {
   0698                    1294 00104$:
                           1295 ;lib/SGlib.c:439: ulpMsb = *ulp; ++ ulp;
   0698 2Ar8Cr00      [16] 1296 	ld	hl,(_ulp)
   069B 7E            [ 7] 1297 	ld	a,(hl)
   069C 21r8Er00      [10] 1298 	ld	hl,#_ulpMsb + 0
   069F 77            [ 7] 1299 	ld	(hl), a
   06A0 21r8Cr00      [10] 1300 	ld	hl, #_ulp+0
   06A3 34            [11] 1301 	inc	(hl)
   06A4 20 04         [12] 1302 	jr	NZ,00116$
   06A6 21r8Dr00      [10] 1303 	ld	hl, #_ulp+1
   06A9 34            [11] 1304 	inc	(hl)
   06AA                    1305 00116$:
                           1306 ;lib/SGlib.c:440: if (ulpMsb == 0xff) break;
   06AA 3Ar8Er00      [13] 1307 	ld	a,(#_ulpMsb + 0)
   06AD 3C            [ 4] 1308 	inc	a
   06AE C8            [11] 1309 	ret	Z
                           1310 ;lib/SGlib.c:441: VDPControlPort = *ulp ++; 
   06AF 2Ar8Cr00      [16] 1311 	ld	hl,(_ulp)
   06B2 7E            [ 7] 1312 	ld	a,(hl)
   06B3 D3 BF         [11] 1313 	out	(_VDPControlPort),a
   06B5 21r8Cr00      [10] 1314 	ld	hl, #_ulp+0
   06B8 34            [11] 1315 	inc	(hl)
   06B9 20 04         [12] 1316 	jr	NZ,00118$
   06BB 21r8Dr00      [10] 1317 	ld	hl, #_ulp+1
   06BE 34            [11] 1318 	inc	(hl)
   06BF                    1319 00118$:
                           1320 ;lib/SGlib.c:442: VDPControlPort = ulpMsb | 0x40;
   06BF 3Ar8Er00      [13] 1321 	ld	a,(#_ulpMsb + 0)
   06C2 CB F7         [ 8] 1322 	set	6, a
   06C4 D3 BF         [11] 1323 	out	(_VDPControlPort),a
                           1324 ;lib/SGlib.c:443: VDPDataPort = *ulp ++;
   06C6 2Ar8Cr00      [16] 1325 	ld	hl,(_ulp)
   06C9 7E            [ 7] 1326 	ld	a,(hl)
   06CA D3 BE         [11] 1327 	out	(_VDPDataPort),a
   06CC 21r8Cr00      [10] 1328 	ld	hl, #_ulp+0
   06CF 34            [11] 1329 	inc	(hl)
   06D0 20 C6         [12] 1330 	jr	NZ,00104$
   06D2 21r8Dr00      [10] 1331 	ld	hl, #_ulp+1
   06D5 34            [11] 1332 	inc	(hl)
   06D6 18 C0         [12] 1333 	jr	00104$
                           1334 ;lib/SGlib.c:450: void SG_isr (void) __interrupt {
                           1335 ;	---------------------------------
                           1336 ; Function SG_isr
                           1337 ; ---------------------------------
   06D8                    1338 _SG_isr::
   06D8 F5            [11] 1339 	push	af
   06D9 C5            [11] 1340 	push	bc
   06DA D5            [11] 1341 	push	de
   06DB E5            [11] 1342 	push	hl
   06DC FD E5         [15] 1343 	push	iy
   06DE 3B            [ 6] 1344 	dec	sp
                           1345 ;lib/SGlib.c:451: volatile unsigned char VDPStatus = VDPStatusPort;	// Aknowledges interrupt at the VDP
   06DF DB BF         [11] 1346 	in	a,(_VDPStatusPort)
   06E1 FD 21 00 00   [14] 1347 	ld	iy,#0
   06E5 FD 39         [15] 1348 	add	iy,sp
   06E7 FD 77 00      [19] 1349 	ld	0 (iy),a
                           1350 ;lib/SGlib.c:452: if (VDPStatus & 0x80) {
   06EA FD 7E 00      [19] 1351 	ld	a,0 (iy)
   06ED 07            [ 4] 1352 	rlca
   06EE 30 13         [12] 1353 	jr	NC,00102$
                           1354 ;lib/SGlib.c:453: VDPBlank = true;								// Frame Interrupt
   06F0 21r00r00      [10] 1355 	ld	hl,#_VDPBlank + 0
   06F3 36 01         [10] 1356 	ld	(hl), #0x01
                           1357 ;lib/SGlib.c:456: KeysStatus = (~ IOPortL) & 0x3f;
   06F5 DB DC         [11] 1358 	in	a,(_IOPortL)
   06F7 2F            [ 4] 1359 	cpl
   06F8 E6 3F         [ 7] 1360 	and	a, #0x3F
   06FA 32r02r00      [13] 1361 	ld	(#_KeysStatus + 0),a
                           1362 ;lib/SGlib.c:463: PSGSFXFrame ();
   06FD CDr00r00      [17] 1363 	call	_PSGSFXFrame
                           1364 ;lib/SGlib.c:464: PSGFrame ();
   0700 CDr00r00      [17] 1365 	call	_PSGFrame
   0703                    1366 00102$:
                           1367 ;lib/SGlib.c:470: ENABLE_INTERRUPTS;
   0703 FB            [ 4] 1368 	ei 
   0704 33            [ 6] 1369 	inc	sp
   0705 FD E1         [14] 1370 	pop	iy
   0707 E1            [10] 1371 	pop	hl
   0708 D1            [10] 1372 	pop	de
   0709 C1            [10] 1373 	pop	bc
   070A F1            [10] 1374 	pop	af
   070B ED 4D         [14] 1375 	reti
                           1376 ;lib/SGlib.c:473: void SG_nmi_isr (void) __critical __interrupt {
                           1377 ;	---------------------------------
                           1378 ; Function SG_nmi_isr
                           1379 ; ---------------------------------
   070D                    1380 _SG_nmi_isr::
   070D F5            [11] 1381 	push	af
   070E C5            [11] 1382 	push	bc
   070F D5            [11] 1383 	push	de
   0710 E5            [11] 1384 	push	hl
   0711 FD E5         [15] 1385 	push	iy
                           1386 ;lib/SGlib.c:474: PauseRequested = true;
   0713 21r01r00      [10] 1387 	ld	hl,#_PauseRequested + 0
   0716 36 01         [10] 1388 	ld	(hl), #0x01
   0718 FD E1         [14] 1389 	pop	iy
   071A E1            [10] 1390 	pop	hl
   071B D1            [10] 1391 	pop	de
   071C C1            [10] 1392 	pop	bc
   071D F1            [10] 1393 	pop	af
   071E ED 45         [14] 1394 	retn
                           1395 	.area _CODE
                           1396 	.area _INITIALIZER
   0000                    1397 __xinit__VDPReg:
   0000 02                 1398 	.db #0x02	; 2
   0001 A0                 1399 	.db #0xA0	; 160
                           1400 	.area _CABS (ABS)
